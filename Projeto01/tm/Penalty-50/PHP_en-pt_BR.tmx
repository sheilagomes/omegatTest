<?xml version="1.0" encoding="UTF-8" ?>
<tmx version="1.4">
<header creationdate="Mon Oct 24 13:29:14 2011"
          srclang="en"
          adminlang="en"
          o-tmf="unknown"
          segtype="sentence"
          creationtool="Uplug"
          creationtoolversion="unknown"
          datatype="PlainText" />
  <body>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como nós geramos os formatos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual is written in XML using the DocBook XML DTD, using DSSSL (Document Style and Semantics Specification Language) for formatting, and experimentally the XSLT (Extensible Stylesheet Language Transformations) for maintenance and formatting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Experimentalmente XSLT (Extensible Stylesheet Language Transformations) para manutenção e formatação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using XML as a source format gives us the ability to generate many output formats from the source files, while only maintaining one source document for all formats.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando XML como meta dado nos permite gerar vários outros formatos a partir dos arquivos fonte, ao mesmo tempo que a manutenção é feita em um único lugar para todas as versões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The tools used for formatting HTML and TeX versions are Jade, written by James Clark and The Modular DocBook Stylesheets written by Norman Walsh.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As ferramentas utilizadas para criar as versões HTML e TeX são o Jade, escrito por James Clark, e The Modular DocBook Stylesheets, escrito por Norman Walsh.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We use Microsoft HTML Help Workshop to generate the Windows HTML Help format of the manual, and of course PHP itself to do some additional conversions and formatting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nós utilizamos o Microsoft HTML Help Workshop para criar o formato HTML Help e, é claro, o próprio PHP para fazer algumas conversões adicionais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can download the manual in various languages and formats, including plain text, plain HTML, PDF, PalmPilot DOC, PalmPilot iSilo and Windows HTML Help, from http: / /www.php.net / docs.php.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode obter o manual em várias línguas e formatos, incluindo texto simples, HTML, PDF, PalmPilot DOC, PalmPilot iSilo e Windows HTML Help, a partir do http: / /www.php.net / docs.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The manuals are updated automatically as the text is updated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os manuais são automaticamente atualizados quando da alteração dos fontes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find more information about downloading the XML source code of this documentation at http: / /cvs.php.net /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações sobre como obter os fontes XML desta documentação, veja em http: / /cvs.php.net /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The documentation is stored in the phpdoc module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A documentação é guardada no módulo phpdoc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to help improve the documentation</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como ajudar a melhorar a documentação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Translations</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Traduções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como ajudar a melhorar a documentação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are three ways you can help to improve this documentation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há várias maneiras de você contribuir a melhorar essa documentação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you find errors in this manual, in any language, please report them using the bug system at http: / /bugs.php.net /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você encontrar erros no manual, em qualquer língua, notifique-os utilizando o rastreamento de bugs em http: / /bugs.php.net /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classify the bug as &quot;Documentation Problem&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classifique o problema com um &quot;Documentation Problem&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also submit problems related to specific manual formats here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode submeter problemas específicos dos formatos do manual nesse endereço.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please don &apos;t abuse the bug system by submitting requests for help.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por favor, não abuse do rastreamento de bugs para solicitar ajuda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the mailing lists or community sites mentioned earlier, instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use as listas de discussão ou as comunidades mencionadas anteriormente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By contributing notes, you can provide additional examples, caveats, and clarifications for other readers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode também contribuir com comentários, fornecendo exemplos adicionais e esclarecimentos para outros leitores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But do not submit bug reports using the annotation system please.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas não envie notificações de bugs usando o sistema de comentários.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can read more about annotations in the &apos;About user notes&apos; section of this appendix.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode ler mais sobre os comentários na seção &apos;Sobre os comentários de usuários&apos; deste apêndice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you know English and some foreign language, you may also help out in the translations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você sabe Inglês e alguma outra língua, você pode ajudar com as traduções.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to start a new translation, or help in a translation project, please read http: / /cvs.php.net / co.php / phpdoc / howto / howto.html.tar.gz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você deseja iniciar uma nova tradução, ou ajudar num projeto de tradução, leia o http: / /cvs.php.net / co.php / phpdoc / howto / howto.html.tar.gz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to find more information about PHP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como encontrar mais informações sobre o PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP manual is provided in several formats.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sobre o manual</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These formats can be divided into two groups: online readable formats, and downloadable packages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O manual do PHP é fornecido em vários formatos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some publishers have made available printed versions of this manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esses formatos podem ser divididos em dois grupos: de leitura online e em pacotes para download.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We cannot recommend any of those, as they tend to become out-of-date very quickly.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Algumas editoras tornaram disponíveis versões impressas desse manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can read the manual online at http: / /www.php.net / You can read the manual online at http: / /www.php.net / and on the numerous mirror sites.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode ler o manual online em http: / /www.php.net / Você pode ler o manual online em http: / /www.php.net / e em numerosos mirrors.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For best performance, you should choose the mirror site closest to you.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para melhor performance, escolha o mirror localizado mais fisicamente próximo a você.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can view the manual in either its plain (print-friendly) HTML format or an HTML format that integrates the manual into the look and feel of the PHP website itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode visualizar o manual no formato HTML simples ou em um formato HTML que se assemelha ao próprio look and feel do site do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An advantage of the online manual over most of the offline formats is the integration of user-contributed notes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A vantagem do manual online para a maioria dos formatos offline é a sua integração com os comentários dos usuários.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An obvious disadvantage is that you have to be online to view the manual in the online formats.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A desvantagem óbvia é que você precisa estar online para ler o manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are several offline formats of the manual, and the most appropriate format for you depends on what operating system you use and your personal reading style.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Existem vários formatos offline do manual, e o formato mais apropriado para você depende do seu sistema operacional de seu estilo pessoal de leitura.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For information on how the manual is generated in so many formats, read the &apos;How we generate the formats&apos; section of this appendix.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para informações de como esse manual é gerado e quais são esses formatos, veja a seção &apos;Como nós criamos os formatos&apos; deste apêndice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The most cross-platform formats of the manual are the HTML and plain-text versions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As versões mais independentes de plataforma são o HTML e o texto simples.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The HTML format is provided both as a single HTML file and as a package of individual files for each section (which results in a collection of several thousand files).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O formato HTML é fornecido em um único arquivo e também como um pacote de arquivos individuais para cada seção (o que resulta numa coleção de vários milhares de arquivos).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The HTML and plaintext formats are provided as tar files compressed using the bzip2 archiver.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os formatos HTML e texto simples são condensados com o tar e comprimidos usando o bzip2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another popular cross-platform format, and the format most suited to printing, is PDF (also known as Adobe Acrobat).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outro formato popular independente de plataforma, e que ainda fornece suporte a impressão, é o PDF (também conhecido como Adobe Acrobat).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But before you rush to download this format and hit the Print button, be warned that the manual is nearly 2000 pages long, and constantly being revised.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas antes de você baixar o manual neste formato e apertar o botão Imprimir, esteja avisado que o ele tem por volta de 2000 páginas, e está sendo constantemente revisado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you do not already have a program capable of viewing PDF format files, you may need to download Adobe Acrobat Reader.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você ainda não tem um programa capaz de visualizar arquivos PDF, você precisará baixar o Adobe Acrobat Reader.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For owners of Palm-compatible handhelds, the Palm document and iSilo formats are ideal for this platform.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para proprietários de handhelds compatíveis com o Palm, os formatos DOC e iSilo são ideias para esta plataforma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can bring your handheld with you on your daily commute and use a DOC or iSilo reader to brush up on your PHP knowledge, or just use it as a quick reference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode ter no seu handheld de seu uso diário um visualizador DOC ou iSilo para aumentar seu conhecimento em PHP, ou apenas como referência rápida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For Windows platforms, the Windows HTML Help version of the manual soups up the HTML format for use with the Windows HTML Help application.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para a plataforma Windows, a versão HTML Help do manual condensa os originais no formato HTML para o uso com o HTML Help.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This version provides full-text search, a full index, and bookmarking.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse formato tem busca de textos, índice completo e marcadores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many popular Windows PHP development environments also integrate with this version of the documentation to provide easy access.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vários ambientes de desenvolvimento populares do PHP em Windows se integram com esse formato da documentação para facilitar o acesso a documentação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como encontrar mais informações sobre o PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual does not attempt to provide instruction about general programming practices.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse manual não fornece instruções sobre práticas gerais de programação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are a first-time, or even just a beginning, programmer, you may find it difficult to learn how to program in PHP using just this manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se esse é seu primeiro contato, ou se ainda está iniciando em programação, você poderá encontrar dificuldade em aprender a programar em PHP apenas usando esse manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may want to seek out a text more oriented towards beginners.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você precisa procurar textos destinados a orientar os iniciantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find a list of PHP-related books at http: / /www.php.net / books.php.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode encontrar uma lista de livros relacionados ao PHP em http: / /www.php.net / books.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are a number of active mailing lists for discussion of all aspects of programming with PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há também um grande número de listas de discussão ativas para todos os aspectos da programação com o PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you find yourself stuck on a problem for which you can &apos;t find your own solution, you may be able to get help from someone on these lists.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você se deparar com um problema que por si só não consegue solucionar, você poderá obter ajuda nestas listas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find a list of the mailing lists at http: / /www.php.net / support.php, as well as links to the mailing list archives and other online support resources.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma relação dessas listas pode ser encontrada em http: / /www.php.net / support.php, como também links para os arquivos dessas listas de discussão e outras fontes de suporte online.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Furthermore, at http: / /www.php.net / links.php there is a list of websites devoted to PHP articles, forums, and code galleries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em http: / /www.php.net / links.php há uma relação de sites com artigos, fóruns e galerias de código PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP versions documented in this manual</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como ler a definição de função (protótipo)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The user-contributed notes play an important role in the development of this manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sobre as notas de usuários</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By allowing readers of the manual to contribute examples, caveats, and further clarifications from their browser, we are able to incorporate that feedback into the main text of the manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os comentários de usuários são uma importante presença no desenvolvimento deste manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Permitindo aos usuários do manual a contribuir com exemplos e outros esclarecimentos através de seus browsers, nós podemos incorporar esse feedback no corpo do manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The user-contributed notes are not moderated before they appear online, so the quality of the writing or code examples, and even the veracity of the contribution, cannot be guaranteed. (Not that there is any guarantee of the quality or accuracy of the manual text itself.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E até que as notas sejam incorporadas, os comentários podem ser visualizados na versão online e em alguns formatos offline.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more details see the Manual &apos;s Copyright page.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As contribuições dos usuários não são moderadas antes da sua publicação online, então a qualidade desses textos e exemplos ou a veracidade e origem dessas contribuições não pode ser garantida. (Note que não há uma garantia total de qualidade ou exatidão do próprio manual.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>About the manual</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sobre o manual</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to read a function definition (prototype)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como ler a definição de função (protótipo)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix K.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice K.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>About the manual</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como ler a definição de função (protótipo)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each function is documented for quick reference, knowing how to read and understand the manual will make using PHP much easier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada função é documentada para referência rápida, e conhecendo como ler e entender o manual fará com que a utilização do PHP seja muito mais fácil.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Rather than relying on examples or cut / paste, you want to know how to read function definitions (prototypes).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mais do que simplesmente estudar exemplos ou copiar e colar, você precisa saber como ler as definições de função (protótipo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Let &apos;s begin:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vamos começar:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prerequisite:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pré-requisito:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic understanding of types:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Conhecimento básico dos tipos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although PHP is a loosly typed language, it &apos;s important to have a basic understanding of types as they have important meaning.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mesmo sendo o PHP uma linguagem fracamente tipada, é importante ter um conhecimento básico dos tipo pois eles tem um significado importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function definitions tell us what type of value is returned, let&apos; s use the definition for strlen() as our first example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Definições de função nos dizem que tipo de valor é retornado, e vamos utilizar a definição de strlen() como nosso primeiro exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>strlen (PHP 3, PHP 4 = 4.0.0) strlen - - Get string length Description int strlen (string str) Returns the length of string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>strlen (PHP 3, PHP 4 = 4.0.0) strlen - - Obtêm o tamanho da string Description int strlen (string str) Retorna o comprimento da string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table K-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela K-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Explanation of a function definition</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Detalhamento da definição da função</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Part</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Parte</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome da função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>strlen() has been around in both all of PHP 3 and PHP 4</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>strlen() está disponível em todos os PHP 3 e PHP 4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length of a string is measured in numbers).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipo do valor que esta função retorna, que no caso é um inteiro (no caso, o comprimento de uma string é medida em números).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first (and in this case the only) parameter / argument for the function strlen() is named str, and it&apos;s a string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro (e neste caso, o único) parâmetro / argumento da função strlen() é chamado str, e é uma string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We could rewrite the above function definition in a generic way:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nos podemos reescrever a definição de função acima de maneira genérica:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>returned type function name (parameter type parameter name)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tipo retornado nome da função (parametro tipo parametro tipo)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many functions take on multiple parameters, such as in_array().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Muitas funções tem parâmetros multiplos, como in_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It &apos;s prototype is as follows:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Seu protótipo é como:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What does this mean? in_array() returns a boolean value, TRUE on success (the needle was found in the haystack) or FALSE on failure (the needle was not found in the haystack).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que isso significa? in_array() retorna um valor booleano, TRUE em caso de sucesso (needle foi encontrado em haystack) ou FALSE em caso de falha (needle não foi encontrado em haystack).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first parameter is named needle and it can be many different types, so we call it &quot;mixed&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro parâmetro é chamado needle e pode de ser de vários tipos, por isso nós dizemos que ele é &quot;mixed&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This mixed needle (what we&apos;re looking for) can either be a scalar value (string, integer, or float), or an array. haystack (the array we&apos;re searching in) is the second parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse needle mixed (que nós estamos procurando) pode ser tanto um valor escalar (string, inteiro, ou float), ou um array. haystack (o array onde nós estamos procurando) é o segundo parâmetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The third optional parameter is named strict.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O terceiro parâmetro opcional é chamado strict.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All optional parameters are seen in [brackets].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todos os parâmetros opcionais aparecem dentro de [colchetes].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The manual states that the strict parameter defaults to boolean FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O manual diz que o default do parâmetro strict é o booleano FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the manual page on each function for details on how they work.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a página de do manual de cada função para detalhes de como elas funcionam.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>About user notes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sobre as notas de usuários</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP versions documented in this manual</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como encontrar mais informações sobre o PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Traduções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP manual is not only available in various formats, it is also available in various languages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O manual do PHP não está disponível apenas em vários formatos, mas também em várias línguas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The text of the manual is first written in english, then teams of people across the world take care of translating it to their native language.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O texto do manual é primeiramente escrito em Inglês, então um time de pessoas ao redor do mundo fazem a tradução em suas línguas natais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a translation for a specified function or chapter has not yet been made, the build system of the manual falls back to the english version of it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a tradução de uma função específica ou de um capítulo ainda não foi realizada, o sistema de compilação do manual utiliza a versão original em Inglês.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Peoples involved in the translations start from the XML source code available from http: / /cvs.php.net / and from it they translate to thier mother language.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As pessoas envolvidas na tradução iniciam a partir dos fontes XML disponíveis em http: / /cvs.php.net / e partir daí traduzem para sua lingua mãe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They do not use the HTML, the plain text, or the PDF version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Eles não utilizam as versões HTML, texto ou PDF.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is the build system which takes care of the conversions from XML to human readable formats.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É o sistema de compilação do manual que converte os fontes XML para formatos mais legíveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to help translating the documentation to your native language, please get in touch with the translation / documentation team subscribing to the phpdoc mailinglist: send an empty mail to phpdoc-subscribe@lists.php.net.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quiser colaborar com a tradução da documentação para a sua língua, entre e contato com o time de documentação e tradução, inscrevendo-se na lista de discussão phpdoc: para isso, encaminhe um e-mail em branco para phpdoc-subscribe@lists.php.net.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mailing list address is phpdoc@lists.php.net.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O endereço da lista é em phpdoc@lists.php.net.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>State in the message that you are interested in translating the manual to a language and someone will get back to you, helping you start a new language translation or reach the already active documentation team for your language.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Depois, encaminhe uma mensagem mencionando seu interesse em traduzir o manual para uma língua que você receberá retorno, fornecendo ajuda para você começar a tradução para uma nova língua ou participar do time de documentação da sua língua.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At the moment the manual is available, partly or not, in the following languages:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atualmente o manual está disponível, parcialmente ou não, nas seguintes línguas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Brazilian Portuguese, Chinese, Czech, Dutch, French, German, Hungarian, Italian, Japanese, Korean, Polish and Spanish.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Português (Brasil), Chinês, Checo, Holandês, Francês, Alemão, Húngaro, Italiano, Japonês, Koreano, Polonês e Espanhol.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They all can be downloaded here: http: / /www.php.net / docs.php.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todos eles podem ser baixados aqui: http: / /www.php.net / docs.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How we generate the formats</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como nós geramos os formatos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Missing Stuff</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Identificadores faltando (compilação do manual)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice F.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lista de funções sinônimas (aliases)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is the aliases list.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é a lista de funções sinônimas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All aliases are listed here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as funções sinônimas estão listadas aqui.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is usually a bad idea to use aliases, as they may be bound to obsolescence or renaming, which will lead to unportable script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Normalmente é uma má idéia utiliza-lás, pois elas estão em vias de ficarem obsoletas ou serem renomeadas, o que criaria um script não portável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This list is provided to help those who want to upgrade their old scripts to newer syntax.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta lista é fornecida para ajudar aqueles que querem atualizar os seus scripts antigos para a nova sintaxe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, some functions simply have two names, and there is no real preference. (For example, is_int() and is_integer() are equally good)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De qualquer forma, alguma funções simplesmente tem dois nomes e não tem real preferência. (Por exemplo, is_int() e is_integer() são igualmente boas)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For an alias list that updates daily, have a look here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta lista é consistente com o PHP versão 4.0.6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table F-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela F-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Aliases</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sinônimos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alias</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Função sinônimo (alias)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Master function</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Função mestre</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Extension used</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Extensão usada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List of Reserved Words</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Palavras reservadas do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>VII.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndices</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Identificadores faltando (compilação do manual)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Miscellaneous Questions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>History of PHP and related projects</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A História do PHP e projetos relacionados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix E.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice E.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the hash table in which the function is to be looked up.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>HashTable *function_table</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a pointer to an object on which the function is invoked.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pval *object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of the function to call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pval *function_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The structure must be previously allocated - call_user_function() does NOT allocate it by itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>int param_count</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A pseudo-object oriented mechanism for reading a directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dir - - classe diretório</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The given directory is opened.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um mecanismo pseudo-orientado a objeto para ler um diretório.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Two properties are available once the directory has been opened.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Duas propriedades são disponíveis uma vez que o diretório foi aberto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The handle property can be used with other directory functions such as readdir(), rewinddir() and closedir().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A propriedade handle pode ser usada com outras funções de diretório como readdir(), rewinddir() e closedir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The path property is set to path the directory that was opened.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A propriedade path é configurada para o caminho que o diretório foi aberto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Three methods are available: read, rewind and close.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Três métodos disponibilizados são: read, rewind e close.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note the fashion in which dir() &apos;s return value is checked in the example below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Repare nos detalhes de como o valor retornado de dir() é verificado no exemplo abaixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We are explicitly testing whether the return value is identical to (equal to and of the same type as--see Comparison Operators for more information) FALSE since otherwise, any directory entry whose name evaluates to FALSE will stop the loop.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nós explicitamente testamos se valor de retorno é idêntico (igual e do mesmo tipo que -- - veja operadores de comparação para mais detalhes) a FALSE, desde que, de outra forma, qualquer entrada de diretório que seja avaliada para FALSE fará parar o loop.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dir() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo dir()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$d = dir( &quot;/ etc&quot;); echo &quot;Handle: &quot;.$d - handle.&quot; br \n&quot;; echo &quot;Path: &quot;.$d - path. &quot;br \n&quot;; while (false !== ($entry = $d - read())) {echo $entry.&quot; br \n&quot;;} $d - close();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$d = dir( &quot;/ etc&quot;); echo &quot;Manipulador: &quot;.$d - handle.&quot; br \n&quot;; echo &quot;Caminho: &quot;.$d - path. &quot;br \n&quot;; while (false !== ($entry = $d - read())) {echo $entry.&quot; br \n&quot;;} $d - close();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The order in which directory entries are returned by the read method is system-dependent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A ordem em que os diretórios são retornadas pelo método é dependente do sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This defines the internal class Directory, meaning that you will not be able to define your own classes with that name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este módulo define a classe interna Directory, significando que você não será capaz de criar uma classe sua com esse nome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a full list of predefined classes in PHP, please see Predefined Classes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma lista completa das classes predefinidas no PHP, veja em Classes Predefinidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Configuration</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using PHP as an Apache module, you can also change the configuration settings using directives in Apache configuration files (e.g. httpd.conf) and .htaccess files (You will need &quot;AllowOverride Options &quot;or &quot;AllowOverride All&quot; privileges)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Rodando o PHP como módulo do Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a listing of which directives are PHP_INI_ALL, PHP_INI_PERDIR, or PHP_INI_SYSTEM, have a look at the table found within the ini_set() documentation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando usando o PHP como um módulo do Apache, você também pode mudar as definições de configuração usando diretivas na configuração do Apache (httpd.conf) e dos arquivos .htaccess (Você irá precisar de privilégios &quot;AllowOverride Options &quot;ou &quot;AllowOverride All&quot;)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With PHP 3.0, there are Apache directives that correspond to each configuration setting in the php3.ini name, except the name is prefixed by &quot;php3_&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com o PHP 3.0, existem diretivas Apache que correspondem a cada definição de configuração no nome php3.ini, exceto o nome predefinido por &quot;php3_&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Can be used only with PHP_INI_ALL and PHP_INI_PERDIR type directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com o PHP 4.0, existem várias diretivas do Apache que lhe permitem mudar a configuração PHP dentro do arquivo de configuração do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To clear a previously set value use none as the value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso define o valor da variável especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Used to set a Boolean configuration directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é usado para definir uma opção de configuração Booleana.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Can be used only with PHP_INI_ALL and PHP_INI_PERDIR type directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto define o valor da variável especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can NOT be used in .htaccess files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Definições de configuração &quot;Admin&quot; só podem ser definidas a partir dos arquivos principais de configuração do Apache, e não dos arquivos .htaccess.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any directive type set with php_admin_value can not be overridden by .htaccess or virtualhost directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Used to set a Boolean configuration directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de configuração do Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Apache configuration example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes PHP não existem fora do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, no httpd.conf não adianta utilizar-se de constantes PHP como E_ALL ou E_NOTICE para configurar a diretiva error_reporting, pois elas não tem nenhum sentido e serão avaliados como 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP constants do not exist outside of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nesses casos, utilize seus valores de bit.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the associated bitmask values instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outras interfaces para o PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regardless of the interface to PHP you can change certain values at runtime of your scripts through ini_set().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Independentemente da interface do PHP, você pode mudar certos valores em tempo de execução em seus scripts através ini_set().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following table provides an overview at which level a directive can be set / changed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A tabela seguinte explica em que nível as diretivas podem ser modificadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 4-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Definition of PHP_INI_* constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Definições das constantes PHP_INI_*</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constant</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Value</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Valor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Meaning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Significado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Entry can be set in user scripts</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretiva pode ser modificada em seus scripts</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Entry can be set in php.ini, .htaccess or httpd.conf</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretiva pode ser modificada no .htaccess e nas diretivas VHost do httpd.conf.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Entry can be set in php.ini or httpd.conf</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretiva pode ser modificada no php.ini ou httpd.conf (mas não em blocos VHost do httpd.conf).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Entry can be set anywhere</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretiva pode ser modificada em qualquer lugar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can view the settings of the configuration values in the output of phpinfo().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode visualizar as configurações das diretivas na saída de phpinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also access the values of individual configuration directives using ini_get() or get_cfg_var().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode acessar os valores individuais das configurações utilizando ini_get() ou get_cfg_var().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Configuration directives</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretivas de configuração</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretivas de configuração</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Httpd Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções Httpd</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 4-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções Httpd</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changeable</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Padrão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>async_send</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alterável</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções da Linguagem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Language and Misc Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções gerais da linguagem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Padrão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changeable</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alterável</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição resumida das diretivas de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells whether the short form (??) of PHP&apos;s open tag should be allowed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Informa quando a tag reduzida (??) do PHP pode ser permitida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to use PHP in combination with XML, you can disable this option in order to use ?xml? inline.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quiser usar o PHP em combinação com XML, você pode desligar essa opção para poder utilizar ?xml? inline.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, you can print it with PHP, for example: ?php echo &apos;?xml version=&quot;1.0&quot;&apos;;?.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De outra forma, você pode imprimir com o PHP, por exemplo: ?php echo &apos;?xml version=&quot;1.0&quot;&apos;;?.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also if disabled, you must use the long form of the PHP open tag (?php?).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se desligado, você precisará utilizar a forma longa da tag de abertura do PHP (?php?).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directive also affects the shorthand ?=, which is identical to? echo.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta diretiva também afeta o atalho ?=, que é idêntico a? echo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of this shortcut requires short_open_tag to be on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A utilização desse atalho requer short_open_tag ligado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Enables the use of ASP-like%% tags in addition to the usual ?php? tags.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ativa a utilização das tags estilo ASP%% em adição as tags ?php?.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This includes the variable-value printing shorthand of %= $value%.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto inclui o atalho de impressão de valores %= $var%.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information, see Escaping from HTML.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para mais informações, veja Alternando do HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for ASP-style tags was added in 3.0.4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O suporte a tags estilo APS foi acrescentado no 3.0.4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of significant digits displayed in floating point numbers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número de dígitos significantes exibidos em números de ponto flutuante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Enforce year 2000 compliance (will cause problems with non-compliant browsers)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Força a especificação Ano 2002 (poderá causar problemas com browsers não compatíveis)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether to enable the ability to force arguments to be passed by reference at function call time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Especifica a habilidade em forçar que argumentos possam ser passados por referência na chamada de uma função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This method is deprecated and is likely to be unsupported in future versions of PHP / Zend.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este método é obsoleto e logo não será mais suportado nas futuras versões do PHP / Zend.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The encouraged method of specifying which arguments should be passed by reference is in the function declaration.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O método recomendado para especificar que argumentos devem ser passados por referência é pela declaração da função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You&apos; re encouraged to try and turn this option Off and make sure your scripts work properly with it in order to ensure they will work with future versions of the language (you will receive a warning each time you use this feature, and the argument will be passed by value instead of by reference).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você é encorajado em tentar desligar essa opção e verificar se seus scripts trabalham adequadamente de forma a garantir que elas irã funcionar nas futuras versões da linguagem (você receberá um alerta cada vez que utilizar esse recurso, e o argumento será passado por valor em vez de por referência).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also References Explained.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também Referências Explicadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Decides whether PHP may expose the fact that it is installed on the server (e.g. by adding its signature to the Web server header).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Decide se o PHP poderá expor o fato de que ele está instalado no servidor (acrescentando sua assinatura no header do servidor web).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is no security threat in any way, but it makes it possible to determine whether you use PHP on your server or not.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto não causa problemas de segurança de qualquer forma, mas torna possível determinar se você usa o PHP em seu servidor ou não.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Resource Limits</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Limitação de recursos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 4-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Limitação de recursos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changeable</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>memory_limit</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Padrão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;8M&quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alterável</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This sets the maximum amount of memory in bytes that a script is allowed to allocate.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição resumida das diretivas de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This helps prevent poorly written scripts for eating up all available memory on a server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto configura a quantidade máxima de memória, em bytes, que um script poderá alocar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use this directive you must have enabled it at compile time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto ajuda a prevenir que scripts mal escritos acabem com toda a memória disponível do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, your configure line would have included: --enable-memory-limit.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também max_execution_time.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that you have to set it to -1 if you don &apos;t want any limit for your memory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Manipulação de dados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: max_execution_time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 4-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Data Handling Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções configuráveis para manipulação de dados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If enabled, then Environment, GET, POST, Cookie, and Server variables can be found in the global associative arrays $_ENV, $_GET, $_POST, $_COOKIE, and $_SERVER.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se ativado, quaisquer variáveis Environment, GET, POST, Cookie e Server encontradas poderão ser acessadas nos arrays globais associativos $_ENV, $_GET, $_POST, $_COOKIE e $_SERVER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that as of PHP 4.0.3, track_vars is always turned on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que a partir do PHP 4.0.3, track_vars está sempre ativado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The separator used in PHP generated URLs to separate arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O separador de parâmetros em URLs geradas pelo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List of separator( s) used by PHP to parse input URLs into variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lista dos separador( es) utilizados pelo PHP para interpretar URLs em variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every character in this directive is considered as separator!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada caracter nesta diretiva é considerado como um separador!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the order of the EGPCS (Environment, GET, POST, Cookie, Server) variable parsing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configura a ordem de interpretação das variáveis EGPCS (Environment, GET, POST, Cookie e Server).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default setting of this directive is &quot;EGPCS&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O default dessa diretiva é &quot;EGPCS&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting this to &quot;GP&quot;, for example, will cause PHP to completely ignore environment variables, cookies and server variables, and to overwrite any GET method variables with POST-method variables of the same name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configurando para &quot;GP&quot;, por exemplo, fará com que o PHP ignore completamente variáveis de ambiente (E), cookies (C) e do servidor (S), sendo que qualquer variável GET será sobrescrita por qualquer variável do método POST com o mesmo nome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also register_globals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também register_globals.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells whether or not to register the EGPCS (Environment, GET, POST, Cookie, Server) variables as global variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ativa ou não o registro de variáveis EGPCS (Environment, GET, POST, Cookie e Server) como variáveis globais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example; if register_globals = on, the url http: / /www.example.com / test.php?id=3 will produce $id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo: se register_globals = on, a URL http: / /www.example.com / test.php?id=3 irá criar a variável $id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Or, $DOCUMENT_ROOT from $_SERVER[ &apos;DOCUMENT_ROOT&apos;].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ou, $DOCUMENT_ROOT de $_SERVER[ &apos;DOCUMENT_ROOT&apos;].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may want to turn this off if you don&apos; t want to clutter your scripts&apos; global scope with user data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode desligar essa diretiva se você não deseja sujar o escopo global de seus scripts com dados do usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.2.0, this directive defaults to off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.0, o padrão dessa diretiva é off.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It &apos;s preferred to go through PHP Predefined Variables instead, such as the superglobals: $_ENV, $_GET, $_POST, $_COOKIE, and $_SERVER.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É preferível utilizar as variáveis predefinidas do PHP, como as superglobals: $_ENV, $_GET, $_POST, $_COOKIE e $_SERVER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read the security chapter on Using register_globals for related information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Leia cuidadosamente o capitulo de segurança em Utilizando register_globals para mais informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that register_globals cannot be set at runtime (ini_set()).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja que register_globals não pode ser alterado em tempo de execução (ini_set()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although, you can use .htaccess if your host allows it as described above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, você pode utilizar o .htaccess Entretanto, você pode utilizar o .htaccess se seu host permitir como descrito anteriormente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example .htaccess entry: php_flag register_globals on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo de entrada do .htaccess: php_flag register_globals on.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells PHP whether to declare the argv argc variables (that would contain the GET information).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configura quando o PHP deve declarar ou não as variáveis argv e argc (que podem conter dados do método GET).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also command line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também Utilizando o PHP em linha de comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, this directive became available in PHP 4.0.0 and was always &quot;on&quot; before that.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além, essa diretiva foi criada no PHP 4.0.0 e sempre foi &quot;ativa&quot; antes disso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets max size of post data allowed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configura o tamanho máximo dos dados postados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This setting also affects file upload.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta configuração também afeta o upload de arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To upload large files, this value must be larger than upload_max_filesize.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para receber arquivos grandes, esse valor precisa ser maior que upload_max_filesize.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If memory limit is enabled by your configure script, memory_limit also affects file uploading.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o limite de memória estiver ativado em seu script de configuração, memory_limit também afeta o upload de arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Generally speaking, memory_limit should be larger than post_max_size.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Falando diretamente, memory_limit precisa ser maior que post_max_size.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the order of GET / POST / COOKIE variable parsing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Informa a ordem de interpretação das variáveis GET / POST / COOKIE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default setting of this directive is &quot;GPC&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão dessa diretiva é &quot;GPC&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting this to &quot;GP&quot;, for example, will cause PHP to completely ignore cookies and to overwrite any GET method variables with POST-method variables of the same name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configurando para &quot;GP&quot;, por exemplo, fará com que o PHP ignore completamente cookies e que sobrescreva qualquer dado postado via GET por variáveis postados via POST que tenham o mesmo nome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option is not available in PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção não está disponível no PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use variables_order instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilize variables_order no seu lugar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Specifies the name of a file that is automatically parsed before the main file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Especifica o nome do arquivo que será automaticamente interpretado antes do arquivo principal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file is included as if it was called with the include() function, so include_path is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo é incluído como se ele fosse chamado com a função include(), então include_path é utilizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The special value none disables auto-prepending.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor especial none desabilita a auto inclusão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Specifies the name of a file that is automatically parsed after the main file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Especifica se o nome do arquivo que será automaticamente interpretado depois do arquivo principal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file is included as if it was called with the include() function, so include_path is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo é incluído como se ele fosse chamada a função include(), então include_path é utilizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The special value none disables auto-appending.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor especial none desabilita a auto inclusão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the script is terminated with exit(), auto-append will not occur.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o script é terminado com exit(), a auto inclusão não irá ocorrer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of 4.0b4, PHP always outputs a character encoding by default in the Content-type: header.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir da versão 4.0b4, o PHP sempre emite a codificação de caracter por padrão no header Content-type:.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To disable sending of the charset, simply set it to be empty.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para desabilitar o envio do código de página, simplesmente deixe a diretiva em branco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Always populate the $HTTP_RAW_POST_DATA variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sempre preenche a variável $HTTP_RAW_POST_DATA.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Allow handling of WebDAV http requests within PHP scripts (eg.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Permite a manipulação de headers HTTP com scripts PHP (com PROPFIND, PROPPATCH, MOVE, COPY, etc).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PROPFIND, PROPPATCH, MOVE, COPY, etc..) If you want to get the post data of those requests, you have to set always_populate_raw_post_data as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também magic_quotes_gpc, magic-quotes-runtime, e magic_quotes_sybase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: magic_quotes_gpc, magic-quotes-runtime, and magic_quotes_sybase.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Paths and Directories</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 4-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Paths and Directories Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração de caminhos e diretórios</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Specifies a list of directories where the require(), include() and fopen_with_path() functions look for files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Especifica a lista de diretórios onde as funções require(), include() and fopen_with_path() procurarão por arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The format is like the system &apos;s PATH environment variable: a list of directories separated with a colon in UNIX or semicolon in Windows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O formato é o mesmo que o da variável ambiente PATH: uma lista de diretórios, separador por vírgula no UNIX ou ponto e vírgula no Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>UNIX include_path</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4-3. include_path UNIX</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>include_path=&quot;.: / php / includes &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>include_path=.: / home / httpd / php-lib</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows include_path</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4-4. include_path Windows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>include_path=&quot; .;c:\php\includes &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>include_path=&quot; .;c:\www\phplib &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using a. in the include path allows for relative includes as it means the current directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O &quot;diretório root&quot; do PHP no servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP&apos; s &quot;root directory &quot;on the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizado somente se for preenchido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP is configured with safe mode, no files outside this directory are served.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o PHP estiver configurado com safe mode, nenhum arquivo acima desse diretório será acessível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root if you are running php as a CGI under any web server (other than IIS) The alternative is to use the cgi.force_redirect configuration below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o PHP não estiver compilado com FORCE_REDIRECT, você DEVE configurar doc_root se estiver rodando o PHP como CGI sob qualquer servidor web (que não o IIS) Outra alternativa é configurar a diretiva cgi.force_redirect, abaixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The base name of the directory used on a user &apos;s home directory for PHP files, for example public_html.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O caminho base do usado como diretório home do usuário para arquivos PHP, por exemplo public_html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In what directory PHP should look for dynamically loadable extensions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretório de onde o PHP poderá carregar dinamicamente as extensões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: enable_dl, and dl().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também enable_dl e dl().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Which dynamically loadable extensions to load when PHP starts up.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Que extensões dinamicamente carregáveis devem ser carregadas quando o PHP inicia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>cgi.force_redirect is necessary to provide security running PHP as a CGI under most web servers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cgi.force_redirect é necessário para prover segurança quando rodando o PHP como módulo sob a maioria dos servidores web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Left undefined, PHP turns this on by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se deixado indefinido, o PHP assume como ativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can turn it off AT YOUR OWN RISK.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode desligá-lo SOB SEU RISCO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows Users:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usuários Windows:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You CAN safely turn this off for IIS, in fact, you MUST.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você PODE desligar isso no ISS, e de fato, você DEVE fazê-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get OmniHTTPD or Xitami to work you MUST turn it off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para que o OmniHTTPD ou Xitami funcionem, você PRECISA desligá-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If cgi.force_redirect is turned on, and you are not running under Apache or Netscape (iPlanet) web servers, you MAY need to set an environment variable name that PHP will look for to know it is OK to continue execution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se cgi.force_redirect estiver ativado, e se não estiver rodando o PHP sob os servidores web Apache ou Netscape (iPlanet), você PRECISARÁ configurar uma variável de ambiente que o PHP procurará para saber se ele pode continuar a execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting this variable MAY cause security issues, KNOW WHAT YOU ARE DOING FIRST.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configurar essa variável PODERÁ causar problemas de segurança, POR ISSO SAIBA QUE ESTEJA FAZENDO PRIMEIRO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FastCGI under IIS (on WINNT based OS) supports the ability to impersonate security tokens of the calling client.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>FastCGI sob o IIS (em sistemas baseados em WinNT) suporta a habilidade de despersonalizar tokens de segurança da chamado do cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This allows IIS to define the security context that the request runs under. mod_fastcgi under Apache does not currently support this feature (03 / 17 / 2002) Set to 1 if running under IIS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configure 1 se estiver rodando sob o ISS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default is zero.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão é zero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4-7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Upload de arquivos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>File Uploads Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração para upload de arquivos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether or not to allow HTTP file uploads.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Permite ou não upload de arquivos HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the upload_max_filesize, upload_tmp_dir, and post_max_size directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também upload_max_filesize, upload_tmp_dir e post_max_size directives.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The temporary directory used for storing files when doing file upload.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O diretório temporário utilizado para armazenar arquivos quando realizando o upload de arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Must be writable by whatever user PHP is running as.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele precisa ter permissão de escrita para qualquer usuário que for rodar o PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not specified PHP will use the system &apos;s default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se não especificado, o PHP utilizará o default do sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum size of an uploaded file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tamanho máximo de um arquivo para upload.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4-8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SQL Geral</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>General SQL Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração SQL gerais</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretivas de configuração do debugador</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DNS name or IP address of host used by the debugger.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome DNS ou endereço IP do host utilizado pelo debugador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Port number used by the debugger.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Porta utilizado pelo debugador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether the debugger is enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Controle de ativação do debugador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to change configuration settings</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como alterar as configurações definidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The configuration file (called php3.ini in PHP 3.0, and simply php.ini as of PHP 4.0) is read when PHP starts up.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the server module versions of PHP, this happens only once when the web server is started.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo de configuração (chamado php3.ini no PHP 3.0, e simplesmente php.ini no PHP 4.0) é lido quando o PHP inicia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the CGI and CLI version, it happens on every invocation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para as versões de módulos de servidor do PHP, isso só acontece uma vez quando o servidor é iniciado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default location of php.ini is a compile time option (see the FAQ entry), but can be changed for the CGI and CLI version with the -c command line switch, see the chapter about using PHP from the command line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A localização padrão do php.ini é uma opção de compilação (veja a FAQ correspondente), mas pode ser modificada para as versões CGI e CLI com o opcional -c (mais informações em utilizando o PHP na linha de comando).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also use the environment variable PHPRC for an additional path to search for a php.ini file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode utilizar a variavável ambiente PHPRC para colocar caminhos adicionais para a procura do arquivo php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not every PHP directive is documented below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que nem todas as diretivas do PHP estão documentadas a seguir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a list of all directives, please read your well commented php.ini file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma lista completa, leia o seu próprio e bem comentado arquivo php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may want to view the latest php.ini here from CVS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode ver a versão mais atualizada diretamente do CVS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default value for the PHP directive register_globals changed from on to off in PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor default da diretiva register_globals mudou de on para off a partir do PHP 4.2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4-1. php.ini example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4-1. php.ini example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>; any text on a line after an unquoted semicolon (;) is ignored [php]; section markers (text within square brackets) are also ignored; Boolean values can be set to either:; true, on, yes; or false, off, no, none register_globals = off magic_quotes_gpc = yes; you can enclose strings in double-quotes include_path = &quot;.: / usr / local / lib / php &quot;; backslashes are treated the same as any other character include_path = &quot;.;c:\php\lib&quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>; qualquer texto depois de um ponto e vírgula não delimitado (;) é ignorado [php]; marcadores de seção (texto entre colchetes) também são ignorados; Valores booleanos podem ser:; true, on, yes; ou false, off, no, none register_globals = off magic_quotes_gpc = yes; você pode delimitar strings com aspas include_path = &quot;.: / usr / local / lib / php &quot;; barras invertidas são tratadas da mesma maneira que outros caracteres include_path = &quot;.;c:\php\lib&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe alternativa para estruturas de controle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP offers an alternative syntax for some of its control structures; namely, if, while, for, foreach, and switch.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP oferece uma sintaxe alternativa para algumas das suas estruturas de controle: if, while, for, foreach e switch.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In each case, the basic form of the alternate syntax is to change the opening brace to a colon (:) and the closing brace to endif;, endwhile;, endfor;, endforeach;, or endswitch;, respectively.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em cada caso, a forma básica da sintaxe alternativa é mudar o sinal de abertura para dois-pontos (:) e o sinal de fechamento para endif;, endwhile;, endfor;, endforeach; ou endswitch;, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A is equal to 5 ?php endif;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A é igual a 5 ?php endif;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the above example, the HTML block &quot;A is equal to 5&quot; is nested within an if statement written in the alternative syntax.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No exemplo acima, o bloco HTML &quot;A é igual a 5&quot; está aninhado dentro de uma instrução if No exemplo acima, o bloco HTML &quot;A é igual a 5 &quot;está aninhado dentro de uma instrução if escrito na sintaxe alternativa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The HTML block would be displayed only if $a is equal to 5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O bloco HTML será mostrado somente se $a é igual a 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The alternative syntax applies to else and elseif as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe alternativa se aplica a else e elseif também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following is an if structure with elseif and else in the alternative format:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A seguir temos uma estrutura if com elseif e else no formato alternativo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a == 5): print &quot;a equals 5&quot;; print &quot;.. .&quot;; elseif ($a == 6): print &quot;a equals 6&quot;; print &quot;!! !&quot;; else: print &quot;a is neither 5 nor 6&quot;; endif;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if ($a == 5): print &quot;a igual a 5&quot;; print &quot;.. .&quot;; elseif ($a == 6): print &quot;a igual a 6&quot;; print &quot;!! !&quot;; else: print &quot;a não é nem 5 nem 6&quot;; endif;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also while, for, and if for further examples.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: while, for e if para mais exemplos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>break</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>break ends execution of the current for, foreach while, do..while or switch structure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>break cancela a execução do comando for, foreach while, do..while ou switch atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>break accepts an optional numeric argument which tells it how many nested enclosing structures are to be broken out of.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>break aceita um argumento numérico opcional que diz a ele quantas estruturas aninhadas englobadas devem ser quebradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$arr = array (&apos;one&apos;, &apos;two&apos;, &apos;three&apos;, &apos;four&apos;, &apos;stop&apos;, &apos;five&apos;); while (list (, $val) = each ($arr)) {if ($val == &apos;stop&apos;) {break; / * You could also write&apos;break 1; &apos;here. * /} echo &quot;$val br \n&quot;;} / * Using the optional argument. * / $i = 0; while (++$i) {switch ($i) {case 5: echo &quot;At 5 br \n&quot;; break 1; / * Exit only the switch. * / case 10: echo &quot;At 10; quitting br \n&quot;; break 2; / * Exit the switch and the while. * / default: break;}}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$arr = array (&apos;um&apos;, &apos;dois&apos;, &apos;três&apos;, &apos;quatro&apos;, &apos;PARE&apos;, &apos;cinco&apos;); while (list (, $val) = each ($arr)) {if ($val == &apos;PARE&apos;) {break; / * Você poderia colocar &apos;break 1; &apos;aqui. * /} echo &quot;$val br \n&quot;;} / * Utilizando o argumento opcional. * / $i = 0; while (++$i) {switch ($i) {case 5: echo &quot;No 5 br \n&quot;; break 1; / * Sai somente do switch. * / case 10: echo &quot;No 10; saindo br \n&quot;; break 2; / * Sai do switch e while. * / default: break;}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>continue</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>continue is used within looping structures to skip the rest of the current loop iteration and continue execution at the beginning of the next iteration.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>continue é usado dentro de estruturas de loops para saltar o resto da iteração do loop atual e continuar a execução no início da próxima iteração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>continue accepts an optional numeric argument which tells it how many levels of enclosing loops it should skip to the end of.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>continue aceita um argumento numérico opcional que diz a ele de quantos níveis de loops aninhados ele deve saltar até o fim.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while (list ($key, $value) = each ($arr)) {if (!($key% 2)) {/ / skip odd members continue;} do_something_odd ($value);} $i = 0; while ($i+ + 5) {echo &quot;Outer br \n&quot;; while (1) {echo &quot;nbsp; nbsp;Middle br \n&quot;; while (1) {echo&quot; nbsp; nbsp;Inner br \n&quot;; continue 3;} echo &quot;This never gets output. br \n&quot;;} echo &quot;Neither does this. br \n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>while (list ($key, $value) = each ($arr)) {if (!($key% 2)) {/ / pula itens pares continue;} do_something_odd ($value);} $i = 0; while ($i+ + 5) {echo &quot;Fora br \n&quot;; while (1) {echo &quot;nbsp; nbsp;Meio br \n&quot;; while (1) {echo&quot; nbsp; nbsp;Dentro br \n&quot;; continue 3;} echo &quot;Isto nunca será exibido. br \n&quot;;} echo &quot;Nem isso. br \n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The declare construct is used to set execution directives for a block of code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O construtor declare é utilizado para configurar diretivas de execução para blocos de código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax of declare is similar to the syntax of other flow control constructs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe do declare é similar a sintaxe de outros construtores de controle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>declare (directive) statement</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>declare (diretiva) instrucao</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The directive section allows the behavior of the declare block to be set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A seção diretiva permite o comportamento do bloco declare a ser configurado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently only one directive is recognized: the ticks directive. (See below for more information on the ticks directive)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atualmente somente uma diretiva é reconhecida: a diretiva ticks. (veja abaixo para maiores informações em diretiva ticks)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The statement part of the declare block will be executed - - how it is executed and what side effects occur during execution may depend on the directive set in the directive block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como ela é executada e que efeitos colaterais que podem ocorrem durante a execução dependem da configuração diretiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A tick is an event that occurs for every N low-level statements executed by the parser within the declare A tick is an event that occurs for every N low-level statements executed by the parser within the declare block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um tick é um evento que ocorre para cada N níveis de instruções executados pelo interpretador com o bloco declare.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value for N is specified using ticks= N within the declare blocks&apos; s directive section.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor para N é especificado utilizando ticks= N nos blocos declare das seções diretiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The event( s) that occur on each tick are specified using the register_tick_function().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O( s) evento(s) que ocorre(m) em cada tick são especificados utilizando register_tick_function().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the example below for more details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja o exemplo abaixo para maiores detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that more than one event can occur for each tick.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que mais de um evento pode ocorrer em cada tick.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 12-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Profile a section of PHP code</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Histórico de um trecho de código PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / A function that records the time when it is called function profile ($dump = FALSE) {static $profile; / / Return the times stored in profile, then erase it if ($dump) {$temp = $profile; unset ($profile); return ($temp);} $profile[] = microtime ();} / / Set up a tick handler register_tick_function(&quot;profile&quot;); / / Initialize the function before the declare block profile (); / / Run a block of code, throw a tick every 2nd statement declare (ticks=2) {for ($x = 1; $x 50; ++$x) {echo similar_text (md5($x), md5($x*$x)), &quot;br / ;&quot;;}} / / Display the data stored in the profiler print_r (profile (TRUE));?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Uma função que grava o tempo entre as chamadas function profile ($dump = FALSE) {static $profile; / / Retorna os tempos preservados no histórico, então apaga if ($dump) {$temp = $profile; unset ($profile); return ($temp);} $profile[] = microtime ();} / / Ativa o manipulador do tick register_tick_function(&quot;profile&quot;); / / Inicializa a função antes de declarar o bloco profile (); / / Roda um trecho de código, disparando um tick a cada duas instruções declare (ticks=2) {for ($x = 1; $x 50; ++$x) {echo similar_text (md5($x), md5($x*$x)), &quot;br / ;&quot;;}} / / Mostra os dados guardados no histórico print_r (profile (TRUE));?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Ticks are well suited for debugging, implementing simple multitasking, backgrounded I / O and many other tasks.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ticks são idealizados para debug, implementação de multitask simples, processos de I / O em background e afins.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also register_tick_function() and unregister_tick_function().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: register_tick_function() e unregister_tick_function().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>do..while</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>do..while loops are very similar to while loops, except the truth expression is checked at the end of each iteration instead of in the beginning.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Loops do..while são bem similares aos loops while, exceto pelo fato de que a condição é verificada no fim de cada iteração em vez de no começo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The main difference from regular while loops is that the first iteration of a do..while loop is guaranteed to run (the truth expression is only checked at the end of the iteration), whereas it&apos;s may not necessarily run with a regular while loop (the truth expression is checked at the beginning of each iteration, if it evaluates to FALSE right from the beginning, the loop execution would end immediately).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A diferença principal dos loops while regulares é que a primeira iteração de um loop do..while é garantidamente executada (a condição só é verificada no fim da iteração) enquanto que ele pode não rodar necessariamente em um loop while normal (a condição é verificada no começo de cada iteração, se ela é avaliada como FALSE logo no começo, a execução do loop terminaria imediatamente).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is just one syntax for do..while loops:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há apenas uma sintaxe para loops do..while:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above loop would run one time exactly, since after the first iteration, when truth expression is checked, it evaluates to FALSE ($i is not bigger than 0) and the loop execution ends.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O loop acima rodaria exatamente uma vez, desde que depois da primeira iteração, quando a condição é verificada, ela é avaliada como FALSE ($i não é maior que zero 0) e a execução do loop termina.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Advanced C users may be familiar with a different usage of the do..while loop, to allow stopping execution in the middle of code blocks, by encapsulating them with do..while (0), and using the break statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usuários avançados de C podem estar familiarizados com o uso diferenciado do loop do..while, para permitir o fim da execução no meio dos blocos de código, englobando-os com do..while (0), e usando a instrução break.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following code fragment demonstrates this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O fragmento de código a seguir demonstra isso:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>do {if ($i 5) {print &quot;i is not big enough&quot;; break;} $i *= $factor; if ($i $minimum_limit) {break;} print &quot;i is ok&quot;; ...process i...} while(0);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>do {if ($i 5) {print &quot;i não é grande o suficiente&quot;; break;} $i *= $factor; if ($i $minimum_limit) {break;} print &quot;i está Ok&quot;; ...process i...} while(0);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Don&apos; t worry if you don&apos;t understand this right away or at all.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não se preocupe se você não entendeu isto da forma certa ou de jeito nenhum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can code scripts and even powerful scripts without using this&apos; feature &apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode codificar scripts simples ou mesmo poderosos sem usar esse &apos;recurso&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>else</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Often you &apos;d want to execute a statement if a certain condition is met, and a different statement if the condition is not met.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Freqüentemente você vai querer executar uma instrução se uma certa condição for encontrada, e uma instrução diferente se a condição não for encontrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is what else is for. else extends an if statement to execute a statement in case the expression in the if statement evaluates to FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é o que o else faz. else estende um comando if para executar uma instrução caso a expressão no comando if seja avaliada como FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the following code would display a is bigger than b if $a is bigger than $b, and a is NOT bigger than b otherwise:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, o código a seguir mostraria a é maior que b se $a for maior que $b, e a NÃO é maior que b caso contrário:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a $b) {print &quot;a is bigger than b&quot;;} else {print &quot;a is NOT bigger than b&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if ($a $b) {print &quot;a é maior que b&quot;;} else {print &quot;a NÃO é maior que b&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>elseif</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>elseif, as its name suggests, is a combination of if and else.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>elseif, como seu nome sugere, é uma combinação de if e else.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like else, it extends an if statement to execute a different statement in case the original if expression evaluates to FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Da mesma forma que o else, ele estende um comando if para executar uma instrução diferente no caso de a expressão if original ser avaliada como FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, unlike else, it will execute that alternative expression only if the elseif conditional expression evaluates to TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Porém, ao contrário de else, ele executará aquela expressão alternativa somente se a expressão condicional do elseif for avaliada como TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the following code would display a is bigger than b, a equal to b or a is smaller than b:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, o código a seguir mostraria a é maior que b, a é igual a b ou a é menor que b:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a $b) {print &quot;a is bigger than b&quot;;} elseif ($a == $b) {print &quot;a is equal to b&quot;;} else {print &quot;a is smaller than b&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if ($a $b) {print &quot;a é maior que b&quot;;} elseif ($a == $b) {print &quot;a é igual a b&quot;;} else {print &quot;a é menor que b b&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There may be several elseif s within the same if statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Podem haver vários elseif s dentro da mesma instrução if.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first elseif expression (if any) that evaluates to TRUE would be executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A primeira expressão elseif (se houver) que for avaliada como TRUE será executada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP, you can also write &apos;else if&apos; (in two words) and the behavior would be identical to the one of&apos;elseif &apos;(in a single word).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP, você também pode escrever &apos;else if&apos; (em duas palavras) e o comportamento será idêntico a um &apos;elseif &apos;(em uma só palavra).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntactic meaning is slightly different (if you&apos;re familiar with C, this is the same behavior) but the bottom line is that both would result in exactly the same behavior.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O significado sintático é ligeiramente diferente (se você está familiarizado com C, eles tem o mesmo comportamento), mas no final de contas ambos teriam exatamente o mesmo comportamento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The elseif statement is only executed if the preceding if expression and any preceding elseif expressions evaluated to FALSE, and the current elseif expression evaluated to TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comando elseif só é executado se a expressão if precedente e quaisquer expressões elseif anteriores forem avaliadas como FALSE, e a expressão elseif atual for avaliada como TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alternative syntax for control structures</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe alternativa para estruturas de controle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>foreach</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 (not PHP 3) includes a foreach construct, much like Perl and some other languages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP4 (mas não o PHP3) inclui um construtor foreach, muito parecido com o PERL e outras linguagens.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This simply gives an easy way to iterate over arrays. foreach works only on arrays, and will issue an error when you try to use it on a variable with a different data type or an uninitialized variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto oferece uma maneira fácil de iterar sobre matrizes. foreach funciona somente com arrays, e lançará um erro se tentar utilizá-lo em uma variável de qualquer tipo diferente ou em variáveis não inicializadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two syntaxes; the second is a minor but useful extension of the first:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há duas sintaxes; a segunda é uma abreviatura, mas útil, da primeira:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>foreach( array_expression as $value) statement foreach(array_expression as $key = $value) statement</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>foreach( expressao_array as $valor) instrucoes foreach(expressao_array as $chave = $valor) instrucoes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first form loops over the array given by array_expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A primeira forma varre uma dada matriz dada por expressao_array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On each loop, the value of the current element is assigned to $value and the internal array pointer is advanced by one (so on the next loop, you&apos;ll be looking at the next element).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em cada &apos;loop&apos;, o valor do elemento corrente é atribuído a $valor e o ponteiro interno da matriz é avançado em uma posição (assim, no próxima iteração você estará olhando para o próximo elemento).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second form does the same thing, except that the current element &apos;s key will be assigned to the variable $key on each loop.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A segunda forma faz a mesma coisa, exceto pelo fato de que a chave do elemento atual será atribuído à variável $chave em cada iteração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When foreach first starts executing, the internal array pointer is automatically reset to the first element of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o foreach Quando o foreach inicia sua primeira execução, o ponteiro interno da matriz é zerado automaticamente para o primeiro elemento do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that you do not need to call reset() before a foreach loop.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que você não precisa chamar reset() antes de um loop foreach.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, the internal pointer of the original array is advanced with the processing of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note também que foreach opera sobre uma cópia do array especificado, não o próprio array, portanto o ponteiro da array não é modificado como na instrução each(), que altera o elemento do array selecionado, mas isso não se reflete o array original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may have noticed that the following are functionally identical:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode ter notado que os seguintes itens são funcionalmente idênticos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>reset ($arr); while (list(, $value) = each ($arr)) {echo &quot;Value: $value br \n&quot;;} foreach ($arr as $value) {echo &quot;Value: $value br \n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>reset ($arr); while (list(, $value) = each ($arr)) {echo &quot;Valor: $value br \n&quot;;} foreach ($arr as $value) {echo &quot;Valor: $value br \n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>reset ($arr); while (list($key, $value) = each ($arr)) {echo &quot;Key: $key; Value: $value br \n&quot;;} foreach ($arr as $key = $value) {echo &quot;Key: $key; Value: $value br \n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>reset ($arr); while (list($key, $value) = each ($arr)) {echo &quot;Chave: $key; Valor: $value br \n&quot;;} foreach ($arr as $key = $value) {echo &quot;Chave: $key; Valor: $value br \n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some more examples to demonstrate usages:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mais alguns exemplos para demonstrar os usos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* foreach example 1: value only * / $a = array (1, 2, 3, 17); foreach ($a as $v) {print &quot;Current value of \$a: $v.\n&quot;;} / * foreach example 2: value (with key printed for illustration) * / $a = array (1, 2, 3, 17); $i = 0; / * for illustrative purposes only * / foreach($a as $v) {print &quot;\$a[$i] = $v.\n&quot;; $i++;} / * foreach example 3: key and value * / $a = array (&quot;one &quot;= 1, &quot;two&quot; = 2, &quot;three &quot;= 3, &quot;seventeen&quot; = 17); foreach($a as $k = $v) {print &quot;\$a[$k] = $v.\n&quot;;} / * foreach example 4: multi-dimensional arrays * / $a[0][0] = &quot;a&quot;; $a[0][1] = &quot;b&quot;; $a[1][0] = &quot;y&quot;; $a[1][1] = &quot;z&quot;; foreach($a as $v1) {foreach ($v1 as $v2) {print &quot;$v2\n&quot;;}} / * foreach example 5: dynamic arrays * / foreach(array(1, 2, 3, 4, 5) as $v) {print &quot;$v\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/* exemplo foreach 1: somente valores * / $a = array (1, 2, 3, 17); foreach ($a as $v) {print &quot;Valor atual de \$a: $v.\n&quot;;} / * exemplo foreach 2: valores (com as chaves impressas para ilustração) * / $a = array (1, 2, 3, 17); $i = 0; / * para exemplo somente * / foreach($a as $v) {print &quot;\$a[$i] = $v.\n&quot;; $i++;} / * exemplo foreach 3: chaves e valores * / $a = array (&quot;um &quot;= 1, &quot;dois&quot; = 2, &quot;três &quot;= 3, &quot;dezessete&quot; = 17); foreach($a as $k = $v) {print &quot;\$a[$k] = $v.\n&quot;;} / * exemplo foreach 4: arrays multidimensionais * / $a[0][0] = &quot;a&quot;; $a[0][1] = &quot;b&quot;; $a[1][0] = &quot;y&quot;; $a[1][1] = &quot;z&quot;; foreach($a as $v1) {foreach ($v1 as $v2) {print &quot;$v2\n&quot;;}} / * exemplo foreach 5: arrays dinâmicos * / foreach(array(1, 2, 3, 4, 5) as $v) {print &quot;$v\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>for</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>for loops are the most complex loops in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Loops for são os laços mais complexos em PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They behave like their C counterparts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Eles se comportam como os seus compatíveis em C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax of a for loop is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe de um loop for é:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>for (expr1; expr2; expr3) statement</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>for (expr1; expr2; expr3) instrucoes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first expression (expr1) is evaluated (executed) once unconditionally at the beginning of the loop.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A primeira expressão (expr1) é avaliada (executada) uma vez incondicionalmente no começo do loop.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the beginning of each iteration, expr2 is evaluated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No começo de cada iteração, expr2 é avaliada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it evaluates to TRUE, the loop continues and the nested statement( s) are executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se ela é avaliada como TRUE, o loop continua e o( s) comando(s) aninhado(s) é(são) executado(s).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it evaluates to FALSE, the execution of the loop ends.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se é avaliada como FALSE, a execução do &apos;loop&apos; termina.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At the end of each iteration, expr3 is evaluated (executed).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No fim de cada iteração, expr3 é avaliada (executada).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each of the expressions can be empty. expr2 being empty means the loop should be run indefinitely (PHP implicitly considers it as TRUE, like C).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada uma das expressões pode ser vazia. expr2 vazia significa que o loop pode rodar indefinidamente (PHP considera-a implicitamente como TRUE, como em C).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This may not be as useless as you might think, since often you &apos;d want to end the loop using a conditional break statement instead of using the for truth expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode não ser tão inútil quanto você pode pensar, pois freqüentemente você pode querer terminar o &apos;loop&apos; usando uma instrução break condicional em vez de usar a expressão-verdade do for.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider the following examples.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Considere os seguintes exemplos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All of them display numbers from 1 to 10:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todos eles mostram números de 1 a 10:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* example 1 * / for ($i = 1; $i = 10; $i++) {print $i;} / * example 2 * / for ($i = 1;;$i++) {if ($i 10) {break;} print $i;} / * example 3 * / $i = 1; for (;;) {if ($i 10) {break;} print $i; $i++;} / * example 4 * / for ($i = 1; $i = 10; print $i, $i++);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/* exemplo 1 * / for ($i = 1; $i = 10; $i++) {print $i;} / * exemplo 2 * / for ($i = 1;;$i++) {if ($i 10) {break;} print $i;} / * exemplo 3 * / $i = 1; for (;;) {if ($i 10) {break;} print $i; $i++;} / * exemplo 4 * / for ($i = 1; $i = 10; print $i, $i++);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, the first example appears to be the nicest one (or perhaps the fourth), but you may find that being able to use empty expressions in for loops comes in handy in many occasions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Obviamente, o primeiro exemplo parece ser o mais bonito (ou talvez o quarto), mas você pode perceber que a possível utilização de expressões vazias em laços for se torna prático em algumas ocasiões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also supports the alternate &quot;colon syntax&quot; for for loops.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP também suporta a &quot;sintaxe de dois-pontos&quot; alternativa para laços for:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>for (expr1; expr2; expr3): statement;...; endfor;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>for (expr1; expr2; expr3): instrucoes;...; endfor;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other languages have a foreach Other languages have a foreach statement to traverse an array or hash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outras linguagens têm uma instrução foreach para varrer uma matriz ou tabela de hashing.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 has no such construct; PHP 4 does (see foreach).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP 3 não tem uma construção deste tipo; O PHP 4 possui (veja foreach).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, you can combine while with the list() and each() functions to achieve the same effect.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, você pode combinar while com as funções list() e each() para obter o mesmo efeito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the documentation for these functions for an example.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a documentação para estas funções para exemplos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any PHP script is built out of a series of statements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estruturas de Controle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A statement can be an assignment, a function call, a loop, a conditional statement of even a statement that does nothing (an empty statement).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma instrução pode ser uma atribuição, uma chamada de função, um &apos;loop&apos;, uma instrução condicional, ou mesmo uma instrução que não faz nada(um comando vazio).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Statements usually end with a semicolon.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instruções geralmente terminam com um ponto e vírgula.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition, statements can be grouped into a statement-group by encapsulating a group of statements with curly braces.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além disso, as instruções podem ser agrupados em um grupo de comandos através do encapsulamento de um grupo de comandos com chaves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A statement-group is a statement by itself as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um grupo de comandos é uma instrução também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The various statement types are described in this chapter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os vários tipos de instruções são descritos neste capítulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The if construct is one of the most important features of many languages, PHP included.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A construção if é uma das mais importantes implementações de muitas linguagens, incluindo o PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It allows for conditional execution of code fragments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela permite a execução condicional de fragmentos de código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP features an if structure that is similar to that of C:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP implementa uma estrutura if que é similar àquela do C:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (expr) statement</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if (expressao) instrucoes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As described in the section about expressions, expr is evaluated to its Boolean value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como descrita na seção sobre expressões, expressao é avaliado por seu contexto Booleano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If expr evaluates to TRUE, PHP will execute statement, and if it evaluates to FALSE - it &apos;ll ignore it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se expressao for avaliado como TRUE, o PHP executará instrucoes, e se for avaliado como FALSE, ele será ignorado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information about what values evaluate to FALSE can be found in the &apos;Converting to boolean&apos; section.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Maiores informações sobre a avaliação para FALSE podem ser encontradas na seção Convertendo para Booleanos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example would display a is bigger than b if $a is bigger than $b:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os exemplos a seguir mostrariam que a é maior que b se $a for maior que $b:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a $b) print &quot;a is bigger than b&quot;;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if ($a $b) print &quot;a é maior que b&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Often you &apos;d want to have more than one statement to be executed conditionally.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Freqüentemente você vai querer ter mais que uma instrução seja executado condicionalmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, there &apos;s no need to wrap each statement with an if clause.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E é claro, não há necessidade de englobar cada instrução com uma cláusula if.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, you can group several statements into a statement group.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em vez disso, você pode colocar várias instruções em um agrupamento de comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, this code would display a is bigger than b if $a is bigger than $b, and would then assign the value of $a into $b:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, este código mostraria a é maior que b se $a for maior que $b, e então atribuiria o valor de $a para $b:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($a $b) {print &quot;a is bigger than b&quot;; $b = $a;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if ($a $b) {print &quot;a é maior que b&quot;; $b = $a;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If statements can be nested indefinitely within other if statements, which provides you with complete flexibility for conditional execution of the various parts of your program.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Comandos if podem ser aninhados indefinidamente dentro de outros comandos if, o que faz com que você complete a flexibilidade para a execução condicional de várias partes do seu programa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>switch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The switch statement is similar to a series of IF statements on the same expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A instrução switch é similar a uma série de instruções IFs seguidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In many occasions, you may want to compare the same variable (or expression) with many different values, and execute a different piece of code depending on which value it equals to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em muitas ocasiões, você poderá ter que comparar a mesma variável (ou expressão) com muitos valores diferentes, executando códigos diferentes dependendo com qual valor ele se encaixar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is exactly what the switch statement is for.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É exatamente para isso que a instrução switch faz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following two examples are two different ways to write the same thing, one using a series of if statements, and the other using the switch statement:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os exemplos seguintes mostram duas maneiras diferentes de escrever a mesma coisa, uma utilizando uma série de is s e a outra utlizando a instrução switch:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if ($i == 0) {print &quot;i equals 0&quot;;} if ($i == 1) {print &quot;i equals 1&quot;;} if ($i == 2) {print &quot;i equals 2&quot;;} switch ($i) {case 0: print &quot;i equals 0&quot;; break; case 1: print &quot;i equals 1&quot;; break; case 2: print &quot;i equals 2&quot;; break;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if ($i == 0) {print &quot;i igual a 0&quot;;} if ($i == 1) {print &quot;i igual a 1&quot;;} if ($i == 2) {print &quot;i igual a 2&quot;;} switch ($i) {case 0: print &quot;i igual a 0&quot;; break; case 1: print &quot;i igual a 1&quot;; break; case 2: print &quot;i igual a 2&quot;; break;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is important to understand how the switch statement is executed in order to avoid mistakes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É importante entender como a instrução switch funciona para evitar enganos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The switch statement executes line by line (actually, statement by statement).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A instrução switch executa linha a linha (atualmente, instrução a instrução).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the beginning, no code is executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No início, nenhum código é executado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only when a case statement is found with a value that matches the value of the switch Only when a case statement is found with a value that matches the value of the switch expression does PHP begin to execute the statements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente quando uma instrução case é encontrada com um valor que combina com a expressão do switch faz com que o PHP execute as instruções a partir daí.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP continues to execute the statements until the end of the switch block, or the first time it sees a break statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP continua executando as instruções até o fim do bloco switch ou na primeira vez que encontrar uma instrução break.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don&apos; t write a break statement at the end of a case&apos;s statement list, PHP will go on executing the statements of the following case.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você não escrever uma instrução break no fim das instruções case, o PHP continuará executando os case s seguintes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch ($i) {case 0: print &quot;i equals 0&quot;; case 1: print &quot;i equals 1&quot;; case 2: print &quot;i equals 2&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>switch ($i) {case 0: print &quot;i igual a 0&quot;; case 1: print &quot;i igual a 1&quot;; case 2: print &quot;i igual a 2&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here, if $i is equal to 0, PHP would execute all of the print statements!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui, se $i é igual a zero, o PHP executará todas as instruções print!.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You would get the expected behavior (&apos;i equals 2 &apos;would be displayed) only if $i is equal to 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se $i é igual a 1, o PHP executará os últimas duas instruções print, e somente se $i for igual a 2, você terá o comportamento &apos;esperado&apos; apenas onde &apos;i igual a 2 &apos;será mostrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, it is important not to forget break statements (even though you may want to avoid supplying them on purpose under certain circumstances).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então é importante não se esquecer das instruções break (e as vezes não colocá-las para obter esse resultado em certas circunstâncias).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In a switch statement, the condition is evaluated only once and the result is compared to each case statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em uma instrução switch, a condição somente será avaliada e resultado comparado para cada instrução case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In an elseif statement, the condition is evaluated again.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em uma instrução elseif, a condição é avaliada novamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your condition is more complicated than a simple compare and / or is in a tight loop, a switch may be faster.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se sua condição é mais complicada que um simples comparação e / ou e dentro de um loop, um switch é mais rápido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The statement list for a case can also be empty, which simply passes control into the statement list for the next case.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um case pode não ter nenhuma instrução dentro, o que simplesmente passa o controle para o próximo case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch ($i) {case 0: case 1: case 2: print &quot;i is less than 3 but not negative&quot;; break; case 3: print &quot;i is 3&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>switch ($i) {case 0: case 1: case 2: print &quot;i é menor que 3 mas não negativo&quot;; break; case 3: print &quot;i é 3&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A special case is the default case.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um case especial é o default.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This case matches anything that wasn &apos;t matched by the other cases, and should be the last case statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele precisa ser a última instrução case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch ($i) {case 0: print &quot;i equals 0&quot;; break; case 1: print &quot;i equals 1&quot;; break; case 2: print &quot;i equals 2&quot;; break; default: print &quot;i is not equal to 0, 1 or 2&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>switch ($i) {case 0: print &quot;i igual a 0&quot;; break; case 1: print &quot;i igual a 1&quot;; break; case 2: print &quot;i igual a 2&quot;; break; default: print &quot;i não é igual a 0, 1 ou 2&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The case expression may be any expression that evaluates to a simple type, that is, integer or floating-point numbers and strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A expressão avaliada pelo case A expressão avaliada pelo case precisa ser um tipo simples, ou seja, inteiros, números de ponto flutuante e strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arrays or objects cannot be used here unless they are dereferenced to a simple type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arrays ou objetos não podem ser utilizados a não ser que eles impliquem num tipo simples.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The alternative syntax for control structures is supported with switches.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe alternativa para estruturas de controle é suportada para os switches.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information, see Alternative syntax for control structures.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja Sintaxe alternativa para estruturas de controle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>switch ($i): case 0: print &quot;i equals 0&quot;; break; case 1: print &quot;i equals 1&quot;; break; case 2: print &quot;i equals 2&quot;; break; default: print &quot;i is not equal to 0, 1 or 2&quot;; endswitch;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>switch ($i): case 0: print &quot;i igual a 0&quot;; break; case 1: print &quot;i igual a 1&quot;; break; case 2: print &quot;i igual a 2&quot;; break; default: print &quot;i não é igual a 0, 1 ou 2&quot;; endswitch;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>while</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while loops are the simplest type of loop in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Loops while são o tipo mais simples de criar um &apos;loop&apos; em PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They behave just like their C counterparts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Eles se comportam como seus compatíveis em C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The basic form of a while statement is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O formato básico de um comando while é:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while (expr) statement</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>while (expressao) instrucoes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The meaning of a while The meaning of a while statement is simple.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O significado de um comando while é simples.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It tells PHP to execute the nested statement( s) repeatedly, as long as the while expression evaluates to TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele pede que o PHP execute os comandos aninhados repetidamente, enquanto a expressão do while é avaliada como TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of the expression is checked each time at the beginning of the loop, so even if this value changes during the execution of the nested statement( s), execution will not stop until the end of the iteration (each time PHP runs the statements in the loop is one iteration).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor da expressão é verificada cada vez que se passa no começo do &apos;loop&apos;, desta forma, mesmo que este valor mude durante a execução do(s) comando(s) aninhado(s), a execução não parará até que o fim da iteração (cada vez que o PHP executa os comandos dentro do &apos;loop&apos; é uma iteração).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sometimes, if the while expression evaluates to FALSE from the very beginning, the nested statement( s) won&apos;t even be run once.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Às vezes, se a expressão while é avaliada como FALSE logo no início, o( s) comando(s) aninhado(s) não será(ão) rodado(s) nem uma vez sequer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like with the if statement, you can group multiple statements within the same while loop by surrounding a group of statements with curly braces, or by using the alternate syntax:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como no comando if, você pode agrupar múltiplos comandos dentro do mesmo laço while englobando um grupo de instruções com chaves, ou usando a sintaxe alternativa:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>while (expr): statement... endwhile;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>while (expressao): instrucoes... endwhile;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following examples are identical, and both print numbers from 1 to 10:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os exemplos a seguir são idênticos, e ambos imprimem números de 1 to 10:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* example 1 * / $i = 1; while ($i = 10) {print $i++; / * the printed value would be $i before the increment (post-increment) * /} / * example 2 * / $i = 1; while ($i = 10): print $i; $i++; endwhile;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/* exemplo 1 * / $i = 1; while ($i = 10) {print $i++; / * o valor impresso será $i depois do acréscimo (post-increment) * /} / * exemplo 2 * / $i = 1; while ($i = 10): print $i; $i++; endwhile;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual is © Copyright 1997 - 2003 by the PHP Documentation Group.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este manual tem © Copyright 1997 - 2003 para o PHP Documentation Group.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The members of this group are listed on the front page of this manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os membros deste grupo são listados na primeira página deste manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual can be redistributed under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este manual pode ser redistribuído sob os termos da Licença Pública Geral (GNU) conforme publicada pela Free Software Foundation; a versão 2 da Licença ou (a seu critério) qualquer versão posterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The &apos;Extending PHP 4.0&apos; section of this manual is copyright © 2000 by Zend Technologies, Ltd.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A seção &apos;Extendendo PHP 4.0&apos; deste manual tem copyright © 2000 para Zend Technologies, Ltd.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This material may be distributed only subject to the terms and conditions set forth in the Open Publication License, v1.0 or later (the latest version is presently available at http: / /www.opencontent.org / openpub /).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este material pode ser distribuido somente sob os termos e condições descritas na Open Publication License v1.0 ou posterior (a versão mais recente está disponível em http: / /www.opencontent.org / openpub /).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 includes support for a network-based debugger.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O debugador do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 does not have an internal debugging facility.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP 3 tem suporte ao debug baseado em rede.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use one of the external debuggers though.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP 4 não possui um utilitário de debug interno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Zend IDE includes a debugger, and there are also some free debugger extensions like DBG at http: / /dd.cron.ru / dbg /, the Advanced PHP Debugger (APD) or Xdebug which even has a compatible debugger interface as PHP 3&apos;s debugging functionality as is described in this section.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O Zend IDE inclui um debugador e há também outras extensões grátis como o DBG em http: / /dd.cron.ru / dbg / ou o Advanced PHP Debugger (APD).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using the Debugger</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando o debugador</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix D.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice D.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugging PHP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Protocolo do Debugger</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP 3 debugger protocol is line-based.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O protocolo do debugador do PHP 3 é baseado em linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each line has a type, and several lines compose a message.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada linha tem um tipo, e várias linhas compõem uma mensagem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each message starts with a line of the type start and terminates with a line of the type end.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada mensagem começa com uma linha do tipo start e termina com uma linha do tipo end.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 may send lines for different messages simultaneously.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP 3 pode enviar linhas de diferentes mensagens simultaneamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A line has this format:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma linha tem este formato:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Date in ISO 8601 format (yyyy - mm - dd)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Data no formato ISO 8601 (yyyy - mm - dd)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Time including microseconds: hh: mm: uuuuuu</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hora, incluindo microsegundos: hh: mm: uuuuuu</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DNS name or IP address of the host where the script error was generated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome DNS ou IP da maquina onde o erro do script foi gerado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PID (process id) on host of the process with the PHP 3 script that generated this error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ID do processo na máquina do processo com o PHP 3 que gerou este erro de script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Type of line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipo da linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells the receiving program about what it should treat the following data as:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Informa o programa sobre como ele deve tratar os seguintes dados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table D-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela D-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugger Line Types</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos de Linhas de Debug</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells the receiving program that a debugger message starts here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Informa ao programa que a mensagem começa aqui.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The contents of data will be the type of error message, listed below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conteúdo de data será o tipo de erro da mensagem, como listado abaixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP 3 error message.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A mensagem de erro do PHP 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>File name and line number where the error occurred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arquivo e número da linha onde ocorreu o erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first location line will always contain the top-level location. data will contain file: line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A primeira linha location sempre conterá o nível superior. data conterá: arquivo: linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There will always be a location line after message and after every function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sempre existirá uma linha location após uma message e após cada function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of frames in the following stack dump.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Número de janelas (frames) na saida atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there are four frames, expect information about four levels of called functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se houver quatro níveis, será esperado informação sobre quatro níveis de funções chamadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no &quot;frames&quot; line is given, the depth should be assumed to be 0 (the error occurred at top-level).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se não for dada nenhuma linha de janela (frame) assume que o valor é 0 (o erro aconteceu no início).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name of function where the error occurred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome da função onde o erro ocorreu.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will be repeated once for every level in the function call stack.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Será repetida para cada vez que a função for chamada dentro da pilha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tells the receiving program that a debugger message ends here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Informa ao programa que a mensagem de debug termina aqui.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Line data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Linha de dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table D-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela D-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugger Error Types</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos de erros de debug</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugger</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Debugador</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 Internal</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Interno do PHP 3</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>warning (alerta, atenção)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>error</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>error (erro)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>parse</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>parse (interpretação)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>notice</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notice (notificação)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>core-error</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>core-error (erro grave)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>core-warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>core-warning (aviso grave)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unknown</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>unknown (desconhecido)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(any other)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>(qualquer outro)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example D-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo D-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example Debugger Message</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de uma mensagem de Debug</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando o debugador</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The internal debugger in PHP 3 is useful for tracking down evasive bugs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O debugador interno do PHP 3 é útil para rastrear bugs fugitivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The debugger works by connecting to a TCP port for every time PHP 3 starts up.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O debugador trabalha conectado em uma porta TCP cada vez que o PHP 3 inicia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All error messages from that request will be sent to this TCP connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as mensagens de erro daquela requisição será enviada para esta conexão TCP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This information is intended for &quot;debugging server&quot; that can run inside an IDE or programmable editor (such as Emacs).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas informações são destinadas a &quot;debugar o servidor&quot; de dentro de um sistema IDE ou editor de arquivos programável (como o Emacs).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>How to set up the debugger:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como ativar o debugger:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set up a TCP port for the debugger in the configuration file (debugger.port) and enable it (debugger.enabled).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configure uma porta TCP para ele no arquivo de configuração (debugger.port) e habilite ele (debugger.enabled).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set up a TCP listener on that port somewhere (for example socket -l -s 1400 on UNIX).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configure um &quot;ouvidor&quot; TCP naquela porta em algum programa (por exemplo socket -l -s 1400 no UNIX).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In your code, run &quot;debugger_on (host)&quot;, where host is the IP number or name of the host running the TCP listener.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em seu código execute um &quot;debugger_on (endereço )&quot;, onde endereço é o número IP ou nome do computador executando o &quot;ouvidor&quot; TCP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 49.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Build Problems</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 52.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP and COM</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 52-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 52-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 47.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Database issues</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 44.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>General Information</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Frequently Asked Questions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Perguntas Mais FreqÃ¼entes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>VI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Perguntas Mais Freqüentes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Miscellaneous Questions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Stream open options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 51.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP and HTML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 51-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 51-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 51-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 51-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 51-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 51-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 48.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Installation</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 53.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP and other languages</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 45.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mailing lists</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 55.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Migrating from PHP 3 to PHP 4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 54.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Migrating from PHP 2 to PHP 3</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 56.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Miscellaneous Questions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 46.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Obtaining PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 50.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of version 4.3.0, PHP supports a new SAPI type (Server Application Programming Interface) named CLI which means Command Line Interface.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 23.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As the name implies, this SAPI type main focus is on developing shell (or desktop as well) applications with PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando o PHP na linha de comando</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It&apos; s worth mentioning that CLI and CGI are different SAPI&apos;s although they do share many of the same behaviors.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir versão 4.3, o PHP suporta um novo tipo SAPI (Server Application Programming Interface) chamado CLI que significa Command Line Interface.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.3.0 the CLI SAPI is no longer experimental and the option --enable-cli is on by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como o próprio nome indica, essa SAPI tem foco no desenvolvimento de aplicações shell (ou no terminal / linha de comando) com o PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.3.0, the name, location and existence of the CLI / CGI binaries will differ depending on how PHP is installed on your system.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As diferenças entre a CLI SAPI e as outras SAPI s são detalhadas neste capítulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will note that both are named php.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A CLI SAPI foi liberada primeiramente com o PHP 4.2.0, mas ainda em estágio experimental, sendo necessário ativá-la explicitamente com a opção --enable-cli durante o. / configure.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a module SAPI is chosen during configure, such as apxs, or the --disable-cgi option is used, the CLI is copied to {PREFIX} / bin / php during make install otherwise the CGI is placed there.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.0.3 a CLI SAPI não mais é experimental e é sempre compilada e instalada como o arquivo php (chamado php.exe no Windows), no formato binário executável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, for example, if --with--apxs is in your configure line then the CLI is copied to {PREFIX} / bin / php during make install.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diferenças importantes das CLI SAPI comparada com outras SAPI s:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alternatively you can specify --disable-cgi in your configure line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diferentemente da CGI SAPI, nenhum header é impresso na saída.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because both --enable-cli and --enable-cgi are enabled by default, simply having --enable-cli in your configure line does not necessarily mean the CLI will be copied as {PREFIX} / bin / php during make install.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A CGI SAPI possui um meio de suprimir os headers HTTP, mas não há uma chave equivalente para ativá-los na CLI SAPI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What SAPI do I have?:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A versão CLI é definida silenciosa por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the function php_sapi_name() and the constant PHP_SAPI.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas a chave -q é mantida para compatibilidade, de forma que você possa utilizar scripts CGI antigos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike the CGI SAPI, no headers are written to the output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela não altera o diretório de execução para o do script. (a chave -C também é mantida para compatibilidade).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Though the CGI SAPI provides a way to suppress HTTP headers, there &apos;s no equivalent switch to enable them in the CLI SAPI.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mensagens de erro em texto simples (sem formatação HTML).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It does not change the working directory to that of the script. (-C switch kept for compatibility)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas são as diretivas do php.ini que são sobrescritas pela CLI SAPI porque não fazem sentido no ambiente shell:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Plain text error messages (no HTML formatting).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 23-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are certain php.ini directives which are overriden by the CLI SAPI because they do not make sense in shell environments:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretivas php.ini sobrescritas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 23-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretiva</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Overriden php.ini directives</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Valor default CLI SAPI</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Directive</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Comentários</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can be quite hard to read the error message in your shell when it &apos;s cluttered with all those meaningless HTML tags, therefore this directive defaults to FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pode ser bem difícil de ler mensagens de erro no seu shell quando elas estão embebidas dentro de tags HTML, por isso essa diretiva tem default para FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is desired that any output coming from print(), echo() and friends is immediately written to the output and not cached in any buffer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa diretiva causa que qualquer saída gerada de um print(), echo() e semelhantes sejam imediatamente escritas para o output e não cacheadas em nenhum buffer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You still can use output buffering if you want to defer or manipulate standard output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você ainda pode usar o output buffering se você precisa atrasar ou manipular a saída padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Due to endless possibilities of using PHP in shell environments, the maximum execution time has been set to unlimited.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Devido as infinitas possibilidades da utilização do PHP em ambientes shell, tempo máximo de execução foi configurado para ilimitado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whereas applications written for the web are often executed very quickly, shell application tend to have a much longer execution time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Enquanto aplicações escritas para web são geralmente executadas em poucos segundos, aplicações no shell tendem a ter um tempo de execução mais longo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.3.0, the PHP variables $argc and $argv are registered and filled in with the appropriate values when using the CLI SAPI.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to this version, the creation of these variables behaved as they do in CGI and MODULE versions which requires the PHP directive register_globals to be on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas diretivas não podem ser inicializadas com outros valores do arquivo de configuração php.ini ou um arquivo personalizado (se informado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example: $_SERVER[ &apos;argv&apos;]</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta limitação existe porque estes valores são aplicados depois que todos os arquivos de configuração são analisados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These directives cannot be initialized with another value from the configuration file php.ini or a custom one (if specified).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, seus valores podem ser modificados durante a execução (o que pode não fazer sentido para todas elas, por exemplo, register_argc_argv).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, their value can be changed during runtime (which does not make sense for all of those directives, e.g. register_argc_argv).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para facilicar a operação no ambiente shell, as seguintes constantes estão definidas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To ease working in the shell environment, the following constants are defined:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 23-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CLI specific Constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes específicas CLI</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Given the above, you don &apos;t need to open e.g. a stream for stderr yourself but simply use the constant instead of the stream resource:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Considerando isso, você não precisará mais abrí-los, por exemplo o stderr você mesmo, mas simplesmente usar a constante em vez do recurso stream:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The CLI SAPI does not change the current directory to the directory of the executed script!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A CLI SAPI não modifica o diretório de execução atual para o diretório onde o script é interpretado!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example showing the difference to the CGI SAPI:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mostrando a diferença da CGI SAPI:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * Our simple test application named test.php* / echo getcwd(), &quot;\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Nossa aplicação de teste * / echo getcwd(), &quot;\n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using the CGI version, the output is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando utilizando a versão CGI, a saída é</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$pwd / tmp $php -q another_directory / test.php / tmp / another_directory</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$pwd / tmp $php-cgi -f outro_diretorio / test.php / tmp / outro_diretorio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using the CLI SAPI yields:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando a versão CLI SAPI:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$pwd / tmp $php -f another_directory / test.php / tmp</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$pwd / tmp $php -f outro_diretorio / test.php / tmp</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The CGI SAPI supports the CLI SAPI behaviour by means of the -C switch when run from the command line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A CGI SAPI suporta o comportamento da CLI SAPI utilizando a chave -C quando de sua execução na linha de comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The list of command line options provided by the PHP binary can be queried anytime by running PHP with the -h switch:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A lista de opções de linha de comando fornecidas pelo binário do PHP pode ser solicitada a qualquer tempo executando o PHP com a opção -h:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The CLI SAPI has three different ways of getting the PHP code you want to execute:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A CLI SAPI fornecer três maneiras diferentes para você executar seu código PHP:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Telling PHP to execute a certain file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Chamando o PHP para executar um arquivo determinado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pass the PHP code to execute directly on the command line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Passar o código PHP para execução diretamente a linha de comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read the example carefully, there are no beginning or ending tags!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Leia o exemplo cuidadosamente, observando que não há tags de abertura ou fechamento!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The -r switch simply does not need them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A opção -r simplesmente não precisa delas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using them will lead to a parser error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando-as você obterá erros de interpretação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Provide the PHP code to execute via standard input (stdin).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fornece código PHP para interpretação via a entrada padrão (stdin).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This gives the powerful ability to dynamically create PHP code and feed it to the binary, as shown in this (fictional) example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto mostra a habilidade poderosa de como criar dinamicamente código PHP e fornecê-lo ao binário, como demonstrado neste exemplo (apenas demonstrativo):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$some_application _BAR_ some_filter _BAR_ php _BAR_ sort -u final_output.txt</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$alguma_aplicacao _BAR_ algum_filtro _BAR_ php _BAR_ sort -u final_output.txt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like every shell application, the PHP binary accepts a number of arguments but your PHP script can also receive arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim como qualquer aplicação shell, não somente o binário do PHP aceita um certo número de argumentos, mas também seu script PHP também pode recebê-los.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of arguments which can be passed to your script is not limited by PHP (the shell has a certain size limit in the number of characters which can be passed; usually you won&apos;t hit this limit).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número de argumentos que podem ser passados para seu script não é limitado ao PHP (mas o shell tem um certo limite de tamanho em caracteres que podem ser informados, e não há um padrão para esse limite).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arguments passed to your script are available in the global array $argv.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os argumentos passados para seu script são disponibilizados no array global $argv.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The zero index always contains the script name (which is - in case the PHP code is coming from either standard input or from the command line switch -r).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No índice zero sempre conterá o nome do script (podendo ser - no caso de código PHP estar vindo da entrada padrão ou da opção de linha de comando -r).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second registered global variable is $argc which contains the number of elements in the $argv array (not the number of arguments passed to the script).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segunda variável global $argc contém o número de elementos no array $argv (mas não o número de argumentos passados para seu script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As long as the arguments you want to pass to your script do not start with the - character, there &apos;s nothing special to watch out for.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os argumentos que você deseja passar para seu script não podem começar com o caracter - e isso não pode ser modificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Passing an argument to your script which starts with a - will cause trouble because PHP Passing an argument to your script which starts with a - will cause trouble because PHP itself thinks it has to handle it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Passando argumentos para seu script que comecem com um - causará problemas porque o PHP tentará manuseá-los.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To prevent this, use the argument list separator - -.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para prevenir isso, utilize o separador de argumentos - -.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After this separator has been parsed by PHP, every argument following it is passed untouched to your script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Depois que os argumentos são interpretados pelo PHP, todos os argumentos restantes são repassados intocados para seu script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg># This will not execute the given code but will show the PHP usage $php -r &apos;var_dump($argv);&apos; -h Usage: php [options] [-f] file [args...] [...] # This will pass the &apos;-h &apos;argument to your script and prevent PHP from showing it&apos;s usage $php -r&apos;var_dump($argv);&apos; - - -h array(2) {[0]= string(1) &quot;-&quot; [1]= string(2) &quot;-h &quot;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg># Isto não executará o código fornecido e irá fazer o PHP mostrar sua ajuda $php -r &apos;var_dump($argv);&apos; -h Usage: php [options] [-f] file [args...] [...] # Isto passará o argumento &apos;-h &apos;para seu script e prevenirá o PHP de usá-lo $php -r &apos;var_dump($argv);&apos; - - -h array(2) {[0]= string(1) &quot;-&quot; [1]= string(2) &quot;-h &quot;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, there &apos;s another way of using PHP for shell scripting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, há ainda uma outra maneira de se utilizar o PHP no shell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Following this you can place normal PHP code included within the PHP starting and end tags.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode escrever um script que na primeira linha tenha #! / usr / bin / php e na seqüência tenha código PHP normal, incluindo as tags de início e fim e os atributos de execução do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Once you have set the execution attributes of the file appropriately (e.g. chmod +x test) your script can be executed like a normal shell or perl script:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desta maneira ele pode ser executado como um script shell ou PERL normalmente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$chmod 755 test $. / test -h - - foo array( 4) {[0]= string(6) &quot;. / test&quot; [1]= string(2) &quot;-h &quot;[2]= string(2) &quot;- -&quot; [3]= string(3) &quot;foo &quot;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$chmod 755 teste $. / test -h - - foo array( 4) {[0]= string(6) &quot;. / teste&quot; [1]= string(2) &quot;-h &quot;[2]= string(2) &quot;- -&quot; [3]= string(3) &quot;foo &quot;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 23-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 23-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Command line options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de linha de comando</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Option</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Description</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Display colour syntax highlighted source.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mostra o código fonte com destaque de cores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option uses the internal mechanism to parse the file and produces a HTML highlighted version of it and writes it to standard output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção usa o mecanismo interno para interpretar o arquivo e produzir uma versão HTML do fonte com destaque de cores e a envia para a saída padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that all it does it to generate a block of code [...] / code HTML tags, no HTML headers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que ele somente gerará blocos de code [...] / code, mas não headers HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option does not work together with the -r option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção não funciona juntamente com a opção -r.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Display source with stripped comments and whitespace.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mostra o fonte sem comentários e espaços em branco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This switch is optional and can be left out.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Interpreta e executa o arquivo informado com a opção -f Esta diretiva é opcional e pode ser deixada de lado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only providing the filename to execute is sufficient.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Informar somente o nome do arquivo para execução é suficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Writes the PHP, PHP SAPI, and Zend version to standard output, e.g.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Imprime as versões o PHP, PHP SAPI e Zend para a saída padrão, por exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$php -v PHP 4.3.0 (cli), Copyright (c) 1997-2002 The PHP Group Zend Engine v1.3.0, Copyright (c) 1998-2002 Zend Technologies</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$php -v PHP 4.3.0-dev (cli), Copyright (c) 1997-2002 The PHP Group Zend Engine v1.2.1, Copyright (c) 1998-2002 Zend Technologies</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With this option one can either specify a directory where to look for php.ini or you can specify a custom INI file directly (which does not need to be named php.ini), e.g.:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção informa um diretório onde procurar pelo php.ini ou especifica um arquivo INI personalizado diretamente (não presisa ser obrigatoriamente php.ini), por exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Runs PHP interactively.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Executa o PHP no modo interativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option allows you to set a custom value for any of the configuration directives allowed in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção permite definir um valor personalizado para qualquer diretiva de configuração permitida no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>-d configuration_directive[ =value]</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>-d diretiva[ =valor]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg># Omitting the value part will set the given configuration directive to &quot;1&quot; $php -d max_execution_time -r &apos;$foo = ini_get(&quot;max_execution_time&quot;); var_dump($foo); &apos;string(1) &quot;1 &quot;# Passing an empty value part will set the configuration directive to&quot; &quot;php -d max_execution_time= -r &apos;$foo = ini_get(&quot;max_execution_time&quot;); var_dump($foo);&apos; string(0)&quot; &quot;# The configuration directive will be set to anything passed after the &apos;= &apos;character $php -d max_execution_time=20 -r &apos;$foo = ini_get(&quot;max_execution_time&quot;); var_dump($foo);&apos; string(2) &quot;20&quot; $php -d max_execution_time=doesntmakesense -r &apos;$foo = ini_get(&quot;max_execution_time&quot;); var_dump($foo); &apos;string(15) &quot;doesntmakesense &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg># Omitindo a parte do valor irá configurar a diretiva para &quot;1&quot; $php -d max_execution_time -r &apos;$foo = ini_get(&quot;max_execution_time&quot;); var_dump($foo); &apos;string(1) &quot;1 &quot;# Passando um valor vazio irá configurar a diretiva para&quot; &quot;php -d max_execution_time= -r &apos;$foo = ini_get(&quot;max_execution_time&quot;); var_dump($foo);&apos; string(0)&quot; &quot;# A diretiva de configuração será preenchida com qualquer coisa informada depois do caracter =&apos; &apos;$php -d max_execution_time=20 -r &apos;$foo = ini_get(&quot;max_execution_time&quot;); var_dump($foo);&apos; string(2) &quot;20&quot; $php -d max_execution_time=instonaofazsentido -r &apos;$foo = ini_get(&quot;max_execution_time&quot;); var_dump($foo); &apos;string(15) &quot;instonaofazsentido &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Generate extended information for debugger / profiler.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Gera informações estendidas para o debugador / profiler.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Load Zend extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Carrega a extensão Zend.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If only a filename is given, PHP tries to load this extension from the current default library path on your system (usually specified / etc / ld.so.conf on Linux systems).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se somente o nome de arquivo é fornecido, o PHP tenta carregar essa extensão do caminho default de bibliotecas do seu sistema (geralmente especificado em / etc / ld.so.conf em sistemas Linux).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Passing a filename with an absolute path information will not use the systems library search path.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Passando um nome de arquivo com o caminho absoluto irá evitar a procura no caminho das bibliotecas de sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A relative filename with a directory information will tell PHP only to try to load the extension relative to the current directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um nome de arquivo com uma informação de diretório relativa fará com que o PHP apenas tente carregar a extensão no caminho relativo ao diretório atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option provides a convenient way to only perform a syntax check on the given PHP code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção fornece uma maneira conveniente apenas realizar uma checagem de sintaxe no código PHP fornecido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On succes, the text No syntax errors detected in filename is written to standard output and the shell return code is 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No sucesso, o texto No syntax errors detected in arquivo é impresso na saída padrão e informado o código de saida de sistema 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On failure, the text Errors parsing filename in addition to the internal parser error message is written to standard output and the shell return code is set to 255.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em caso de erro, o texto Errors parsing filename juntamente com o a mensagem do interpretador interno é impressa para a saída padrão e o código de saída de sistema é 255.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option won&apos; t find fatal errors (like undefined functions).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção não procura por erros fatais (como funções não definidas).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use -f if you would like to test for fatal errors too.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use -f se você deseja detectar erros fatais também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option does not work together with the -r option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção não trabalha com a opção -r</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using this option, PHP prints out the built in (and loaded) PHP and Zend modules:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando essa opção, o PHP imprime os módulos PHP e Zend compilados (e carregados):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This command line option calls phpinfo(), and prints out the results.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção de linha de comando chama a função phpinfo() e imprime seus resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP is not working correctly, it is advisable to use php -i and see whether any error messages are printed out before or in place of the information tables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o PHP não está funcionando bem, é interessante fazer um php -i Se o PHP não está funcionando bem, é interessante fazer um php -i para observar qualquer mensagem de erro impressa antes ou dentro das tabelas de informação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Beware that the output is in HTML and therefore quite huge.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como a saída é em HTML, ela é um pouco grande.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option allows execution of PHP right from within the command line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção permite a execução de código PHP direto da linha de comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP start and end tags (?php and?) are not needed and will cause a parser error if present.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As tags de início e fim do PHP (?php e?) não são necessárias e causarão erros de interpretação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Care has to be taken when using this form of PHP to not collide with command line variable substitution done by the shell.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cuidados deverão ser tomados utilizando dessa forma para evitar que haja substituição de variáveis pelo shell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example showing a parser error</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mostrando um erro de interpretação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With this option, you can get information about the actual list of command line options and some one line descriptions about what they do.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com essa opção, você pode obter informações sobre a lista atual de opções de linha de comando pequenas descrições sobre o que elas fazem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP executable can be used to run PHP scripts absolutely independent from the web server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP executável pode ser utilizando para rodar scripts PHP absolutamente independente de um servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are on a Unix system, you should add a special first line to your PHP script, and make it executable, so the system will know, what program should run the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está num sistema Unix, você pode acrescentar uma linha especial na primeira linha de seu script e torná-lo executável, então o sistema operacional saberá que programa deverá rodar o script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On a Windows platform you can associate php.exe with the double click option of the .php files, or you can make a batch file to run the script through PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na plataforma Windows, você pode associar php.exe -q com o clique duplo em arquivos .php ou fazer um arquivo batch para rodar seus scripts através do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first line added to the script to work on Unix won &apos;t hurt on Windows, so you can write cross platform programs this way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A primeira linha acrescentada ao script nos Unix não funcionam no Windows, por isso você não pode escrever programas independentes de plataforma desse jeito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple example of writing a command line PHP program can be found below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo simples de como escrever um programa para a linha de comando segue abaixo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 23-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 23-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Script intended to be run from command line (script.php)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um script para rodar na linha de comando (script.php)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a command line PHP script with one option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este é um script de linha de comando com um parâmetro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Usage: ?php echo $argv[ 0];? option option can be some word you would like to print out.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uso: ?php echo $argv[ 0];? opcao opcao pode ser qualquer palavra que você queira imprimir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With the --help, -help, -h, or -? options, you can get this help. ?php} else {echo $argv[1];}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com as opções --help, -help, -h ou -?, você pode obter essa ajuda. ?php} else {echo $argv[1];}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the script above, we used the special first line to indicate that this file should be run by PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No script acima, nós utilizamos uma primeira linha especial para indicar que este arquivo precisa rodar pelo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We work with a CLI version here, so there will be no HTTP header printouts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como nós trabalhamos com a versão CLI aqui, não serão impressos headers HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two variables you can use while writing command line applications with PHP: $argc and $argv.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há duas variáveis que você precisa conhecer para escrever aplicações em linha de comando com o PHP: $argc e $argv.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first is the number of arguments plus one (the name of the script running).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro é o número de argumentos mais um (o nome do script executando).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second is an array containing the arguments, starting with the script name as number zero ($argv[0]).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo é um array contendo os argumentos, começando com o nome do script no índice zero ($argv[0]).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the program above we checked if there are less or more than one arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No programa acima é verificado se há apenas um argumento fornecido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also if the argument was --help, -help, -h or -?, we printed out the help message, printing the script name dynamically.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o argumento for --help, -help, -h ou -?, é impresso uma mensagem de ajuda, imprimindo o nome do script dinamicamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If we received some other argument we echoed that out.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer outro argumento é exibido como informado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to run the above script on Unix, you need to make it executable, and simply call it as script.php echothis or script.php -h.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para rodar esse aplicativo nos Unix, basta torná-lo executável e o chamar diretamente como script.php exibaisso ou script.php -h.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows, you can make a batch file for this task:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No Windows, você pode fazer um arquivo batch para esta tarefa:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 23-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 23-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Batch file to run a command line PHP script (script.bat)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arquivo batch para rodar um script em linha de comando (script.bat)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>@c:\php\cli\php.exe script.php %1 %2 %3 %4</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>@c:\php\php.exe script.php %1 %2 %3 %4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assuming you named the above program script.php, and you have your CLI php.exe in c:\php\cli\php.exe this batch file will run it for you with your added options: script.bat echothis or script.bat -h.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assumindo que você nomeou o programa acima como script.php, e você tem um php.exe em c:\php\php.exe este arquivo batch irá rodar com os seguintes parâmetros: script.bat exibaisso ou script.bat -h.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the Readline extension documentation for more functions you can use to enhance your command line applications in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também a documentação da extensão Readline para mais funções que você pode usar para incrementar suas aplicações para linha de comando em PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function Reference</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referência das Funções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Manual</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 20.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Connection handling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 17.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cookies</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP transparently supports HTTP cookies.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta transparentemente cookies HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies are a mechanism for storing data in the remote browser and thus tracking or identifying return users.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cookies são um mecanismo para guardar dados no navegador remoto possibilitando o acompanhamento ou identificação de usuários que retornam.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can set cookies using the setcookie() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode criar cookies usando a função setcookie().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies are part of the HTTP header, so setcookie() must be called before any output is sent to the browser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os cookies são uma parte do cabeçalho HTTP, logo setcookie() precisa ser chamada antes que qualquer outro dado seja enviado ao navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the same limitation that header() has.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é a mesma limitação que a função header() tem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the output buffering functions to delay the script output until you have decided whether or not to set any cookies or send any headers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar as funções de output buferizado para atrasar as impressões do script até que você tenha decidido ou não configurar qualquer cookie ou enviar mais headers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any cookies sent to you from the client will automatically be turned into a PHP variable just like GET and POST method data, depending on the register_globals and variables_order configuration variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer cookie enviado por você para o cliente automaticamente será uma variável do PHP assim como dados de postagens GET ou POST, dependendo dos valores de register_globals e variables_order.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you wish to assign multiple values to a single cookie, just add [] to the cookie name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você deseja assimilar vários valores em um único cookie, simplesmente acrescente [] ao nome do cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.1.0 and later, the $_COOKIE auto-global array will always be set with any cookies sent from the client. $HTTP_COOKIE_VARS is also set in earlier versions of PHP when the track_vars configuration variable is set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>NO PHP 4.1.0 e posteriores, o array superglobal $_COOKIE sempre estará preenchido com quaisquer cookies enviados do cliente. $HTTP_COOKIE_VARS, existente nas versões anteriores do PHP, também, quando a variável de configuração track_vars estiver ativa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more details, including notes on browser bugs, see the setcookie() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para mais detalhes, incluindo comentários sobre problemas de browsers, veja a função setcookie().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Handling file uploads</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Gerenciar o upload de arquivos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 18.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 18.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Handling file uploads</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Problemas comuns</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The MAX_FILE_SIZE item cannot specify a file size greater than the file size that has been set in the upload_max_filesize ini-setting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O item MAX_FILE_SIZE não pode especificar um tamanho de arquivo com tamanho maior do que o especificado no php.ini em upload_max_filesize.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is 2 Megabytes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão é 2 Megabytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to set memory_limit large enough.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o limite de memória esta ativado, um maior memory_limit pode ser necessário. tenha certeza de estabelecer um memory_limit grande o suficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If max_execution_time is set too small, script execution may be exceeded the value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se max_execution_time for muito pequeno, a execução do script pode ultrapassar o limite de tempo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to set max_execution_time large enough.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenha certeza de estabelecer um max_execution_time grande o suficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If post_max_size set too small, large files cannot be uploaded.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se post_max_size for muito pequeno, arquivos grandes não poderão ser carregados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to set post_max_size large enough.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenha certeza de estabelecer post_max_size grande o suficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not validating which file you operate on may mean that users can access sensitive information in other directories.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não validar o arquivo que você esta operando pode permitir que os usuários acessem informações sensíveis em outros diretórios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that the CERN httpd seems to strip off everything starting at the first whitespace in the content-type mime header it gets from the client.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por favor note que o CERN httpd aparenta cortar tudo iniciando após o primeiro espaço do header content-type que ele recebe do cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As long as this is the case, CERN httpd will not support the file upload feature.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se for este o caso, CERN httpd não irá suportar o upload de arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Due to the large amount of directory listing styles we cannot guarantee that files with exotic names (like containing spaces) are handled properly.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Devido ao grande número de estilos de listagem de diretórios nós não podemos garantir que arquivos com nomes exóticos( como que contém espaço) sejam manuseados corretamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Error Messages Explained</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Explicação das mensagens de erro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Uploading multiple files</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Carregando múltiplos arquivos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Explicação das mensagens de erro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.2.0, PHP returns an appropriate error code along with the file array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.0, PHP retorna um código de erro apropriado na array do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error code can be found in the [&apos;error&apos;] segment of the file array that is created during the file upload by PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O código de erro pode ser encontrado em [&apos;error&apos;] na array que é criada durante o upload do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In otherwords, the error might be found in $_FILES[ &apos;userfile&apos;][&apos;error&apos;].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outras palavras, o erro deve ser encontrado em $_FILES[ &apos;userfile&apos;][&apos;error&apos;].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Value:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Valor:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0; There is no error, the file uploaded with success.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>0; não houve erro, o upload foi bem sucedido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1; The uploaded file exceeds the upload_max_filesize directive in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Valor 1; O arquivo no upload é maior do que o limite definido em upload_max_filesize no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2; The uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the html form.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>2; O arquivo ultrapassa o limite de tamanho em MAX_FILE_SIZE que foi especificado no formulário html.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3; The uploaded file was only partially uploaded.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>3; o upload do arquivo foi feito parcialmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>4; No file was uploaded.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>4; Não foi feito o upload do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These became PHP constants in PHP 4.3.0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas tornaram-se constantes no PHP 4.3.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Common Pitfalls</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Problemas comuns</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is capable of receiving file uploads from any RFC-1867 compliant browser (which includes Netscape Navigator 3 or later, Microsoft Internet Explorer 3 with a patch from Microsoft, or later without a patch).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Gerenciar o upload de arquivos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This feature lets people upload both text and binary files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Upload de arquivos com o método POST</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With PHP &apos;s authentication and file manipulation functions, you have full control over who is allowed to upload and what is to be done with the file once it has been uploaded.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP é capaz de receber o upload de qualquer browser que siga a norma RFC-1867 (o que inclui Netscape Navigator 3 ou posterior, Microsoft Internet Explorer 3 com um patch da Microsoft, ou posterior sem patch).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Related Configurations Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto permite que se faça o upload de arquivos de texto e binários.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the file_uploads, upload_max_filesize, upload_tmp_dir, and post_max_size directives in php.ini</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com as funções de autenticação e manipulação de arquivos do PHP, você tem o controle completo de quem pode fazer o upload de arquivo e o que fazer com o arquivo após seu upload.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that PHP also supports PUT-method file uploads as used by Netscape Composer and W3C &apos;s Amaya clients.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também file_uploads, upload_max_filesize, upload_tmp_dir, e post_max_size no php.ini</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the PUT Method Support for more details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que o PHP também suporta o método PUT para upload de arquivos como o usado por Netscape Composer e W3C &apos;s Amaya clients.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A file upload screen can be built by creating a special form which looks something like this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma tela para upload de arquivo pode ser criada com um formulário especial parecido com este:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 18-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 18-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>File Upload Form</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Formulário para Upload de Arquivo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>form enctype=&quot; multipart / form-data &quot;action=&quot;_URL_&quot; method=&quot;post &quot;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE &quot;value=&quot;30000&quot; Send this file: input name=&quot;userfile &quot;type=&quot;file&quot; input type=&quot;submit &quot;value=&quot;Send File&quot; / form</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>form enctype=&quot; multipart / form-data &quot;action=&quot;_URL_&quot; method=&quot;post &quot;input type=&quot;hidden&quot; name=&quot;MAX_FILE_SIZE &quot;value=&quot;30000&quot; Send this file: input name=&quot;userfile &quot;type=&quot;file&quot; input type=&quot;submit &quot;value=&quot;Enviar Arquivo&quot; / form</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The MAX_FILE_SIZE is advisory to the browser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor de MAX_FILE_SIZE é um aviso para o browser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is easy to circumvent this maximum.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É fácil contornar este limite.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So don &apos;t count on it that the browser obeys your wish!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então não conte que o browser irá obedecer a sua vontade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP-settings for maximum-size, however, cannot be fooled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que foi estabelecido para maximum-size no PHP não pode ser enganado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Variables defined for uploaded files differs depending on the PHP version and configuration.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As variáveis definidas para o upload de arquivos são diferentes dependendo da versão e da configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The autoglobal $_FILES exists as of PHP 4.1.0 The $HTTP_POST_FILES array has existed since PHP 4.0.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A array $HTTP_POST_FILES existe desde o PHP 4.0.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These arrays will contain all your uploaded file information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas array irão conter toda a informação do upload do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using $_FILES is preferred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usar $_FILES é preferido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the PHP directive register_globals is on, related variable names will also exist. register_globals defaults to off as of PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão de register_globals é off desde o PHP 4.2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The contents of $_FILES from our example script is as follows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os conteúdos de $_FILES do nosso script de exemplo é como segue.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this assumes the use of the file upload name userfile, as used in the example script above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que isso assume que o nome do upload do arquivo é userfile, como o usado no exemplo acima.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The original name of the file on the client machine.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome original do arquivo no computador do usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mime type of the file, if the browser provided this information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tipo mime do arquivo, se o browser deu esta informação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example would be &quot;image / gif&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo pode ser &quot;image / gif&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The size, in bytes, of the uploaded file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tamanho, em bytes, do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The temporary filename of the file in which the uploaded file was stored on the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome temporário do arquivo, como foi guardado no servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error code associated with this file upload. [&apos;error&apos;] was added in PHP 4.2.0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O código de erro associado a este upload de arquivo. [&apos;error&apos;] foi adicionado no PHP 4.2.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP versions prior 4.1.0 this was named $HTTP_POST_FILES and it &apos;s not an autoglobal variable like $_FILES is.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores a 4.1.0 o nome era $HTTP_POST_FILES e não é uma variável autoglobal como $_FILES é.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 does not support $HTTP_POST_FILES.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 3 não suporta $HTTP_POST_FILES.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When register_globals is turned on in php.ini, additional variables are available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando register_globals esta em on no php.ini, variáveis adicionais estão disponíveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, $userfile_name will equal $_FILES[ &apos;userfile&apos;][&apos;name&apos;], $userfile_type will equal $_FILES[&apos;userfile&apos;][&apos;type&apos;], etc.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, $userfile_name será igual a $_FILES[ &apos;userfile&apos;][&apos;name&apos;], $userfile_type será igual a $_FILES[&apos;userfile&apos;][&apos;type&apos;], etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Keep in mind that as of PHP 4.2.0, register_globals defaults to off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lembre-se que desde o PHP 4.2.0, o padrão para register_globals é off.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It &apos;s preferred to not rely on this directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É preferrível não depender desta opção.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Files will by default be stored in the server &apos;s default temporary directory, unless another location has been given with the upload_tmp_dir directive in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os arquivos serão guardados no diretório temporário do servidor, a menos que outro lugar seja especificado com a opção upload_tmp_dir no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The server &apos;s default directory can be changed by setting the environment variable TMPDIR in the environment in which PHP runs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mudando-a com putenv() de um script PHP não irá funcionar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting it using putenv() from within a PHP script will not work.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta variável de ambiente também pode ser usada para se ter certeza que outras operações estão funcionando no arquivo do upload.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This environment variable can also be used to make sure that other operations are working on uploaded files, as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que deve se definir upload_temp_dir no php.ini ou TMPDIR, não podendo estarem ambos vazios, sendo recomendado no mínimo upload_tmp_dir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 18-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 18-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Validating file uploads</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Validando o upload de arquivos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the function entries for is_uploaded_file() and move_uploaded_file() for further information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também as funções is_uploaded_file() e move_uploaded_file() para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example will process the file upload that came from a form.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O seguinte exemplo irá processar o envio de um arquivo que vem de um formulário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / In PHP earlier then 4.1.0, $HTTP_POST_FILES should be used instead of $_FILES. / / In PHP earlier then 4.0.3, use copy() and is_uploaded_file() instead of move_uploaded_file $uploaddir = &apos;/ var / www / uploads /&apos;; print &quot;pre&quot;; if (move_uploaded_file($_FILES[&apos;userfile&apos;][&apos;tmp_name&apos;], $uploaddir. $_FILES[&apos;userfile&apos;][&apos;name&apos;])) {print &quot;File is valid, and was successfully uploaded.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Nas versões anteriores a 4.1.0, $HTTP_POST_FILES deve ser usado ao invés de $_FILES. / / Nas versões anteriores a 4.0.3, use copy() e is_uploaded_file() ao invés move_uploaded_file $uploaddir = &apos;/ var / www / uploads /&apos;; print &quot;pre&quot;; if (move_uploaded_file($_FILES[&apos;userfile&apos;][&apos;tmp_name&apos;], $uploaddir. $_FILES[&apos;userfile&apos;][&apos;name&apos;])) {print &quot;O arquivo é valido e foi carregado com sucesso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here&apos; s some more debugging info:\n&quot;; print_r($_FILES);} else {print &quot;Possible file upload attack!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui esta alguma informação:\n&quot;; print_r($_FILES);} else {print &quot;Possivel ataque de upload!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here&apos; s some debugging info:\n&quot;; print_r($_FILES);}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui esta alguma informação:\n&quot;; print_r($_FILES);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP script which receives the uploaded file should implement whatever logic is necessary for determining what should be done with the uploaded file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O script PHP que irá receber o arquivo do upload deve implementar qualquer lógica que for necessária para determinar o que deve ser feito com o arquivo do upload.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can for example use the $_FILES[ &apos;userfile&apos;][&apos;size&apos;] variable to throw away any files that are either too small or too big.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode, por exemplo, usar a variável $_FILES[ &apos;userfile&apos;][&apos;size&apos;] para descartar qualquer arquivo que seja muito pequeno ou muito grande.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You could use the $_FILES[ &apos;userfile&apos;][&apos;type&apos;] You could use the $_FILES[&apos;userfile&apos;][&apos;type&apos;] variable to throw away any files that didn&apos;t match a certain type criteria.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar a variável $_FILES[ &apos;userfile&apos;][&apos;type&apos;] que não sejam de um certo tipo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.2.0, you could use $_FILES[ &apos;userfile&apos;][&apos;error&apos;] and plan your logic according to the error codes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.0, você pode usar $_FILES[ &apos;userfile&apos;][&apos;error&apos;] e planejar a sua lógica de acordo com os códigos de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whatever the logic, you should either delete the file from the temporary directory or move it elsewhere.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer que seja a lógica, você deve excluir o arquivo do diretório temporário ou move-lo para outro lugar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file will be deleted from the temporary directory at the end of the request if it has not been moved away or renamed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo será excluído do diretório temporário ao fim do script se não tiver sido movido ou renomeado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Carregando múltiplos arquivos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiple files can be uploaded using different name for input.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Múltiplos arquivos podem ser carregados usando-se diferentes name para input.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is also possible to upload multiple files simultaneously and have the information organized automatically in arrays for you.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Também é possível carregar vários arquivos simultaneamente e ter a informação organizada automaticamente para você em arrays.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To do so, you need to use the same array submission syntax in the HTML form as you do with multiple selects and checkboxes:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para fazer assim, você precisa usar a mesma sintaxe no formulário HTML que você usa para múltiplos selects e checkboxes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for multiple file uploads was added in version 3.0.10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O Suporte para carregar múltiplos arquivos foi adicionado na versão 3.0.10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 18-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 18-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the above form is submitted, the arrays $_FILES[ &apos;userfile&apos;], $_FILES[&apos;userfile&apos;][&apos;name&apos;], and $_FILES[&apos;userfile&apos;][&apos;size&apos;] will be initialized (as well as in $HTTP_POST_FILES for PHP version prior 4.1.0).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o formulário acima é submetido, as matrizes $_FILES[ &apos;userfile&apos;], $_FILES[&apos;userfile&apos;][&apos;name&apos;], e $_FILES[&apos;userfile&apos;][&apos;size&apos;] serão inicializadas (assim como $HTTP_POST_FILES para versões do PHP anterior a 4.1.0).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When register_globals is on, globals for uploaded files are also initialized.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando register_globals esta em on, globals para os arquivos carregados também são inicializadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each of these will be a numerically indexed array of the appropriate values for the submitted files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada um destes será uma array indexada numericamente dos valores apropriados para os arquivos submetidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, assume that the filenames / home / test / review.html and / home / test / xwp.out are submitted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, assuma que os nomes de arquivos tenham sido submetidos / home / test / review.html e / home / test / xwp.out.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case, $_FILES[ &apos;userfile&apos;][&apos;name&apos;][0] would contain the value review.html, and $_FILES[&apos;userfile&apos;][&apos;name&apos;][1] would contain the value xwp.out.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Neste caso, $_FILES[ &apos;userfile&apos;][&apos;name&apos;][0] deve conter o valor review.html, e $_FILES[&apos;userfile&apos;][&apos;name&apos;][1] deve conter o valor xwp.out.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similarly, $_FILES[ &apos;userfile&apos;][&apos;size&apos;][0] would contain review.html&apos;s filesize, and so forth.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Similarmente, $_FILES[ &apos;userfile&apos;][&apos;size&apos;][0] deve conter o tamanho de review.html, e assim por diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$_FILES[ &apos;userfile&apos;][&apos;name&apos;][0], $_FILES[&apos;userfile&apos;][&apos;tmp_name&apos;][0], $_FILES[&apos;userfile&apos;][&apos;size&apos;][0], and $_FILES[&apos;userfile&apos;][&apos;type&apos;][0] are also set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$_FILES[ &apos;userfile&apos;][&apos;name&apos;][0], $_FILES[&apos;userfile&apos;][&apos;tmp_name&apos;][0], $_FILES[&apos;userfile&apos;][&apos;size&apos;][0], e $_FILES[&apos;userfile&apos;][&apos;type&apos;][0] também são definidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PUT method support</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte ao método PUT</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte ao método PUT</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PUT method support has changed between PHP 3 and PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O suporte ao método PUT mudou entre PHP 3 e PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, one should use the standard input stream to read the contents of an HTTP PUT.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4, deve se usar a entrada padrão para ler os conteúdos de um PUT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 18-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 18-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Saving HTTP PUT files with PHP 4</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Salvando arquivos HTTP PUT com o PHP 4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * PUT data comes in on the stdin stream * / $putdata = fopen( &quot;php: / /stdin&quot; ,&quot;r&quot;); / * Open a file for writting * / $fp = fopen(&quot;myputfile.ext&quot; ,&quot;w&quot;); / * Read the data 1kb at a time and write to the file * / while ($data = fread($putdata,1024)) fwrite($fp,$data); / * Close the streams * / fclose($fp); fclose($putdata);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * PUT data vem do stdin stream * / $putdata = fopen( &quot;php: / /stdin&quot; ,&quot;r&quot;); / * Abre um arquivo para escrita * / $fp = fopen(&quot;myputfile.ext&quot; ,&quot;w&quot;); / * Lê os dados 1KB de cada vez e escreve no arquivo * / while ($data = fread($putdata,1024)) fwrite($fp,$data); / * Fecha os streams * / fclose($fp); fclose($putdata);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All documentation below applies to PHP 3 only.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Toda a documentação abaixo aplica-se ao PHP 3 somente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP provides support for the HTTP PUT method used by clients such as Netscape Composer and W3C Amaya.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP prove suporte para o método HTTP PUT usado por clientes como Netscape Composer e W3C Amaya.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PUT requests are much simpler than a file upload and they look something like this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisições PUT são muito mais simples do que o upload de arquivo e se parecem com isto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This would normally mean that the remote client would like to save the content that follows as: / path / filename.html in your web tree.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto normalmente indica que o cliente remoto gostaria de salvar o conteúdo que se segue como: / path / filename.html na sua arvore web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is obviously not a good idea for Apache or PHP to automatically let everybody overwrite any files in your web tree.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É obvio que não é uma boa idéia para o Apache ou o PHP automaticamente permitir que todos possam sobrescrever arquivos na sua arvore web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, to handle such a request you have to first tell your web server that you want a certain PHP script to handle the request.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então, para manusear este tipo de requisição você tem primeiro que dizer ao seu servidor web que você quer que um certo script PHP cuide da requisição.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In Apache you do this with the Script In Apache you do this with the Script directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No apache você faz isto com a diretiva Script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can be placed almost anywhere in your Apache configuration file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pode ser colocada praticamente em qualquer lugar do seu arquivo de configuração do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A common place is inside a Directory block or perhaps inside a Virtualhost block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um lugar comum é dentro de um bloco Directory ou talvez dentro de um bloco Virtualhost.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A line like this would do the trick:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma linha como esta deve fazer o truque:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This tells Apache to send all PUT requests for URIs that match the context in which you put this line to the put.php script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto diz para o apache enviar todas as requisições PUT que estejam no contexto que você colocou esta linha para o script put.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This assumes, of course, that you have PHP enabled for the .php extension and PHP is active.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto assume, é claro, que você tem o PHP ativado para a extensão .php e que o PHP esta ativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inside your put.php file you would then do something like this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dentro do seu arquivo put.php você deve então fazer algo parecido com isto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This would copy the file to the location requested by the remote client.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto deve copiar o arquivo para a localização requisitada pelo cliente remoto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You would probably want to perform some checks and / or authenticate the user before performing this file copy.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você provavelmente quer fazer alguma checagem e / ou autenticar o usuário antes de fazer esta copia de arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The only trick here is that when PHP sees a PUT-method request it stores the uploaded file in a temporary file just like those handled but the POST-method.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O único truque aqui é que quando o php vê uma requisição com o método PUT ele guarda o arquivo carregado em um arquivo temporário justo como se fosse manuseado pelo método POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the request ends, this temporary file is deleted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando a requisição termina, este arquivo temporário é apagado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, your PUT handling PHP script has to copy that file somewhere.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim seu script de manuseio do PUT tem que copiar este arquivo em outro lugar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The filename of this temporary file is in the $PHP_PUT_FILENAME variable, and you can see the suggested destination filename in the $REQUEST_URI (may vary on non-Apache web servers).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome deste arquivo temporário esta na variável $PHP_PUT_FILENAME, e você pode ver o nome de arquivo de destino sugerido em $REQUEST_URI (deve variar em servidores diferentes do apache).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This destination filename is the one that the remote client specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este nome do arquivo de destino é o que o cliente remoto especificou.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not have to listen to this client.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não tem que ouvir o cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You could, for example, copy all uploaded files to a special uploads directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode, por exemplo, copiar todos os arquivos carregados para um diretório especial de uploads.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>III.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Características</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando o PHP na linha de comando</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Principal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Spotting References</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Demonstrando referências</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 16.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>HTTP authentication with PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 16-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 16-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 16-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 16-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Features</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Características</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 21.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Persistent Database Connections</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 19.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using remote files</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Appendix I for more information about the protocols supported by PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>See Apêndice I for more information about the protocols supported by PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Windows versions of PHP earlier than PHP 4.3 did not support remote file accessing for the following functions: include(), include_once(), require(), require_once(), and the imagecreatefromXXX functions in the Reference XLI, Image functions extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The Windows versions of PHP earlier than PHP 4.3 did not support remote file accessing for the following functions: include(), include_once(), require(), require_once(), and the imagecreatefromXXX functions in the Referência XLI, Image functions extension.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 19-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 19-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 19-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 19-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 22.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 22.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Safe Mode</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Functions restricted / disabled by safe mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 22-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 22-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is disabled in safe mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é desabilitada no safe-mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed. (on source and target)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado. (on source and target)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed. (note: only the target is checked)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado. (note: only the target is checked)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed. (note: only affected since PHP 4.2.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifica se o diretório que será afetado por esta operação tem o mesmo UID (proprietário) do script qur está sendo executado. (note: only affected since PHP 4.2.1)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using PHP from the command line</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando o PHP na linha de comando</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP safe mode is an attempt to solve the shared-server security problem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Safe Mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 22-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Security and Safe Mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Security and Safe Mode Configuration Directives</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 22-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>IV.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referência das Funções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções de Compressão Zlib</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Apache-specific Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>abs</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the absolute value of number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the argument number is of type float, the return type is also float, otherwise it is integer (as float usually has a bigger value range than integer).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o argumento número é do tipo float, o número retornado também é float, em outro caso será inteiro (mas poderá retornar float se o resultado tiver magnitude maior que inteiro).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. abs() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo de abs()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$abs = abs( -4.2); / / $abs = 4.2; (double / float) $abs2 = abs(5); / / $abs2 = 5; (integer) $abs3 = abs(-5); / / $abs3 = 5; (integer)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$abs = abs( -4.2); / / $abs = 4.2; (double / float) $abs2 = abs(5); / / $abs2 = 5; (inteiro) $abs3 = abs(-5); / / $abs3 = 5; (inteiro)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o coseno hiperbólico de arg, isto é, o valor cujo coseno hiperbólico é arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not implemented on Windows platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota: esta função não é implementada na plataforma Windows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also acos(), asinh() and atanh().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também acos(), asinh() e atanh().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the arc cosine of arg in radians. acos() is the complementary function of cos(), which means that a==cos(acos(a)) for every value of a that is within acos() &apos;range.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o inverso do coseno de arg em radianos. acos() é a função complementar de cos(), o que significa que a==cos(acos(a)) para qualquer valor de var que esteja dentro dos limites de acos().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also acosh(), asin() and atan().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também acosh(), asin() e atan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with backslashes before characters that are listed in charlist Returns a string with backslashes before characters that are listed in charlist parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string com barras invertidas antes dos caracteres que estão listados no parâmetro charlist.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It escapes \n, \r etc. in C-like style, characters with ASCII code lower than 32 and higher than 126 are converted to octal representation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como no estilo C, caracteres no código ASCII menores que 32 e maiores que 126 são convertidos para representação octadecimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be careful if you choose to escape characters 0, a, b, f, n, r, t and v.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tome cuidado se você escolher escapar caracteres 0, a, b, f, n, r, t e v.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They will be converted to \0, \a, \b, \f, \n, \r, \t and \v.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Eles serão convertidos para \0, \a, \b, \f, \n, \r, \t e \v.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP \0 (NULL), \r (carriage return), \n (newline) and \t (tab) are predefined escape sequences, while in C all of these are predefined escape sequences.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP \0 (NULL), \r (sinal de retorno), \n (novalinha) e \t (tab) são seqüencias de escape predefinidas, enquanto em C todas essas são seqüencias de escape predefinidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>charlist like &quot;\0..\37&quot;, which would escape all characters with ASCII code between 0 and 31.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>charlist como &quot;\0..\37&quot;, que que escaparia todos os caracteres em código ASCII entre 0 e 37.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. addcslashes() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. addcslashes() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you define a sequence of characters in the charlist argument make sure that you know what characters come between the characters that you set as the start and end of the range.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você define uma seqüencia de caracteres no argumento charlist certifique-se que você sabe quais os caracteres que vêm dentro do intervalo que você definiu.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also stripcslashes(), stripslashes(), htmlspecialchars(), and quotemeta().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também stripcslashes(), stripslashes(), htmlspecialchars(), e quotemeta().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with backslashes before characters that need to be quoted in database queries etc.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string com barras invertidas antes dos caracteres que precisam estar entre aspas numa pesquisa ao banco de dados e etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These characters are single quote (&apos;), double quote (&quot;), backslash (\) and NUL (the NULL byte).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estes caracteres estão com aspas simples (&apos;), dupla (&quot;), barra invertida (\) e NUL (o NULL byte).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also stripslashes(), htmlspecialchars(), and quotemeta().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>veja também stripslashes(), htmlspecialchars(), e quotemeta().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>apache_child_terminate() will register the Apache process executing the current PHP request for termination once execution of PHP code it is completed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>apache_child_terminate() apache_child_terminate() registrará o processo Apache executando a requisição atual do PHP para finalização quando a execução do código PHP terminar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It may be used to terminate a process after a script with high memory consumption has been run as memory will usually only be freed internally but not given back to the operating system.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode se utilizado para terminar um processo depois que um script que tiver um alto consumo de memória for rodado e quando essa memória normalmente só é liberada internamente, mas não é devolviva para o sistema operacional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The availability of this feature is controlled by the php.ini directive apache.child_terminate, which is set to off by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A disponibilidade desse recurso é controlado pela diretiva php.ini apache.child_terminate, que está definida off por default.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This feature is also not available on multithreaded versions of apache like the win32 version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este recurso não está disponível em versões multi-thread do Apache, como a versão para Windows 32 bits.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also exit().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também exit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>apache_lookup_uri</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This performs a partial request for a URI.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It goes just far enough to obtain all the important information about the given resource and returns this information in a class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Trabalha o suficiente para obter todas as informações importantes sobre o recurso dado e retorna esta informação em uma classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The properties of the returned class are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As propriedades da classe retornada são:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>apache_note() is an Apache-specific function which gets and sets values in a request&apos;s notes table.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>apache_note() é uma função específica do Apache que obtém e seta valores em uma tabela de notas de requisição.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called with one argument, it returns the current value of note note_name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se for chamada com um argumento, ela retorna o valor atual da nota note_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called with two arguments, it sets the value of note note_name to note_value and returns the previous value of note note_name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se for chamada com dois argumentos, ela seta o valor da nota note_name para note_value e retorna o valor anterior da nota note_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>apache_request_headers() returns an associative array of all the HTTP headers in the current request.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>apache_request_headers() retorna um array associativo de todos os headers HTTP da requisição atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is only supported when PHP runs as an Apache module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela é somente suportada se o PHP roda como um módulo do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.3.0, apache_request_headers() was called getallheaders().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Antes do PHP 4.3.0, apache_request_headers() era chamado getallheaders().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After PHP 4.3.0, getallheaders() is an alias for apache_request_headers().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Depois do PHP 4.3.0, getallheaders() é um sinônimo para apache_request_headers().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. apache_request_headers() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo apache_request_headers()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also get at the value of the common CGI variables by reading them from the environment, which works whether or not you are using PHP as an Apache module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode obter o valor das variáveis CGI comuns lendo-as a partir do ambiente, o que funciona caso esteja ou não utilizando o PHP como módulo do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use phpinfo() to see a list of all of the available environment variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Faça um phpinfo() para ver uma lista dessas variáveis chamadas variáveis ambiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>apache_response_headers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of all Apache response headers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This functionality is only available in PHP version 4.3.0 and greater.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta funcionalidade foi acrescentada a partir do PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getallheaders() and headers_sent().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também getallheaders() e headers_sent().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_change_key_case</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_change_key_case() changes the keys in the input array to be all lowercase or uppercase.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The change depends on the last optional case The change depends on the last optional case parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A mudança depende do último parâmetro (opcional) case.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can pass two constants there, CASE_UPPER and CASE_LOWER.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode passar duas constantes para ele, CASE_UPPER e CASE_LOWER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is CASE_LOWER.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão é CASE_LOWER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function will leave number indices as is.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função deixará os índices numéricos inalterados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_change_key_case() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_change_key_case()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input_array = array( &quot;FirSt &quot;= 1, &quot;SecOnd&quot; = 4); print_r(array_change_key_case($input_array, CASE_UPPER));</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$input_array = array( &quot;primeiRo &quot;= 1, &quot;segunDo&quot; = 4); print_r(array_change_key_case($input_array, CASE_UPPER);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of the above program will be:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída deste programa será:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([FIRST] = 1 [SECOND] = 2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([PRIMEIRO] = 1 [SEGUNDO] = 2)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções para manipulação de arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_chunk() splits the array into several arrays with size values in them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_chunk() divide um array em diversos arrays tendo como tamanho o valor de size.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may also have an array with less values at the end.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você provavelmente terá um array com menos valores no final.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You get the arrays as members of a multidimensional array indexed with numbers starting from zero.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Serão gerados arrays como membros de um array multidimensional com índices numéricos começando de 0 (zero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By setting the optional preserve_keys parameter to TRUE, you can force PHP to preserve the original keys from the input array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Passando o valor TRUE para o parâmetro opcional preserve_keys, pode-se forçar a preservação das chaves do array original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you specify FALSE new number indices will be used in each resulting array with indices starting from zero.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se for passado o valor FALSE, novos índices numéricos serão gerados em cada array resultante começando de 0 (zero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão é FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_chunk() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_chunk()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_count_values() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_count_values() retorna um array utilizando os valores do array input como chaves e seus respectivos números de ocorrências como valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = array (1, &quot;hello&quot;, 1, &quot;world&quot;, &quot;hello&quot;); print_r(array_count_values ($array));</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_count_values()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of the above program will be:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$array = array (1, &quot;ola&quot;, 1, &quot;mundo&quot;, &quot;ola&quot;); array_count_values ($array);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([1] = 2 [hello] = 2 [world] = 1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([1] = 2 [ola] = 2 [mundo] = 1)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_diff_assoc() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. array_diff_assoc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_diff() returns an array containing all the values of array1 that are not present in any of the other arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_diff() retorna um array contendo todos os valores de array1 que não estão presentes em nenhum dos outros argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that keys are preserved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que as chaves são preservadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_diff() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_diff()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array1 = array (&quot;a &quot;= &quot;green&quot;, &quot;red&quot;, &quot;blue&quot;, &quot;red&quot;); $array2 = array (&quot;b&quot; = &quot;green&quot;, &quot;yellow&quot;, &quot;red&quot;); $result = array_diff ($array1, $array2);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$array1 = array (&quot;a &quot;= &quot;verde&quot;, &quot;vermelho&quot;, &quot;azul&quot;, &quot;vermelho&quot;); $array2 = array (&quot;b&quot; = &quot;verde&quot;, &quot;amarelo&quot;, &quot;vermelho&quot;); $result = array_diff ($array1, $array2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes $result have array (&quot;blue&quot;);.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo acima faz com que $result seja array (&quot;azul&quot;);.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiple occurrences in $array1 are all treated the same way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ocorrências multiplas em $array1 são tratados da mesma forma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Two elements are considered equal if and only if (string) $elem1 === (string) $elem2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dois elementos são considerados iguais se, e somente se, (string) $elem1 === (string) $elem2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In words: when the string representation is the same.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em palavras: quando a representação em string é a mesma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that this function only checks one dimension of a n-dimensional array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que esta função faz compara apenas uma dimensão de um array com dimensão n.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course you can check deeper dimensions by using array_diff( $array1[0], $array2[0]);.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas, obviamente, você pode comparar outras dimensões usando array_diff( $array1[0], $array2[0]);.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This was broken in PHP 4.0.4!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não estava funcionando no PHP 4.0.4!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_diff_assoc(), array_intersect() and array_intersect_assoc().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_intersect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_fill</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_fill() fills an array with num entries of the value of the value parameter, keys starting at the start_index parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_fill() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_fill() preenche um array com o número de entradas igual a num com o valor do parâmetro value, e chaves começando a partir de start_index.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = array_fill( 5, 6, &apos;banana&apos;);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a now has the following entries using print_r():</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_fill()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([5] = banana [6] = banana [7] = banana [8] = banana [9] = banana [10] = banana)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = array_fill( 5, 6, &apos;banana&apos;); / * $a agora tem os seguintes valores: $a[5] = &quot;banana&quot;; $a[6] = &quot;banana&quot;; $a[7] = &quot;banana&quot;; $a[8] = &quot;banana&quot;; $a[9] = &quot;banana&quot;; $a[10] = &quot;banana&quot;; * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_filter() returns an array containing all the elements of input filtered according a callback function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_filter() retorna um array contendo todos os elementos do array input filtrados de acordo com uma função aplicada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the input is an associative array the keys are preserved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o array input for associativo, as chaves são preservadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_filter() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_filter()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function odd( $var) {return ($var% 2 == 1);} function even($var) {return ($var% 2 == 0);} $array1 = array (&quot;a&quot;= 1, &quot;b&quot;= 2, &quot;c&quot;= 3, &quot;d&quot;= 4, &quot;e&quot;= 5); $array2 = array (6, 7, 8, 9, 10, 11, 12); echo &quot;Odd :\n&quot;; print_r(array_filter($array1, &quot;odd&quot;)); echo &quot;Even:\n&quot;; print_r(array_filter($array2, &quot;even&quot;));</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function impar( $var) {return ($var% 2 == 1);} function par($var) {return ($var% 2 == 0);} $array1 = array (&quot;a &quot;= 1, &quot;b&quot; = 2, &quot;c &quot;= 3, &quot;d&quot; = 4, &quot;e &quot;= 5); $array2 = array (6, 7, 8, 9, 10, 11, 12); echo &quot;Impares: \n&quot;; print_r(array_filter($array1, &quot;impar&quot;)); echo &quot;Pares: \n&quot;; print_r(array_filter($array2, &quot;par&quot;));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of the program above will be:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída deste programa seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Odd:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Impares:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([a] = 1 [c] = 3 [e] = 5) Even:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([a] = 1 [c] = 3 [e] = 5) Pares:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users may not change the array itself from the callback function. e.g.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As funções utilizadas por array_filter() não devem alterar os valores do array..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Add / delete an element, unset the array that array_filter() is applied to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, adicionar ou remover um elemento, pode apagar o array ao qual está sendo aplicada array_filter().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array is changed, the behavior of this function is undefined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se este array for alterado, o comportamento desta função se torna imprevisvel.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_map() and array_reduce().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_map() e array_reduce().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_flip() returns an array in flip order, i.e. keys from trans become values and trans&apos;s values become keys.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_flip() retorna um array com com a relação entre suas chaves e valores invertida, ou seja, as chaves de trans passam a ser os valores e os valores de trans passam a ser as chaves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the values of trans need to be valid keys, i.e. they need to be either integer or string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que os valores de trans devem ser chaves válidas, ou seja, eles precisam ser inteiros não negativos ou string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A warning will be emitted if a value has the wrong type, and the key / value pair in question will not be flipped.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um aviso será mostrado se um valor é de um tipo inválido para chaves, e o par chave / valor em questão não será invertido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a value has several occurrences, the latest key will be used as its values, and all others will be lost.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um valor tem várias ocorrências, a última chave será usada como valor, e todos os outros serão perdidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_flip() returns FALSE if it fails.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_flip() retorna FALSE se falhar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_flip() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_flip()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. array_flip() example: collision</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_flip(): colisão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>now $trans is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Agora $trans é:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of the parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um array a partir dos valores fornecidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The parameters can be given an index with the = operator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Índices podem ser atribuidos aos valores através do operador =.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Syntax &quot;index = values&quot;, separated by commas, define index and values. index may be of type string or numeric.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O índice por de ser do tipo string ou numérico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When index is omitted, a integer index is automatically generated, starting at 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o índice é omitido, um índice numérico inteiro é automaticamente gerado, começando do 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If index is an integer, next generated index will be the biggest integer index + 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o índice é um inteiro, o próximo índice a ser gerado será igual ao maior índice inteiro + 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that when two identical index are defined, the last overwrite the first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que quando dois índices idênticos são definidos, o último sobrescreve o primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example demonstrates how to create a two-dimensional array, how to specify keys for associative arrays, and how to skip-and-continue numeric indices in normal arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo a seguir demonstra como criar um array com duas dimensões, como especificar chaves em arrays associativos, e como definir índices numéricos em arrays normais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array (&quot;fruits &quot;= array (&quot;a&quot;= &quot;orange&quot;, &quot;b&quot;= &quot;banana&quot;, &quot;c&quot;= &quot;apple&quot;), &quot;numbers&quot; = array (1, 2, 3, 4, 5, 6), &quot;holes &quot;= array (&quot;first&quot;, 5 = &quot;second&quot;, &quot;third&quot;));</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$frutas = array (&quot;frutas &quot;= array (&quot;a&quot;= &quot;laranja&quot;, &quot;b&quot;= &quot;banana&quot;, &quot;c&quot;= &quot;melancia&quot;), &quot;numeros&quot; = array (1, 2, 3, 4, 5, 6), &quot;buracos &quot;= array (&quot;primeiro&quot;, 5 = &quot;segundo&quot;, &quot;terceiro&quot;));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Automatic index with array()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Indexação automática com array()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = array( 1, 1, 1, 1, 1, 8= 1, 4= 1, 19, 3= 13); print_r($array);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$array = array( 1, 1, 1, 1, 1, 8 = 1, 4 = 1, 19, 3 = 13); print_r($array);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>will display:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vai mostrar:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example creates a 1-based array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse exemplo cria um array com o índices a partir do 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1-based index with array()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array com índices a partir do 1 com array()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$firstquarter = array( 1 = &apos;January&apos;, &apos;February&apos;, &apos;March&apos;); print_r($firstquarter);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$trimestre = array( 1 = &apos;Janeiro&apos;, &apos;Fevereiro&apos;, &apos;Marco&apos;); print_r($trimestre);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([1] = &apos;January &apos;[2] = &apos;February&apos; [3] = &apos;March &apos;)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([1] = &apos;Janeiro &apos;[2] = &apos;Fevereiro&apos; [3] = &apos;Marco &apos;)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_pad(), list(), and range().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_pad(), list() e range().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_intersect_assoc() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. array_intersect_assoc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_intersect() returns an array containing all the values of array1 that are present in all the arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_intersect() retorna um array contendo todos os valores de array1 que estão presentes nos outros argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_intersect() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_intersect()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array1 = array (&quot;a &quot;= &quot;green&quot;, &quot;red&quot;, &quot;blue&quot;); $array2 = array (&quot;b&quot; = &quot;green&quot;, &quot;yellow&quot;, &quot;red&quot;); $result = array_intersect ($array1, $array2);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$array1 = array (&quot;a &quot;= &quot;verde&quot;, &quot;vermelho&quot;, &quot;azul&quot;); $array2 = array (&quot;b&quot; = &quot;verde&quot;, &quot;amarelo&quot;, &quot;vermelho&quot;); $result = array_intersect ($array1, $array2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes $result have</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso faz com que $result tenha</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([a] = green [0] = red)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([a] = verde [0] = vermelho)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This was broken in PHP 4.0.4!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função não funcionava no PHP 4.0.4!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_intersect_assoc(), array_diff(), array_diff_assoc().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_diff().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_key_exists() returns TRUE if the given key is set in the array. key can be any value possible for an array index.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_key_exists() retorna TRUE se a chave key existe no array. key pode ser qualquer valor possível para uma chave de array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_key_exists() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_key_exists()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$search_array = array( &quot;first &quot;= 1, &quot;second&quot; = 4); if (array_key_exists(&quot;first&quot;, $search_array)) {echo &quot;The&apos;first &apos;element is in the array&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$busca_array = array( &quot;primeiro &quot;= 1, &quot;segundo&quot; = 4); if (array_key_exists(&quot;primeiro&quot;, $busca_array)) {echo &quot;O elemento &apos;primeiro &apos;está no array !&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of this function is key_exists() in PHP version 4.0.6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome dessa função é key_exists() no PHP versão 4.0.6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also isset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também isset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_keys() returns the keys, numeric and string, from the input array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_keys() retorna as chaves, numéricas e string, do array input.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional search_value is specified, then only the keys for that value are returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro opcional search_value for especificado, então apenas as chaves para esse valor serão retornadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, all the keys from the input are returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Do contrário, todas as chaves de input serão retornadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_keys() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_keys()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = array (0 = 100, &quot;color &quot;= &quot;red&quot;); print_r(array_keys ($array)); $array = array (&quot;blue&quot;, &quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;blue&quot;); print_r(array_keys ($array, &quot;blue&quot;)); $array = array (&quot;color&quot; = array(&quot;blue&quot;, &quot;red&quot;, &quot;green&quot;), &quot;size &quot;= array(&quot;small&quot;, &quot;medium&quot;, &quot;large&quot;)); print_r(array_keys ($array));</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$array = array (0 = 100, &quot;cor &quot;= &quot;vermelho&quot;); print_r(array_keys ($array)); $array = array (&quot;azul&quot;, &quot;vermelho&quot;, &quot;verde&quot;, &quot;azul&quot;, &quot;azul&quot;); print_r(array_keys ($array, &quot;azul&quot;)); $array = array (&quot;cor&quot; = array(&quot;azul&quot;, &quot;vermelho&quot;, &quot;verde&quot;), &quot;tamanho &quot;= array(&quot;pequeno&quot;, &quot;medio&quot;, &quot;grande&quot;)); print_r(array_keys ($array));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = 0 [1] = color) Array ([0] = 0 [1] = 3 [2] = 4) Array ([0] = color [1] = size)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([0] = 0 [1] = cor) Array ([0] = 0 [1] = 3 [2] = 4) Array ([0] = cor [1] = tamanho)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function was added to PHP 4, below is an implementation for those still using PHP 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Abaixo está uma implementação para aqueles que ainda usam PHP 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Implementation of array_keys() for PHP 3 users</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Implementação de array_keys() para usuários do PHP 3</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function array_keys ($arr, $term=&quot;&quot;) {$t = array(); while (list($k,$v) = each($arr)) {if ($term $v != $term) {continue;} $t[] = $k;} return $t;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function array_keys ($arr, $term=&quot;&quot;) {$t = array(); while (list($k,$v) = each($arr)) {if ($term $v != $term) {continue; $t[] = $k;} return $t;}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_values().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_values().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_map() returns an array containing all the elements of arr1 after applying the callback function to each one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_map() retorna um array contendo todos os elementos de arr1 depois de aplicada uma determinada função em cada um.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of parameters that the callback function accepts should match the number of arrays passed to the array_map()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número de parâmetros que esta função aceita deve coincidir com o número de arrays passados para a array_map()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_map() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_map()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function cube( $n) {return $n*$n*$n;} $a = array(1, 2, 3, 4, 5); $b = array_map(&quot;cube&quot;, $a); print_r($b);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function cubo( $n) {return $n*$n*$n;} $a = array(1, 2, 3, 4, 5); $b = array_map(&quot;cubo&quot;, $a); print_r($b);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes $b have:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E programa acima faz com que $b tenha:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. array_map() - using more arrays</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. array_map() - usando mais de um array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function show_Spanish( $n, $m) {return &quot;The number $n is called $m in Spanish&quot;;} function map_Spanish($n, $m) {return array ($n = $m);} $a = array(1, 2, 3, 4, 5); $b = array(&quot;uno&quot;, &quot;dos&quot;, &quot;tres&quot;, &quot;cuatro&quot;, &quot;cinco&quot;); $c = array_map(&quot;show_Spanish&quot;, $a, $b); print_r($c); $d = array_map(&quot;map_Spanish&quot;, $a, $b); print_r($d);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function mostrar_Espanhol( $n, $m) {return &quot;O número $n é chamado de $m na Espanha&quot;;} function map_Espanhol($n, $m) {return array ($n = $m);} $a = array(1, 2, 3, 4, 5); $b = array(&quot;uno&quot;, &quot;dos&quot;, &quot;tres&quot;, &quot;cuatro&quot;, &quot;cinco&quot;); $c = array_map(&quot;mostrar_Espanhol&quot;, $a, $b); print_r($c); $d = array_map(&quot;map_Espanhol&quot;, $a, $b); print_r($d);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This results:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Resultará em:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / printout of $c Array ([0] = The number 1 is called uno in Spanish [1] = The number 2 is called dos in Spanish [2] = The number 3 is called tres in Spanish [3] = The number 4 is called cuatro in Spanish [4] = The number 5 is called cinco in Spanish) / / printout of $d Array ([0] = Array ([1] = uno) [1] = Array ([2] = dos) [2] = Array ([3] = tres) [3] = Array ([4] = cuatro) [4] = Array ([5] = cinco))</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / Saída de $c Array ([0] = O número 1 é chamado de uno na Espanha [1] = O número 2 é chamado de dos na Espanha [2] = O número 3 é chamado de tres na Espanha [3] = O número 4 é chamado de cuatro na Espanha [4] = O número 5 é chamado de cinco na Espanha) / / Saída de $d Array ([0] = Array ([1] = uno) [1] = Array ([2] = dos) [2] = Array ([3] = tres) [3] = Array ([4] = cuatro) [4] = Array ([5] = cinco))</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Usually when using two or more arrays, they should be of equal length because the callback function is applied in parallel to the corresponding elements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Normalmente quando se usa dois ou mais arrays, eles devem ter o mesmo tamanho porque a função callback é aplicada paralelamente nos elementos correpondentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the arrays are of unequal length, the shortest one will be extended with empty elements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se os arrays tem tamanhos diferentes, o menor array será extendido com elementos vazios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An interesting use of this function is to construct an array of arrays, which can be easily performed by using NULL as the name of the callback function</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma forma interessante de se usar esta função é na construção de um array de arrays, o que pode ser facilmente feito usando NULL como o nome da função callback.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creating an array of arrays</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Criando um array de arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = array( 1, 2, 3, 4, 5); $b = array(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;, &quot;five&quot;); $c = array(&quot;uno&quot;, &quot;dos&quot;, &quot;tres&quot;, &quot;cuatro&quot;, &quot;cinco&quot;); $d = array_map(null, $a, $b, $c); print_r($d);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $a = array( 1, 2, 3, 4, 5); $b = array(&quot;um&quot;, &quot;dois&quot;, &quot;tres&quot;, &quot;quatro&quot;, &quot;cinco&quot;); $c = array(&quot;uno&quot;, &quot;dos&quot;, &quot;tres&quot;, &quot;cuatro&quot;, &quot;cinco&quot;); $d = array_map(null, $a, $b, $c); print_r($d);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of the program above will be:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída do programa acima seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_filter(), array_reduce(), and array_walk().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_filter(), array_reduce() e array_walk().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_merge() merges the elements of two or more arrays together so that the values of one are appended to the end of the previous one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_merge() funde os elementos dois ou mais arrays de forma que os elementos de um são colocados no final do array anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the resulting array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o array resultante da fusão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the input arrays have the same string keys, then the later value for that key will overwrite the previous one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se os arrays dados têm as mesmas chaves string, então o último valor para uma chave irá sobrescrever o valor anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If, however, the arrays contain numeric keys, the later value will not overwrite the original value, but will be appended.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se, no entanto, os arrays tem as mesmas chaves numéricas, o último valor para uma chave não sobrescreverá o valor original, e sim adicionado ao array resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_merge() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_merge()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array1 = array (&quot;color &quot;= &quot;red&quot;, 2, 4); $array2 = array (&quot;a&quot;, &quot;b&quot;, &quot;color&quot; = &quot;green&quot;, &quot;shape &quot;= &quot;trapezoid&quot;, 4); $result = array_merge ($array1, $array2);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$array1 = array (&quot;cor &quot;= &quot;vermelho&quot;, 2, 4); $array2 = array (&quot;a&quot;, &quot;b&quot;, &quot;cor&quot; = &quot;verde&quot;, &quot;forma &quot;= &quot;trapezoide&quot;, 4); $result = array_merge ($array1, $array2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The $result will be:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Neste caso $result será:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([color] = green [0] = 2 [1] = 4 [2] = a [3] = b [shape] = trapezoid [4] = 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([cor] = verde [0] = 2 [1] = 4 [2] = a [3] = b [forma] = trapezoide [4] = 4)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple array_merge() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo simples de array_merge()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Don &apos;t forget that numeric keys will be renumbered!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não esqueça que as chaves numéricas serão reordenadas!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to completely preserve the arrays and just want to append them to each other, use the + operator:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quer preservar os arrays e apenas concatená-los, o operador +:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shared keys will be overwritten on a first-come first-served basis.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Chaves coincidentes serão sobrescritas usando as regras de primeira ocorrência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_merge_recursive().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_merge_recursive().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_merge_recursive() merges the elements of two or more arrays together so that the values of one are appended to the end of the previous one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_merge_recursive() funde os elementos de dois ou mais arrays de forma que os elementos de um são colocados no final do array anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the input arrays have the same string keys, then the values for these keys are merged together into an array, and this is done recursively, so that if one of the values is an array itself, the function will merge it with a corresponding entry in another array too.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se os arrays dados tem as mesmas chaves string, então os valores para uma chave são fundidos em um array, e isso é feito recursivamente, sendo que, se um dos valores for um array também, este função irá fundi-lo com os valores correspondentes no array resultante também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If, however, the arrays have the same numeric key, the later value will not overwrite the original value, but will be appended.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se, no entanto, os arrays tem as mesmas chaves numéricas, o último valor para uma chave não sobrescreverá o valor original, e sim adicionado ao array resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_merge_recursive() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_merge_recursive()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$ar1 = array (&quot;color &quot;= array (&quot;favorite&quot; = &quot;red&quot;), 5); $ar2 = array (10, &quot;color &quot;= array (&quot;favorite&quot; = &quot;green&quot;, &quot;blue&quot;)); $result = array_merge_recursive ($ar1, $ar2);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$ar1 = array (&quot;cor &quot;= array (&quot;favorita&quot; = &quot;vermelho&quot;), 5); $ar2 = array (10, &quot;cor &quot;= array (&quot;favorita&quot; = &quot;verde&quot;, &quot;azul&quot;)); $result = array_merge_recursive ($ar1, $ar2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([color] = Array ([favorite] = Array ([0] = red [1] = green) [0] = blue) [0] = 5 [1] = 10)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([color] = Array ([favorita] = Array ([0] = vermelho [1] = verde) [0] = azul) [0] = 5 [1] = 10)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_merge().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_merge().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_multisort() can be used to sort several arrays at once or a multi-dimensional array according by one of more dimensions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_multisort() pode ser usada para ordenar vários arrays de uma vez ou apenas um array multi-dimensional de acordo com uma das dimensões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It maintains key association when sorting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A associação entre chaves e valores é mantida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The input arrays are treated as columns of a table to be sorted by rows - this resembles the functionality of SQL ORDER BY clause.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os arrays dados são tratados como colunas de uma tabela a ser classificada pelas linhas - isso lembra a funcionalidade da cláusula ORDER BY da SQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first array is the primary one to sort by.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro array é o principal na ordenação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The rows (values) in that array that compare the same are sorted by the next input array, and so on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As linhas (valores) no primeiro array serve de base para a ordenação do próximo, e assim por diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The argument structure of this function is a bit unusual, but flexible.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A estrutura de argumentos dessa função não é muito normal, mas bastante flexível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The very first argument has to be an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro argumento de todos deve ser um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subsequently, each argument can be either an array or a sorting flag from the following lists.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Subsequentemente, cada argumento pode ser um array ou um dos sinais de classificação da lista a seguir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting order flags:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sinais de ordem de classificação:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_ASC - sort in ascending order</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_ASC - classifica na ordem crescente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_DESC - sort in descending order</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_DESC - classifica na ordem descrescente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting type flags:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sinais de tipos de ordenação:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_REGULAR - compare items normally</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_REGULAR - compara os elementos normalmente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_NUMERIC - compare items numerically</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_NUMERIC - compara os elementos como itens numéricos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_STRING - compare items as strings</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_STRING - compara os elementos como strings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No two sorting flags of the same type can be specified after each array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não podem existir dois sinais de ordenação do mesmo tipo especificados para um mesmo array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sorting flags specified after an array argument apply only to that array - they are reset to default SORT_ASC and SORT_REGULAR before each new array argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os sinais de ordenação especificados depois de um array se aplicam apenas para esse array - a eles são atribuídos por padrão os valores SORT_ASC e SORT_REGULAR depois de cada novo argumento do tipo array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting multiple arrays</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ordenando múltiplos arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this example, after sorting, the first array will contain 10, &quot;a&quot;, 100, 100.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nesse exemplo, depois da ordenação, o primeiro array terá 10, &quot;a&quot;, 100, 100.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second array will contain 1, 1, &quot;2&quot;, 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo conterá 1, 1, &quot;2&quot;, 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The entries in the second array corresponding to the identical entries in the first array (100 and 100) were sorted as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os elementos do segundo array que correpondem aos do primeiro (100 e 100) também foram ordenados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting multi-dimensional array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ordenando um array multi-dimensional</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this example, after sorting, the first array will contain 10, 100, 100, &quot;a&quot; (it was sorted as strings in ascending order), and the second one will contain 1, 3, &quot;2&quot;, 1 (sorted as numbers, in descending order).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nesse exemplo, depois da ordenação, o primeiro array terá 10, 100, 100, &quot;a&quot; (foi ordenado como strings em ordem crescente), e o segundo conterá 1, 3, &quot;2&quot;, 1 (classificado como números, em ordem descrescente).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_pad() returns a copy of the input padded to size specified by pad_size with value pad_value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_pad() retorna uma cópia de input expandido para o comprimento especificado por pad_size com o valor pad_value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If pad_size is positive then the array is padded on the right, if it &apos;s negative then on the left.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se pad_size for positivo então o array é expandido pela direita, se for negativo, pela esquerda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the absolute value of pad_size is less than or equal to the length of the input then no padding takes place.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o valor absoluto de pad_size for menor ou igual ao comprimento de input, então ele permanece inalterado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_pad() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_pad()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array (12, 10, 9); $result = array_pad ($input, 5, 0); / / result is array (12, 10, 9, 0, 0) $result = array_pad ($input, -7, -1); / / result is array (-1, -1, -1, -1, 12, 10, 9) $result = array_pad ($input, 2, &quot;noop&quot;); / / not padded</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$input = array (12, 10, 9); $result = array_pad ($input, 5, 0); / / $result é array (12, 10, 9, 0, 0) $result = array_pad ($input, -7, -1); / / $result é array (-1, -1, -1, -1, 12, 10, 9) $result = array_pad ($input, 2, &quot;noop&quot;); / / Não será expandido</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_pop() pops and returns the last value of the array, shortening the array by one element.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_pop() retira e retorna o último elemento de array, diminuindo array em um elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If array is empty (or is not an array), NULL will be returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se array estiver vazio (ou se não for um array), o valor NULL é retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_pop() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_pop()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$stack = array (&quot;orange&quot;, &quot;banana&quot;, &quot;apple&quot;, &quot;raspberry&quot;); $fruit = array_pop ($stack);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$cesta = array (&quot;laranja&quot;, &quot;banana&quot;, &quot;melancia&quot;, &quot;morango&quot;); $fruta = array_pop ($cesta);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After this, $stack will have only 3 elements:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Depois disso, $cesta terá 3 elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = orange [1] = banana [2] = apple)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([0] = laranja [1] = banana [2] = melancia)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function may return Boolean FALSE, but may also return a non-Boolean value which evaluates to FALSE, such as 0 or &quot;&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função pode retornar o booleano FALSE, mas também pode retornar um valor não-booleano que pode ser avaliado como FALSE, como 0 ou &quot;&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read the section on Booleans for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Leia a seção em Booleanos para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the === operator for testing the return value of this function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilize o operador === para testar o valor retornado por esta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_push(), array_shift(), and array_unshift().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_push(), array_shift(), e array_unshift().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_push() treats array as a stack, and pushes the passed variables onto the end of array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_push() trata array como uma pilha, e adiciona as variáveis passadas como argumentos no final de array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length of array increases by the number of variables pushed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comprimento de array aumenta de acordo com o número de variáveis adicionadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Has the same effect as:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tem o mesmo efeito de:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the new number of elements in the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o novo número de elementos do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_push() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_push()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$stack = array (&quot;orange&quot;, &quot;banana&quot;); array_push ($stack, &quot;apple&quot;, &quot;raspberry&quot;);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$cesta = array (&quot;laranja&quot;, &quot;morango&quot;); array_push ($cesta, &quot;melancia&quot;, &quot;batata&quot;);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would result in $stack having the following elements:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Neste caso $stack teria os seguintes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = orange [1] = banana [2] = apple [3] = raspberry)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([0] = laranja [1] = morango [2] = melancia [3] = batata)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_pop(), array_shift(), and array_unshift().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: array_pop(), array_shift(), e array_unshift().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_rand() is rather useful when you want to pick one or more random entries out of an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_rand() é bastante útil quando se quer conseguir aleatoriamente um ou mais elementos de um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes an input array and an optional argument num_req which specifies how many entries you want to pick - if not specified, it defaults to 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela recebe o array input e outro argumento opcional num_req o qual especifica quantos elementos se quer conseguir - se não for especificado, o padrão é 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are picking only one entry, array_rand() returns the key for a random entry.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se estiver pegando apenas um elemento, array_rand() retorna a chave para este elemento aleatório.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, it returns an array of keys for the random entries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De outra forma, ele retorna um array com as chaves desses elementos aleatórios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is done so that you can pick random keys as well as values out of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim é possível conseguir chaves e valores aleatórios a partir da mesma função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Don&apos; t forget to call srand() to seed the random number generator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não esqueça de chamar a função srand() para disparar o gerador de números aleatórios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_rand() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_rand()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_reduce() applies iteratively the function function to the elements of the array input, so as to reduce the array to a single value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_reduce() aplica iterativamente a função definida em callback nos elementos de input, de forma a reduzi-lo a um único valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional initial is available, it will be used at the beginning of the process, or as a final result in case the array is empty.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o argumento opcional initial for passado, ele será utilizado no início do processo, ou como um resultado final se o array estiver vazio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_reduce() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_reduce()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function rsum( $v, $w) {$v += $w; return $v;} function rmul($v, $w) {$v *= $w; return $v;} $a = array(1, 2, 3, 4, 5); $x = array(); $b = array_reduce($a, &quot;rsum&quot;); $c = array_reduce($a, &quot;rmul&quot;, 10); $d = array_reduce($x, &quot;rsum&quot;, 1);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function soma( $v, $w) {$v += $w; return $v;} function multiplicacao($v, $w) {$v *= $w; return $v;} $a = array(1, 2, 3, 4, 5); $x = array(); $b = array_reduce($a, &quot;soma&quot;); $c = array_reduce($a, &quot;multiplicacao&quot;, 10); $d = array_reduce($x, &quot;soma&quot;, 1);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will result in $b containing 15, $c containing 1200 (= 1*2*3*4*5*10), and $d containing 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso resultará em $b contendo 15, $c contendo 1200 (= 1*2*3*4*5*10), e $d contendo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_filter() and array_map().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_filter(), array_map().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_reverse() takes input array and returns a new array with the order of the elements reversed, preserving the keys if preserve_keys is TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_reverse() recebe o argumento array e retorna um novo array com a ordem dos elementos invertida, preservando as chaves se o argumento preserve_keys for TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_reverse() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_reverse()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array (&quot;php&quot;, 4.0, array (&quot;green&quot;, &quot;red&quot;)); $result = array_reverse ($input); $result_keyed = array_reverse ($input, TRUE);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$input = array (&quot;php&quot;, 4.0, array (&quot;verde&quot;, &quot;vermelho&quot;)); $result = array_reverse ($input); $result_keyed = array_reverse ($input, TRUE);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes both $result and $result_keyed have the same elements, but note the difference between the keys.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O programa acima fará com que $result e $result_keyed tenham os mesmos elementos, mas note a diferença entre as chaves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of $result and $result_keyed will be:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída de $result e $result_keyed será:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = Array ([0] = green [1] = red) [1] = 4 [2] = php) Array ([2] = Array ([0] = green [1] = red) [1] = 4 [0] = php)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([0] = Array ([0] = verde [1] = vermelho) [1] = 4 [2] = php) Array ([2] = Array ([0] = verde [1] = vermelho) [1] = 4 [0] = php)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter was added in PHP 4.0.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo argumento foi adicionado no PHP 4.0.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches haystack for needle and returns the key if it is found in the array, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Procura em haystack pelo valor needle e retorna sua chave se for encontrado no array, e FALSE em caso contrário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.2.0, array_search() returns NULL on failure instead of FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.2.0, array_search() retorna NULL em caso de falha ao invés de FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional third parameter strict is set to TRUE then the array_search() will also check the types of the needle in the haystack.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o terceiro parâmetro opcional strict for passado como TRUE então array_search() também fará uma checagem de tipos de needle em haystack.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_keys() and in_array().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_keys() e in_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_shift() shifts the first value of the array off and returns it, shortening the array by one element and moving everything down.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_shift() retira o primeiro elemento de array e o retorna, diminuindo array em um elemento e movendo todos os outros elementos para trás.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All numerical array keys will be modified to start counting from zero while literal keys won &apos;t be touched.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as chaves numéricas alteradas para começar a contar a de 0 (zero), enquanto chaves string permanecerão inalteradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_shift() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_shift()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$stack = array (&quot;orange&quot;, &quot;banana&quot;, &quot;apple&quot;, &quot;raspberry&quot;); $fruit = array_shift ($stack);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$cesta = array (&quot;laranja&quot;, &quot;banana&quot;, &quot;melancia&quot;, &quot;morango&quot;); $fruta = array_shift ($cesta);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This would result in $stack having 3 elements left:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O programa acima resultaria em $stack tendo 3 elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = banana [1] = apple [2] = raspberry)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([0] = banana [1] = melancia [2] = morango)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_unshift(), array_push(), and array_pop().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_unshift(), array_push() e array_pop().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_slice() returns the sequence of elements from the array array as specified by the offset and length parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_slice() retorna a sequência de elementos de array especificada pelos parâmetros offset e length.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset is positive, the sequence will start at that offset in the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se offset for positivo, a sequência começará do início de array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset is negative, the sequence will start that far from the end of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se offset for negativo, a sequência começará dessa distância do final de array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is given and is positive, then the sequence will have that many elements in it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se length for especificado e positivo, então a sequência terá essa quantidade de elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is given and is negative then the sequence will stop that many elements from the end of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se length for especificado e negativo então a sequência pará dessa quantidade elementos a partir do final do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is omitted, then the sequence will have everything from offset up until the end of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se for omitido, então a sequência terá todos os elementos a partir de offset até o final de array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that array_slice() will ignore array keys, and will calculate offsets and lengths based on the actual positions of elements within the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que array_slice() ignorará chaves e irá calcular os inícios e comprimentos dos intervalos baseada na posição absoluta dos elementos no array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_slice() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos de array_slice()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;); $output = array_slice ($input, 2); / / returns &quot;c&quot;, &quot;d&quot;, and &quot;e &quot;$output = array_slice ($input, 2, -1); / / returns &quot;c&quot;, &quot;d&quot; $output = array_slice ($input, -2, 1); / / returns &quot;d &quot;$output = array_slice ($input, 0, 3); / / returns &quot;a&quot;, &quot;b&quot;, and &quot;c&quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$input = array (&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;); $output = array_slice ($input, 2); / / retorna &quot;c&quot;, &quot;d&quot;, e &quot;e &quot;$output = array_slice ($input, 2, -1); / / retorna &quot;c&quot;, &quot;d&quot; $output = array_slice ($input, -2, 1); / / retorna &quot;d &quot;$output = array_slice ($input, 0, 3); / / retorna &quot;a&quot;, &quot;b&quot;, e &quot;c&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_splice().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_splice().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns an array containing the extracted elements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_splice() remove a sequência de elementos do array input especificados por offset e length, e os substitui com os elementos do array replacement, se for especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset is positive then the start of removed portion is at that offset from the beginning of the input If offset is positive then the start of removed portion is at that offset from the beginning of the input array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se offset for positivo então o começo da região a ser removida será nessa posição a partir do início do array input.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset is negative then it starts that far from the end of the input array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se offset for negativo então o ínicio será dessa distância do final de input.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is omitted, removes everything from offset to the end of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se length for omitido, todos os elementos a partir de offset até o final do array serão removidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is specified and is positive, then that many elements will be removed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se length for especificado e positivo, então essa quantidade de elementos será removida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If length is specified and is negative then the end of the removed portion will be that many elements from the end of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se length for especificado e negativo então o final da região a ser removida será dessa quantidade de elementos a partir do final do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip: to remove everything from offset to the end of the array when replacement is also specified, use count( $input) for length.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dica: para remover todos elementos a partir de offset até o final do array quando replacement também é especificado, use count( $input) para o argumento length.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If replacement array is specified, then the removed elements are replaced with elements from this array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o array replacement Se o array replacement for especificado, então os elementos removidos serão substituidos pelo elementos desse array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If offset and length are such that nothing is removed, then the elements from the replacement array are inserted in the place specified by the offset.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se offset e length são dados de forma que nada será removido, então os elementos de replacement serão inseridos no lugar especificado por offset.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip: if the replacement is just one element it is not necessary to put array() around it, unless the element is an array itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dica: se a substituição for de apenas um elemento então não será necessário colocar array() para ele, a não ser que elementos seja um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following equivalences hold:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As seguintes equivalências abaixo são válidas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the array consisting of removed elements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um array contendo os elementos removidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_splice() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos de array_splice()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array (&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;yellow&quot;); array_splice ($input, 2); / / $input is now array (&quot;red&quot;, &quot;green&quot;) $input = array (&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;yellow&quot;); array_splice ($input, 1, -1); / / $input is now array (&quot;red&quot;, &quot;yellow&quot;) $input = array (&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;yellow&quot;); array_splice ($input, 1, count($input), &quot;orange&quot;); / / $input is now array (&quot;red&quot;, &quot;orange&quot;) $input = array (&quot;red&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;yellow&quot;); array_splice ($input, -1, 1, array(&quot;black&quot;, &quot;maroon&quot;)); / / $input is now array (&quot;red&quot;, &quot;green&quot;, / / &quot;blue&quot;, &quot;black&quot;, &quot;maroon&quot;)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$input = array (&quot;vermelho&quot;, &quot;verde&quot;, &quot;azul&quot;, &quot;amarelo&quot;); array_splice ($input, 2); / / $input será agora array (&quot;vermelho&quot;, &quot;verde&quot;) $input = array (&quot;vermelho&quot;, &quot;verde&quot;, &quot;azul&quot;, &quot;amarelo&quot;); array_splice ($input, 1, -1); / / $input será agora array (&quot;vermelho&quot;, &quot;amarelo&quot;) $input = array (&quot;vermelho&quot;, &quot;verde&quot;, &quot;azul&quot;, &quot;amarelo&quot;); array_splice ($input, 1, count($input), &quot;laranja&quot;); / / $input será agora array (&quot;vermelho&quot;, &quot;laranja&quot;) $input = array (&quot;vermelho&quot;, &quot;verde&quot;, &quot;azul&quot;, &quot;amarelo&quot;); array_splice ($input, -1, 1, array(&quot;preto&quot;, &quot;marrom&quot;)); / / $input será agora array (&quot;vermelho&quot;, &quot;verde&quot;, &quot;azul&quot;, &quot;preto&quot;, &quot;marrom&quot;)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_slice().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_slice().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_sum() returns the sum of values in an array as an integer or float.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_sum() retorna a soma dos valores de um array como inteiro ou real.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_sum() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos de array_sum()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = array( 2, 4, 6, 8); echo &quot;sum(a) = &quot;.array_sum($a) .&quot;\n&quot;; $b = array(&quot;a&quot;= 1.2 ,&quot;b&quot;= 2.3 ,&quot;c&quot;= 3.4); echo &quot;sum(b) = &quot;.array_sum($b) .&quot;\n&quot;;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = array( 2, 4, 6, 8); echo &quot;soma(a) = &quot;.array_sum($a) .&quot;\n&quot;; $b = array(&quot;a &quot;= 1.2, &quot;b&quot; = 2.3, &quot;c &quot;= 3.4); echo &quot;soma(b) = &quot;.array_sum($b) .&quot;\n&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sum( a) = 20 sum(b) = 6.9</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>soma( a) = 20 soma(b) = 6.9</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP versions prior to 4.0.6 modified the passed array itself and converted strings to numbers (which most of the time converted them to zero, depending on their value).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Até a versão 4.0.6 do PHP, o array em si é modificado e converte strings para valores numéricos (as quais na maioria das vezes é convertida para zero a depender dos seus valores).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_unique() takes input array and returns a new array without duplicate values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_unique() recebe o argumento array e retorna um novo array sem valores duplicados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that keys are preserved. array_unique() sorts the values treated as string at first, then will keep the first key encountered for every value, and ignore all following keys.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que as chaves são preservadas. array_unique() ordena inicialmente os valores como strings mantendo a primeira chave encontrada para cada valor, e ignorando as chaves encontradas posteriormente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It does not mean that the key of the first related value from the unsorted array will be kept.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso não significa que a chave do primeiro valor do array ainda desordenado será mantido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In words: when the string representation is the same.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em palavras: quando a represetação em string é a mesma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first element will be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro será usado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_unique() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_unique()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array (&quot;a &quot;= &quot;green&quot;, &quot;red&quot;, &quot;b&quot; = &quot;green&quot;, &quot;blue&quot;, &quot;red&quot;); $result = array_unique ($input); print_r($result);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$input = array (&quot;a &quot;= &quot;verde&quot;, &quot;vermelho&quot;, &quot;b&quot; = &quot;verde&quot;, &quot;azul&quot;, &quot;vermelho&quot;); $result = array_unique ($input); print_r($result);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([b] = green [1] = blue [2] = red)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([b] = verde [1] = azul [2] = vermelho)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. array_unique() and types</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. array_unique() e tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$input = array (4 ,&quot;4&quot; ,&quot;3&quot;,4,3 ,&quot;3&quot;); $result = array_unique ($input); var_dump($result);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$input = array (4, &quot;4&quot;, &quot;3&quot;, 4, 3, &quot;3&quot;); $result = array_unique ($input); var_dump($result);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The printout of the program above will be (PHP 4.0.6):</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída do programa acima seria (PHP 4.0.6):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_unshift() prepends passed elements to the front of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_unshift() adiciona os elementos passados como argumentos no início de array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the list of elements is prepended as a whole, so that the prepended elements stay in the same order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que a lista de elementos é adicionada como um todo, de forma que eles ficam na mesma ordem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All numerical array keys will be modified to start counting from zero while literal keys won &apos;t be touched.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as chaves numéricas serão modificadas para começar a contar de 0 (zero) enquanto chaves strings permanecerão inalteradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the new number of elements in the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o novo número de elementos de array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_unshift() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_unshift()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$queue = array (&quot;orange&quot;, &quot;banana&quot;); array_unshift ($queue, &quot;apple&quot;, &quot;raspberry&quot;);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$cesta = array (&quot;laranja&quot;, &quot;banana&quot;); array_unshift ($cesta, &quot;melancia&quot;, &quot;morango&quot;);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This would result in $queue having the following elements:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O programa acima resultaria em $queue contendo os seguintes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = apple [1] = raspberry [2] = orange [3] = banana)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([0] = melancia [1] = morango [2] = laranja [3] = banana)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_shift(), array_push(), and array_pop().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_shift(), array_push() e array_pop().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_values() returns all the values from the input array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_values() retorna todos os valores do array input.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_values() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_values()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$array = array (&quot;size &quot;= &quot;XL&quot;, &quot;color&quot; = &quot;gold&quot;); print_r(array_values ($array));</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$array = array (&quot;tamanho &quot;= &quot;G&quot;, &quot;cor&quot; = &quot;dourado&quot;); print_r(array_values ($array));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = XL [1] = gold)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([0] = G [1] = dourado)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function was added to PHP 4, below is an implementation for those still using PHP 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função foi adicionada no PHP 4, abaixo segue uma implementação para aqueles que ainda usam PHP 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Implementation of array_values() for PHP 3 users</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Implementação de array_values() para PHP 3 users</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_keys().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_keys().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_walk</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Applies the user-defined function function to each element of the array array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Typically, function takes on two parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aplica uma função definida pelo usuário nomeada pelo argumento func em cada elemento de arr.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array parameter &apos;s value being the first, and the key / index second.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Normalmente, func recebe dois argumentos: o primeiro é o valor do elemento e o segundo, sua chave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional userdata parameter is supplied, it will be passed as the third parameter to the callback function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se userdata for especificado, ele será usado como terceiro argumento da função do usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If function function requires more parameters than given to it, an error of level E_WARNING will be generated each time array_walk() calls function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se func necessita de mais argumentos do que o que está sendo passado para ela, um erro do nível E_WARNING será gerado a cada vez que array_walk() executar func.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These warnings may be suppressed by prepending the PHP error operator @ to the array_walk() call, or by using error_reporting().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esses avisos podem ser suprimidos adicionando o operador @ à chamada da função array_walk(), ou usando error_reporting().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If function needs to be working with the actual values of the array, specify the first parameter of function as a reference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se func precisar alterar realmente os valores do array, especifique que o primeiro parâmetro de func deve ser passado por referência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Then, any changes made to those elements will be made in the original array itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então qualquer mudança feita nesses elementos serão feitas no próprio array também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Passing the key and userdata to function was added in 4.0.0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A passagem das chaves e do terceiro argumento para func foi adicionada no PHP 4.0.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array_walk() is not affected by the internal array pointer of array. array_walk() will walk through the entire array regardless of pointer position.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array_walk() não é afetada pelo ponteiro interno do array arr. array_walk() irá percorrer todo o array independente da posição atual do ponteiro interno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To reset the pointer, use reset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para reiniciar o ponteiro, use reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, array_walk() resets the pointer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, array_walk() reinicia o ponteiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users may not change the array itself from the callback function. e.g.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usuários não podem alterar o array a partir da função definida para ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Add / delete elements, unset elements, etc.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, adicionar / remover elementos, removerá o array no qual array_walk() está sendo aplicada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array that array_walk() is applied to is changed, the behavior of this function is undefined, and unpredictable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. array_walk() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de array_walk()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $fruits = array (&quot;d&quot;= &quot;lemon&quot;, &quot;a&quot;= &quot;orange&quot;, &quot;b&quot;= &quot;banana&quot;, &quot;c&quot;= &quot;apple&quot;); function test_alter ($item1, $key, $prefix) {$item1 = &quot;$prefix: $item1&quot;;} function test_print ($item2, $key) {echo &quot;$key. $item2 br \n&quot;;} echo &quot;Before ...:\n&quot;; array_walk ($fruits, &apos;test_print&apos;); array_walk ($fruits, &apos;test_alter&apos;, &apos;fruit&apos;); echo &quot;... and after:\n&quot;; array_walk ($fruits, &apos;test_print&apos;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $frutas = array (&quot;d &quot;= &quot;limao&quot;, &quot;a&quot; = &quot;laranja&quot;, &quot;b &quot;= &quot;banana&quot;, &quot;c&quot; = &quot;melancia&quot;); function test_alter ($item1, $key, $prefix) {$item1 = &quot;$prefix: $item1&quot;;} function test_print ($item2, $key) {echo &quot;$key. $item2 br \n&quot;;} echo &quot;Antes ...:\n&quot;; array_walk ($frutas, &apos;test_print&apos;); array_walk ($frutas, &apos;test_alter&apos;, &apos;fruta&apos;); echo &quot;... e depois:\n&quot;; array_walk ($frutas, &apos;test_print&apos;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Before...: d. lemon a. orange b. banana c. apple... and after: d. fruit: lemon a. fruit: orange b. fruit: banana c. fruit: apple</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Antes...: d. limao a. laranja b. banana c. melancia... e depois: d. fruit: limao a. fruit: laranja b. fruit: banana c. fruit: melancia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also list(), foreach, each(), and call_user_func_array().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_map(), list(), foreach, each() e call_user_func_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sorts an array such that array indices maintain their correlation with the array elements they are associated with.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função ordena um array de forma que a correlação entre índices e valores é mantida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is used mainly when sorting associative arrays where the actual element order is significant.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É usada principalmente para ordenar arrays associativos onde a ordem dos elementos é um fator importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. arsort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de arsort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array (&quot;d&quot;= &quot;lemon&quot;, &quot;a&quot;= &quot;orange&quot;, &quot;b&quot;= &quot;banana&quot;, &quot;c&quot;= &quot;apple&quot;); arsort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo &quot;$key = $val\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$frutas = array (&quot;d &quot;= &quot;limao&quot;, &quot;a&quot; = &quot;laranja&quot;, &quot;b &quot;= &quot;banana&quot;, &quot;c&quot; = &quot;melancia&quot;); arsort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo &quot;$chave = $valor\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída deste exemplo seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>a = orange d = lemon b = banana c = apple</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>c = melancia d = limao a = laranja b = banana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fruits have been sorted in reverse alphabetical order, and the index associated with each element has been maintained.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As frutas foram ordenadas na ordem alfabética inversa, e os índices associados a cada valor foram mantidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode modificar o comportamento da ordenação usando o parâmetro opcional sort_flags, para mais detalhes veja sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asort(), rsort(), ksort(), and sort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: asort(), rsort(), ksort() e sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ascii2ebcdic() is an Apache-specific function which is available only on EBCDIC based operating systems (OS / 390, BS2000).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ascii2ebcdic() é uma função específica do Apache, somente disponível em sistemas operacionais baseados no EBCDIC (OS / 390, BS2000).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It translates the ASCII encoded string ascii_str to its equivalent EBCDIC representation (binary safe), and returns the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela converte a string codificada em ASCII ascii_str em sua representação equivalente em EBCDIC (binary safe), retornando o resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the reverse function ebcdic2ascii()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também a função inversa ebcdic2ascii()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o inverso do seno hiperbólico de arg, isto é, o valor cujo seno hiperbólico é arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asin(), acosh() and atanh().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também asin(), acosh() e atanh().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the arc sine of arg in radians. asin() is the complementary function of sin(), which means that a==sin(asin(a)) for every value of a that is within asin() &apos;s range.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o inverso do seno de arg em radianos. asin() é a função complementar de sin(), o que significa que a==sin(asin(a)) para qualquer valor de var que esteja dentro dos limites de asin().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asinh(), acos() and atan().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também asinh(), acos() e atan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sorts an array such that array indices maintain their correlation with the array elements they are associated with.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função ordena um array de forma que a correlação entre índices e valores é mantida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. asort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de asort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array (&quot;d&quot;= &quot;lemon&quot;, &quot;a&quot;= &quot;orange&quot;, &quot;b&quot;= &quot;banana&quot;, &quot;c&quot;= &quot;apple&quot;); asort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo &quot;$key = $val\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$frutas = array (&quot;d &quot;= &quot;limao&quot;, &quot;a&quot; = &quot;laranja&quot;, &quot;b &quot;= &quot;banana&quot;, &quot;c&quot; = &quot;melancia&quot;); asort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo &quot;$chave = $valor\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída desse programa seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>c = apple b = banana d = lemon a = orange</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>b = banana a = laranja d = limao c = melancia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fruits have been sorted in alphabetical order, and the index associated with each element has been maintained.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As frutas foram ordenadas na ordem alfabética, e os índices associados a cada valor foram mantidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also arsort(), rsort(), ksort(), and sort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>veja também arsort(), rsort(), ksort() e sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. aspell_check()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. aspell_check()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. aspell_check_raw()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. aspell_check_raw()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. aspell_new()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. aspell_new()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. aspell_suggest()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. aspell_suggest()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>BCMath Arbitrary Precision Mathematics Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>BCMath Funções Matemáticas de Precisão Arbitrária</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function calculates the arc tangent of the two variables x and y.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função calcula a tangente inversa de duas variaveis x e y.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is similar to calculating the arc tangent of y / x, except that the signs of both arguments are used to determine the quadrant of the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é o equivalente a calcular a tangente inversa de y / x, exceto que os sinais de ambos os argumentos são usados para determinar o quadrante do resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function returns the result in radians, which is between -PI and PI (inclusive).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna o resultado em radianos, estando entre -PI e PI (inclusive).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also acos() and atan().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também acos() e atan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a tangente hiperbólica inversa de arg, isto é, o valor cuja tangente hiperbólica é arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also atan(), asinh() and acosh().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também atan(), asinh() e acosh().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the arc tangent of arg in radians. atan() is the complementary function of tan(), which means that a==tan(atan(a)) for every value of a that is within atan() &apos;s range.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o inverso da tangente de arg em radianos. atan() é a função complementar de tan(), o que significa que var == tan(atan(var)) para qualquer valor de a que esteja dentro dos limites de atan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also atanh(), asin() and acos().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também atanh(), asin() e acos().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>base64_decode() decodes encoded_data and returns the original data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>base64_decode() decodes encoded_data e retorna o dado original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned data may be binary.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O retorno pode ser binário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: base64_encode(), RFC 2045 section 6.8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: base64_encode(), RFC-2045 seção 6.8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>URL Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções URL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>base64_encode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>base64_encode() returns data encoded with base64.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This encoding is designed to make binary data survive transport through transport layers that are not 8-bit clean, such as mail bodies.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta codificação é designada para que dados binários durem no transporte sobre camadas de transorte que não são 8-bit clean, como mensagens de e-mail.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Base64-encoded data takes about 33% more space than the original data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dados codificados na Base-64 tem aproximadamente 33% mais espaço que dos dados originais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: base64_decode(), chunk_split(), RFC 2045 section 6.8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: base64_decode(), chunk_split(), RFC-2045 seção 6.8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>base_convert</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing number represented in base tobase.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The base in which number is given is specified in frombase.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string contendo number representado na base tobase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both frombase and tobase have to be between 2 and 36, inclusive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tanto frombase quanto tobase tem que estar entre 2 e 36, inclusive.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Digits in numbers with a base higher than 10 will be represented with the letters a-z, with a meaning 10, b meaning 11 and z meaning 35.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Digitos em números com base maior do que 10 serão representados com letras a-z, com a significando 10, b significando 11 e z significando 35.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. base_convert()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. base_convert()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Given a string containing a path to a file, this function will return the base name of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dado uma string contendo um caminho para um arquivo, essa função irá retornar o nome base do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the filename ends in suffix this will also be cut off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o nome do arquivo termina com o sufixo, este também será retirado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows, both slash (/) and backslash (\) are used as path separator character.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No Windows, tanto a barra (/) quanto a barra invertida (\) são usadas como caracter de separacao do caminho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other environments, it is the forward slash (/).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outros ambientes, somente a barra (/).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. basename() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo do basename()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$path = &quot;/ home / httpd / html / index.php&quot;; $file = basename ($path); / / $file is set to &quot;index.php&quot; $file = basename ($path ,&quot;.php&quot;); / / $file is set to &quot;index &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$caminho = &quot;/ home / httpd / html / index.php&quot;; $arquivo = basename ($caminho); / / $arquivo = &quot;index.php&quot; $arquivo = basename ($caminho ,&quot;.php&quot;); / / $arquivo = &quot;index &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The suffix parameter was added in PHP 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro sufixo foi adicionado no PHP 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: dirname()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: dirname()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Filesystem functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Filesystem (Sistema de arquivos)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adds the left_operand to the right_operand and returns the sum in a string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Adiciona o operador_da_esquerda ao operador_da_direita e retorna a soma em uma string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale parameter is used to set the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional escala é usado para configurar o número de digitos depois do ponto decimal a ser usados no resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcsub().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bcsub().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Compares the left_operand to the right_operand and returns the result as an integer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Compara o operador_da_esquerda com o operador_da_direita e retorna o resultado como um inteiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale The optional scale parameter is used to set the number of digits after the decimal place which will be used in the comparison.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional escala é usado para configurar o número de digitos depois do ponto decimal que serão utilizados na comparação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value is 0 if the two operands are equal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor retornado será 0 se os operadores são iguais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the left_operand is larger than the right_operand the return value is +1 and if the left_operand is less than the right_operand the return value is -1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o operador_da_esquerda for maior do que o operador_da_direita o valor a ser retornado será +1 e se o operador_da_esquerda é menor do que o operador_da_direita o valor retornado é -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Divides the left_operand by the right_operand and returns the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Divide o operador_da_esquerda pelo operador_da_direita e retorna o resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale sets the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional escala é usado para configurar o número de dígitos depois do ponto decimal que serão mostrados no resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcmul().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bcmul().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Get the modulus of the left_operand using modulus.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Obter o módulo do operador_da_esquerda usando modulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcdiv().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bcdiv().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiply the left_operand by the right_operand and returns the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Multipica o operador_da_esquerda pelo operador_da_direita e retorna o resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale sets the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional escala configura o número de dígitos depois do ponto decimal que serão mostrados no resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>bcpow</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Raise x to the power y.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale can be used to set the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional escala configura o número de dígitos depois do ponto decimal que serão mostrados no resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcpowmod(), and bcsqrt().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bcsqrt().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sets the default scale parameter for all subsequent bc math functions that do not explicitly specify a scale parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este valor será utilizado caso o parametro escala não seja especificado em chamadas as bcmath subsequentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>bcsqrt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the square root of the operand.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale parameter sets the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional escala configura o número de digitos depois do ponto decimal que serão mostrados no resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subtracts the right_operand from the left_operand and returns the result in a string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Subtrair o operador_da_direita do operador_da_esquerda e retorna o resultado em uma string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional scale parameter is used to set the number of digits after the decimal place in the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional escala é usado para configurar o número de digitos depois do ponto decimal que serão mostrados no resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bcadd().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bcadd().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bzip2 Compression Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções de compactação com Bzip2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an ASCII string containing the hexadecimal representation of str.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string ASCII uma representação hexadecimal de str.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The conversion is done byte-wise with the high-nibble first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A conversão é feita byte-wise com o high-nibble primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pack() and unpack().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pack() e unpack().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the decimal equivalent of the binary number represented by the binary_string argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o equivalente decimal do número binário representado pelo argumento binary_string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>bindec() converts a binary number to an integer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>bindec() converte um número binário em um integer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 31 bits of 1 &apos;s or 2147483647 in decimal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O maior número que pode ser convertido é 31 bits de ums (1) ou 2147483647 em decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: decbin().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também a função decbin().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>bind_textdomain_codeset</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes the bzip2 file referenced by the pointer bz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fecha o arquivo bzip2 referenciado pelo ponteiro bz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by bzopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro de arquivo deve ser válido, e deve apontar para um arquivo aberto com sucesso com bzopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>bzcompress() compresses the source string and returns it as bzip2 encoded data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>bzcompress() comprime a string source e a retorna no formato de dados codificados com bzip2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter blocksize specifies the blocksize used during compression and should be a number from 1 to 9 with 9 giving the best compression, but using more resources to do so. blocksize defaults to 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor padrão de blocksize é 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter workfactor controls how the compression phase behaves when presented with worst case, highly repetitive, input data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro opcional workfactor controla como a fase de compressão irá se comportar quando ocorrer o pior caso: a entrada de dados muito repetitivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value can be between 0 and 250 with 0 being a special case and 30 being the default value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O seu valor pode ser de 0 até 250, com 0 sendo um caso especial, e 30 o valor padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Regardless of the workfactor, the generated output is the same.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Independente do valor de workfactor, a saída gerada será a mesma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzcompress() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de bzcompress()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $str = &quot;sample data&quot;; $bzstr = bzcompress($str, 9); print ($bzstr);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $str = &quot;demonstracao de dados comprimidos&quot;; $bzstr = bzcompress($str, 9); print($bzstr);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzdecompress().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzdecompress().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>bzdecompress() decompresses the source string containing bzip2 encoded data and returns it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>bzdecompress() descomprime a string source string contendo dados no formato bzip2 e retorna o seu valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional parameter small is TRUE, an alternative decompression algorithm will be used which uses less memory (the maximum memory requirement drops to around 2300K) but works at roughly half the speed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro opcional small for TRUE, um algoritmo alternativo de descompressão, com a utilização de menos memória (a máxima quantidade de memória requerida é em torno de 2300K), será usado mas funciona com a metade da velocidade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the bzip2 documentation for more information about this feature.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a documentação do bzip2 para mais informações sobre essa característica.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzdecompress()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. bzdecompress()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $start_str = &quot;This is not an honest face ?&quot;; $bzstr = bzcompress($start_str); print (&quot;Compressed String:&quot;); print ($bzstr); print (&quot;\n br \n &quot;); $str = bzdecompress($bzstr); print (&quot;Decompressed String:&quot;); print ($str); print (&quot;\n br \n &quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $start_str = &quot;Esse cara é legal ?&quot;; $bzstr = bzcompress($start_str); print (&quot;String comprimida:&quot;); print ($bzstr); print (&quot;\n br \n &quot;); $str = bzdecompress($bzstr); print (&quot;String descomprimida:&quot;); print ($str); print (&quot;\n br \n &quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzcompress().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzcompress().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the error number of any bzip2 error returned by the file pointer bz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o número do erro de qualquer erro do bzip2 retornado pelo ponteiro de arquivo bz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzerror() and bzerrstr().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzerror() e bzerrstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the error number and error string, in an associative array, of any bzip2 error returned by the file pointer bz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o número e string do erro, em um array associativo, de qualquer erro retornado pelo ponteiro de arquivo bz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzerror() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de bzerror()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzerrno() and bzerrstr().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzerrno() e bzerrstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the error string of any bzip2 error returned by the file pointer bz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a string de erro de qualquer erro retornado pelo ponteiro de arquivo bz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzerrno() and bzerror().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzerrno() e bzerror().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Forces a write of all buffered bzip2 data for the file pointer bz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Força a escrita de todos os dados do bzip2 que estão em buffer para o ponteiro de arquivo bz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzread() and bzwrite().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzread() e bzwrite().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a bzip2 (.bz2) file for reading or writing. filename is the name of the file to open. mode is similar to the fopen() function (`r &apos;for read, `w&apos; for write, etc.).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro filename é o nome do arquivo a ser aberto. mode é similar ao da função fopen() (`r &apos;para leitura, `w&apos; para escrita, etc.).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the open fails, the function returns FALSE, otherwise it returns a pointer to the newly opened file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se esta função falhar, retorna FALSE, do contrário retorna um ponteiro de arquivo aberto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzopen() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de bzopen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $bz = bzopen( &quot;/ tmp / foo.bz2&quot;, &quot;r&quot;); $decompressed_file = bzread($bz, filesize(&quot; / tmp / foo.bz2&quot;)); bzclose($bz); print (&quot;The contents of / tmp / foo.bz2 are:&quot;); print (&quot;\n br \n &quot;); print ($decompressed_file);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $bz = bzopen( &quot;/ tmp / foo.bz2&quot;, &quot;r&quot;); $arquivo_descomprimido = bzread($bz, filesize(&quot; / tmp / foo.bz2&quot;)); bzclose($bz); print (&quot;O conteúdo de / tmp / foo.bz2 é:&quot;); print (&quot;\n br \n &quot;); print ($arquivo_descomprimido);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzclose().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzclose().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>bzread() reads up to length bytes from the bzip2 file pointer referenced by bz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>bzread() lê o número de bytes equivalente a length do ponteiro de arquivo bzip2 referenciado por bz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading stops when length Reading stops when length (uncompressed) bytes have been read or EOF is reached, whichever comes first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A leitura pára quando a a quantidade de bytes referenciados por length (descomprimidos) foram lidos ou EOF foi alcançado, o que acontecer primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional parameter length is not specified, bzread() will read 1024 (uncompressed) bytes at a time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro opcional length não for especificado, bzread() irá ler 1024 bytes (descomprimidos) de cada vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzread() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de bzread()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzwrite() and bzopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzwrite() e bzopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>bzwrite() writes the contents of the string data to the bzip2 file stream pointed to by bz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>bzwrite() escreve o conteúdo da string data no arquivo referenciado pelo ponteiro de arquivo bzip2 bz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional length argument is given, writing will stop after length (uncompressed) bytes have been written or the end of string is reached, whichever comes first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro opcional length for passado, a escrita irá parar depois deste número de bytes (descomprimidos) foram escritos ou se o final da string foi alcançado, o que acontecer primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. bzwrite() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de bzwrite()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $str = &quot;uncompressed data&quot;; $bz = bzopen(&quot; / tmp / foo.bz2&quot;, &quot;w&quot;); bzwrite($bz, $str, strlen($str)); bzclose($bz);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $str = &quot;dados descomprimidos&quot;; $bz = bzopen(&quot; / tmp / foo.bz2&quot;, &quot;w&quot;); bzwrite($bz, $str, strlen($str)); bzclose($bz);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also bzread() and bzopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também bzread() e bzopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function barber ($type) {print &quot;You wanted a $type haircut, no problem&quot;;} call_user_func (&apos;barber&apos;, &quot;mushroom&quot;); call_user_func (&apos;barber&apos;, &quot;shave&quot;);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Object methods may also be invoked statically using this function by passing array( $objectname, $methodname) to the function parameter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: call_user_func_array(), call_user_method(), call_user_method_array().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php class myclass {function say_hello() {print &quot;Hello!\n&quot;;}} $classname = &quot;myclass&quot;; call_user_func(array($classname ,&apos;say_hello&apos;));?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The call_user_method_array() function is deprecated as of PHP 4.1.0, use the call_user_func_array() variety with the array ($obj, &quot;method_name&quot;) syntax instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilize a variante call_user_func_array() com a sintaxe array ($obj, &quot;method_name&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calls the method referred by method_name from the user defined obj object, using the parameters in paramarr.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Chama o método method_name do objeto de usuáro obj, usando os parâmetros em paramarr.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: call_user_func_array(), call_user_func(), call_user_method().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também call_user_func_array(), call_user_func() e call_user_method().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function was added to the CVS code after release of PHP 4.0.4pl1</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função foi adicionada no código CVS antes da liberaçao do PHP 4.0.4pl1</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Class / Object Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classes e Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The call_user_method() function is deprecated as of PHP 4.1.0, use the call_user_func() variety with the array ($obj, &quot;method_name&quot;) syntax instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função call_user_method() é obsoleta desde o PHP 4.1.0, portanto utilize a variante call_user_func() com a sintaxe array ($obj, &quot;method_name&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calls the method referred by method_name from the user defined obj object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Chama o método method_name do objeto de usuário obj.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example of usage is below, where we define a class, instantiate an object and use call_user_method() to call indirectly its print_info method.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo de seu uso segue abaixo, onde nós definimos uma classe, instanciamos um objeto e usamos call_user_method() para chamar indiretamente seu método print_info.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php class Country {var $NAME; var $TLD; function Country($name, $tld) {$this - NAME = $name; $this - TLD = $tld;} function print_info($prestr=&quot;&quot;) {echo $prestr .&quot;Country: &quot;.$this - NAME .&quot;\n&quot;; echo $prestr .&quot;Top Level Domain: &quot;.$this - TLD .&quot;\n&quot;;}} $cntry = new Country(&quot;Peru&quot; ,&quot;pe&quot;); echo &quot;* Calling the object method directly\n&quot;; $cntry - print_info(); echo &quot;\n* Calling the same method indirectly\n&quot;; call_user_method (&quot;print_info&quot;, $cntry, &quot;\t&quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php class Country {var $NAME; var $TLD; function Country($name, $tld) {$this - NAME = $name; $this - TLD = $tld;} function print_info($prestr=&quot;&quot;) {echo $prestr .&quot;Country: &quot;.$this - NAME .&quot;\n&quot;; echo $prestr .&quot;Top Level Domain: &quot;.$this - TLD .&quot;\n&quot;;}} $cntry = new Country(&quot;Peru&quot; ,&quot;pe&quot;); echo &quot;* Chamando o método diretamente\n&quot;; $cntry - print_info(); echo &quot;\n* Chamando o método indiretamente\n&quot;; call_user_method (&quot;print_info&quot;, $cntry, &quot;\t&quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also call_user_func_array(), call_user_func(), and call_user_method_array().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também call_user_func_array(), call_user_func() e call_user_method_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the next highest integer value by rounding up value if necessary.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o próximo maior valor inteiro arredondando para cima do valor, se fracionário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value of ceil() is still of type float as the value range of float is usually bigger than that of integer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor retornado de ceil() é do tipo float porque a dimensão dos valores suportados por float é normalmente maior do que o do tipo int.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ceil() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplos ceil()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also floor() and round().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também floor() e round().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changes PHP &apos;s current directory to directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Muda o diretório atual do PHP para diretorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure..</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se não for possível mudar de diretório ou TRUE em sucesso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getcwd().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: getcwd().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Directory functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretórios</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>checkdate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the date given is valid; otherwise returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checks the validity of the date formed by the arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se a data dada é válida; caso contrário retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A date is considered valid if:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Checa a validade da data formada pelos argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>year is between 1 and 32767 inclusive</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma data é considerada válida se:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>month is between 1 and 12 inclusive</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>o year está entre 1 e 32767</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Leap year s are taken into consideration.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Day deve está dentro do número de dias permitidos para o dado month. year s são levados em consideração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mktime() and strtotime().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mktime() e strtotime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Date and Time functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções data e hora</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to change the group of the file filename to group (specified by name or number).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenta modificar o grupo do arquivo para o grupo (nome ou número).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only the superuser may change the group of a file arbitrarily; other users may change the group of a file to any group of which that user is a member.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente o superusuário pode mudar o grupo de um arquivo arbitrário; outros usuários somente podem mudar o grupo de um arquivo para qualquer grupo qual o usuário pertença.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chown() and chmod().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também chown() e chmod().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to change the mode of the file specified by filename to that given in mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>chmod</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mode parameter consists of three octal number components specifying access restrictions for the owner, the user group in which the owner is in, and to everybody else in this order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One component can be computed by adding up the needed permissions for that target user base.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenta mudar as permissões do arquivo especificado por arquivo para o dado em modo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number 1 means that you grant execute rights, number 2 means that you make the file writeable, number 4 means that you make the file readable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que modo não é necessariamente um número octal, então strings (como &quot;g+w&quot;) não funcionarão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also read more about modes on UNIX systems with &apos;man 1 chmod&apos; and&apos;man 2 chmod &apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para garantir que a operação seja bem sucedida é necessário prefixar modo com zero (0):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>chmod (&quot;/ arquivo / diretorio&quot;, 755); / / decimal; provavelmente incorreto chmod (&quot; / arquivo / diretorio&quot;, &quot;u+rwx,go+rx&quot;); / / string; incorreto chmod (&quot; / arquivo / diretorio&quot;, 0755); / / octal; representação correta do modo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is probably not the same user you use for normal shell or FTP access.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chown() and chgrp().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também chown() e chgrp().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of rtrim().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é um alias de rtrim().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to change the owner of the file filename to user user (specified by name or number).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenta modificar o dono do arquivo para o usuario (nome ou número).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only the superuser may change the owner of a file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente o superusuário pode modificar o dono de um arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chmod().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também chmod().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a one-character string containing the character specified by ascii.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string de um único caractere contendo o caracter especificado pelo ascii.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. chr() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. chr() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find an ASCII-table over here: http: / /www.asciitable.com.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode encontrar uma tabela ASCII-table aqui: http: / /www.asciitable.com.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function complements ord().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função complementa ord().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sprintf() with a format string of %c.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também sprintf() com uma string no formato de %c.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changes the root directory of the current process to directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Muda o diretório raiz (root) do processo atual para o diretorio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure..</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se não for possível mudar o diretório raiz, retorna TRUE caso contrário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It&apos; s not wise to use this function when running in a webserver environment, because it&apos;s not possible to reset the root directory to / again at the end of the request.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não é sensato usar esta função quando rodando em um ambiente de um webserver, porque não é possível reiniciar o diretório raiz (root) para / novamente no fim do pedido (request).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will only function correct when you run PHP as command line too. (CLI)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função somente irá funcionar desta forma quando rodando num ambiente CGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Can be used to split a string into smaller chunks which is useful for e.g. converting base64_encode output to match RFC 2045 semantics.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pode dividir uma string em pequenos pedaços que são úteis para e.g. converter base64_encode output para compatibilizar com semânticas RFC 2045.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It inserts end (defaults to &quot;\r\n&quot;) every chunklen characters (defaults to 76).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela insere end (padrão para &quot;\r\n&quot;) cada caracater chunklen (padrão para 76).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the new string leaving the original string untouched.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela retorna uma nova string deixando a string original intocada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. chunk_split() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. chunk_split() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also explode(), split() wordwrap() and RFC 2045.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também explode(), split() wordwrap() e RFC 2045.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class_exists</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE if the class given by class_name has been defined, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_declared_classes().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna TRUE se a classe dada por class_name foi definida, caso contrário retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you use stat(), lstat(), or any of the other functions listed in the affected functions list (below), PHP caches the information those functions return in order to provide faster performance.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você chama stat(), lstat() ou qualquer uma das funções afetadas (listadas abaixo), o PHP mantém em cache as informações que essas funções retornam para melhoria de performance.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, in certain cases, you may want to clear the cached information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, em certos casos você pode precisar limpar as informações cacheadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, if the same file is being checked multiple times within a single script, and that file is in danger of being removed or changed during that script &apos;s operation, you may elect to clear the status cache.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, se um mesmo arquivo é verificado várias vezes em um único script, e esse arquivo corre o risco de ser apagado ou modificado durante a operação do script, você precisa limpar os dados do cache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In these cases, you can use the clearstatcache() function to clear the information that PHP caches about a file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nesses casos, você pode utilizar a função clearstatcache() para limpar todas as informações que o PHP mantém sobre um arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function caches information about specific filenames, so you only need to call clearstatcache() if you are performing multiple operations on the same filename and require the information about that particular file to not be cached.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função guarda infomações sobre arquivos específicos, de forma que você somente precisa chamar clearstatcache() se você estiver realizando várias operações sobre o mesmo arquivo e necessita que a informação sobre esse arquivo em particular não seja cacheada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Affected functions include stat(), lstat(), file_exists(), is_writable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype(), and fileperms().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As funções afetadas são stat(), lstat(), file_exists(), is_writable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype(), e fileperms().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes the directory stream indicated by dir_handle.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fecha o stream do diretório indicado por dir_handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The stream must have previously been opened by opendir().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O stream deve ter sido previamente aberto por opendir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>compact</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>compact() takes a variable number of parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each parameter can be either a string containing the name of the variable, or an array of variable names.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada parâmetro pode ser tanto uma string contendo o nome da variável, como um array com nomes de variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The array can contain other arrays of variable names inside it; compact() handles it recursively.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sendo um array, ele pode conter outros arrays de nomes de variáveis; compact() trata isso recursivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For each of these, compact() For each of these, compact() looks for a variable with that name in the current symbol table and adds it to the output array such that the variable name becomes the key and the contents of the variable become the value for that key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para cada um dos parâmetros passados, compact() procura uma variável com o nome especificado na tabela de símbolos e a adiciona no array de saída de forma que o nome da variável será a chave e o seu conteúdo será o valor para esta chave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In short, it does the opposite of extract().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em resumo, ela faz o oposto de extract().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns the output array with all the variables added to it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um array de saída com todas as variáveis adicionadas a ele.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any strings that are not set will simply be skipped.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer string com nome de uma variável que não exista será simplesmente ignorada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. compact() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de compact()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$city = &quot;San Francisco&quot;; $state = &quot;CA&quot;; $event = &quot;SIGGRAPH&quot;; $location_vars = array (&quot;city&quot;, &quot;state&quot;); $result = compact (&quot;event&quot;, &quot;nothing_here&quot;, $location_vars);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$cidade = &quot;Sao Paulo&quot;; $estado = &quot;SP&quot;; $evento = &quot;SIGGRAPH&quot;; $localidade = array (&quot;cidade&quot;, &quot;estado&quot;); $result = compact (&quot;evento&quot;, &quot;nada_aqui&quot;, $localidade);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After this, $result will be:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Depois disso, $result será:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([event] = SIGGRAPH [city] = San Francisco [state] = CA)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([evento] = SIGGRAPH [cidade] = Sao Paulo [estado] = SP)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also extract().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também extract().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>connection_aborted</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if client disconnected.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Connection Handling description in the Features chapter for a complete explanation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a descrição de Connection Handling no capitulo Features para uma explicação completa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>connection_status</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the connection status bitfield.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>connection_timeout</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is deprecated, and doesn &apos;t even exist anymore as of 4.0.5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Obsoleta</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>constant() will return the value of the constant indicated by name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função constant() irá retornar o valor de uma constante indicada pelo parâmetro name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>constant() is useful if you need to retrieve the value of a constant, but do not know it&apos;s name. i.e.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função constant() é útil se você precisa pegar o valor de uma constante, mas não sabe o seu nome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is stored in a variable or returned by a function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ex: esta guardada em uma variável ou é retornada por uma função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. constant() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo constant()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php define (&quot;MAXSIZE&quot;, 100); echo MAXSIZE; echo constant(&quot;MAXSIZE&quot;); / / same thing as the previous line?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php define (&quot;MAXSIZE&quot;, 100); echo MAXSIZE; echo constant(&quot;MAXSIZE&quot;); / / mesma coisa que a linha anterior?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also define(), defined() and the section on Constants.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também define(), defined() e a seção sobre Constantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the given string converted from one Cyrillic character set to another.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna a string dada convertida de um caracter cirílico para outro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The from and to arguments are single characters that represent the source and target Cyrillic character sets.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os argumentos from e to são caracteres simples que representam o original e o caractere Cirílico de destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The supported types are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os tipos suportados são:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Makes a copy of a file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Faz uma cópia de um arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the copy succeeded, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se a copia é obtida com sucesso, caso contrário FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. copy() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo do copy()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (!copy($file, $file .&apos;.bak&apos;)) {print (&quot;failed to copy $file... br \n&quot;);}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if (!copy($arquivo, $arquivo .&apos;.bak&apos;)) {print (&quot;erro copiando arquivo $arquivo... br \n&quot;);}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.3.0, both source and dest may be URLs if the &quot;fopen wrappers&quot; have been enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.0.3, ambos origem e destino podem ser URLs se &quot;fopen wrappers&quot; estiver ativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See fopen() for more details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja fopen() para mais detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If dest is an URL, the copy operation may fail if the wrapper does not support overwriting of existing files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se dest é uma URL, a operação de cópia pode falhar se o wrapper não suportar a sobrescrita de arquivos existentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the destination file already exists, it will be overwritten.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo destino já existir, ele será sobrescrito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also move_uploaded_file(), rename(), and the section of the manual about handling file uploads.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>See also move_uploaded_file(), rename(), e a seção do manual sobre manipulação de uploads de arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the hyperbolic cosine of arg, defined as (exp(arg) + exp(-arg)) / 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o coseno hiperbólico de arg, definido por (exp(arg) + exp(-arg)) / 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also cos(), acosh(), sin() and tan().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também cos(), acosh(), sin() e tan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>cos() returns the cosine of the arg parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cos() retorna o coseno de arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arg parameter is in radians.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro arg deve estar em radianos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also acos(), sin() tan() and deg2rad().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também acos(), sin() tan() e deg2rad().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>count_chars</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter Mode default to 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 - an array with the byte-value as key and the frequency of every byte as value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro original Mode por definição 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 - same as 0 but only byte-values with a frequency greater than zero are listed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>0 - Uma matriz com um byte-value como chave e a freqüência de cada byte como valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2 - same as 0 but only byte-values with a frequency equal to zero are listed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>1 - mesmo que o 0 mas apenas byte-values com freqüência maior do que 0 são listadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3 - a string containing all used byte-values is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>2 - mesmo que 0 mas apenas byte-values com freqüência igual a 0 são listadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>4 - a string containing all not used byte-values is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>3 - uma string contendo todos os byte-values usados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strpos() and substr_count().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>4 - uma string contendo todos os byte-values que não foram usados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of elements in var, which is typically an array (since anything else will have one element).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o número de elementos de var, que normalmente é um array (uma vez que qualquer outra coisa terá apenas um elemento).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If var is not an array, 1 will be returned (exception: count (NULL) equals 0).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se var não for um array, 1 será retornado (excessão: count (NULL) retorna 0).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>count() may return 0 for a variable that isn&apos;t set, but it may also return 0 for a variable that has been initialized with an empty array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>count() pode retornar 0 para uma variável que não existe, mas também pode retornar 0 para uma variável que tenha sido inicializada como um array vazio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use isset() to test if a variable is set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use isset() para checar se a variável existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see the Arrays section of the manual for a detailed explanation of how arrays are implemented and used in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por favor, veja a sessão Arrays do manual para uma explicação mais detalhada sobre como os arrays são implementados e utilizados no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. count() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de count()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_array(), isset(), and strlen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_array(), isset() e strlen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cpdf_begin_text</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_begin_text() function starts a text section.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Text output</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cpdf_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_close() function closes the pdf document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cpdf_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_open() function opens a new pdf document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cpdf_save</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_save() function saves the current environment.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cpdf_set_font_directories</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cpdf_set_font_map_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cpdf_set_text_rendering</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cpdf_set_text_rendering() function determines how text is rendered.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.9, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cpdf_set_viewer_preferences</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>crack_getlastmessage</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>crc32</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Gera o polinômio cyclic redundancy checksum de 32-bit de comprimento do str.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $checksum = crc32( &quot;The quick brown fox jumped over the lazy dog .&quot;); printf(&quot;%u\n&quot;, $checksum);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É usado geralmente para validar a integridade de um dado sendo transferido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also md5()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também md5()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>crypt() will return an encrypted string using the standard Unix DES -based encryption algorithm or alternative algorithms that may be available on the system.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>crypt() retornará uma string criptografada usando o algoritmo de encriptação Unix Standard DES -based ou ou algoritmos alternativos disponíveis no sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguments are a string to be encrypted and an optional salt string to base the encryption on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os argumentos são uma string para ser criptografada e uma string opcional para basear em qual encriptação está.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Unix man page for your crypt function for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a página de encriptação Unix para mais informação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the salt argument is not provided, one will be randomly generated by PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o argumento salt não é fornecido, um argumento aleatório será gerado pelo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some operating systems support more than one type of encryption.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alguns SO suportam mais de um tipo de codificação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In fact, sometimes the standard DES-based encryption is replaced by an MD5-based encryption algorithm.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De fato, algumas vezes a codificação Standard DES-based é substituído por MD5-based.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The encryption type is triggered by the salt argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tipo de codificação é definido pelo argumento salt.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At install time, PHP determines the capabilities of the crypt function and will accept salts for other encryption types.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na instalação, o PHP determina as possíveis funções de codificação e aceitará salts para outros tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no salt is provided, PHP will auto-generate a standard two character salt by default, unless the default encryption type on the system is MD5, in which case a random MD5-compatible salt is generated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum salt é fornecido, o PHP auto-gera um salt padrão de 2 caracateres por definição, a menos que o tipo de codificação padrão do sistema seja MD5, nesse caso um salt MD5-compatible aleatório será gerado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP sets a constant named CRYPT_SALT_LENGTH which tells you whether a regular two character salt applies to your system or the longer twelve character salt is applicable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP define uma constante com nome CRYPT_SALT_LENGTH que dirá se um salt de 2 caracteres aplica-se ao seu sistema ou se o salt mais comprido de 12 caracteres é aplicavél.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using the supplied salt, you should be aware that the salt is generated once.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está usando um salt fornecido, você está ciente que o salt é gerado uma vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are calling this function recursively, this may impact both appearance and security.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está chamando essa função repetidamente, isto pode afetar a aparência e a segurança.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The standard DES-based encryption crypt() returns the salt as the first two characters of the output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O Standard DES-based crypt() O Standard DES-based crypt() retorna o salt como o primeiro two characters da saída.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also only uses the first eight characters of str, so longer strings that start with the same eight characters will generate the same result (when the same salt is used).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele também usa apenas os oito primeiros caracteres da str, então strings longas que começam com os mesmos oito caracteres gerarão o mesmo resultado (quando o mesmo salt é usado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On systems where the crypt() function supports multiple encryption types, the following constants are set to 0 or 1 depending on whether the given type is available:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em sistemas onde a função crypt() suporta variados tipos de codificação, as seguintes funções são definidas para 0 ou 1 a depender se um dado tipo está disponível:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CRYPT_STD_DES - Standard DES-based encryption with a two character salt</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CRYPT_STD_DES - Codificação Standard DES-based com um salt de 2 caracteres</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CRYPT_EXT_DES - Extended DES-based encryption with a nine character salt</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CRYPT_EXT_DES - Codificação Extended DES-based com um salt de 9 caracateres</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CRYPT_MD5 - MD5 encryption with a twelve character salt starting with $1$</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CRYPT_MD5 - Codificação MD5 com um salt de 12 caracteres começando com $1$</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CRYPT_BLOWFISH - Blowfish encryption with a sixteen character salt starting with $2$</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CRYPT_BLOWFISH - Codificação Blowfish com um salt de 16 caracteres começando com $2$</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no decrypt function, since crypt() uses a one-way algorithm.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há função de decodificação, desde que crypt() utiliza uma algorimo de um só caminho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. crypt() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. crypt() exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also md5() and the Mcrypt extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também md5() e the Mcrypt extension.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every array has an internal pointer to its &quot;current&quot; element, which is initialized to the first element inserted into the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todo array tem um ponteiro interno para o elemento &quot;atual&quot;, o qual é inicializado para apontar para o primeiro elemento inserido em um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current() function simply returns the array element that&apos;s currently being pointed by the internal pointer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função current() simplesmente retorna o elemento do array para o qual esse ponteiro interno está apontando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It does not move the pointer in any way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não move o ponteiro de forma alguma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the internal pointer points beyond the end of the elements list, current() returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o ponteiro interno estiver apontando para além do final da lista de elementos, current() retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array contains empty elements (0 or &quot;&quot;, the empty string) then this function will return FALSE for these elements as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o array contêm elementos vazios (0 ou &quot;&quot;, uma string vazia) então esta função retorna FALSE para esses elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This makes it impossible to determine if you are really at the end of the list in such an array using current().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso faz com que seja impossível determinar se você está realmente no final da lista de elementos de um array usando current().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To properly traverse an array that may contain empty elements, use the each() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para percorrer devidamente um array que pode conter elementos vazios, use a função each().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>cyrus_authenticate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>date</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In otherwords, timestamp is optional and defaults to the value of time().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The valid range of a timestamp is typically from Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (These are the dates that correspond to the minimum and maximum values for a 32-bit signed integer).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string de acordo com o formato da string usando o inteiro dado timestamp ou a a hora corrente local se nenhum timestamp é dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On windows this range is limited from 01-01-1970 to 19-01-2038.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally, some databases have functions to convert their date formats into timestamps (such as MySQL&apos;s UNIX_TIMESTAMP function).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A linha válida de um timestamp é tipicamente de Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (Estas são as datas que correspodem aos mínimos e máximos valores para um inteiro de 32-bit definido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>format character</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No windows esta linha é limitada de 01-01-1970 para 19-01-2038.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example returned values</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para gerar um timestamp de uma string para representação de data, você deve estar capaz de usar strtotime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>am or pm</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Adicionalmente, alguns bancos de dados têm para converter suas datas em timestamps (tais como a função MySQL&apos;s UNIX_TIMESTAMP).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>AM or PM</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os seguintes caracteres são reconhecidos na estrutura da string:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Swatch Internet time</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>a - &quot;am&quot; ou &quot;pm &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>d</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A - &quot;AM&quot; ou &quot;PM &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>01 to 31</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>B - Swatch Internet time</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mon through Sun</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>d - dia do mês, 2 digitos com zeros zeros à esquerda; i.e. &quot;01 &quot;até &quot;31&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A full textual representation of a month, such as January or March</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>D - dia da semana, texto, 3 letras; e.g. &quot;Fri &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>g</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>F - mês, texto, longo; e.g. &quot;January &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 through 12</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>g - hora, Forma com 12-horas sem zeros à esquerda; i.e. &quot;1 &quot;até &quot;12&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 through 23</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>G - hora, Forma com 24-horas sem zeros à esquerda; i.e. &quot;0 &quot;até &quot;23&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>01 through 12</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>h - hora, Forma com 12-horas; i.e. &quot;01 &quot;até &quot;12&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>00 through 23</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>H - hora, Forma com 24-horas; i.e. &quot;00 &quot;até &quot;23&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>00 to 59</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>i - minutos; i.e. &quot;00 &quot;até &quot;59&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 if Daylight Savings Time, 0 otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>I (capital i) - &quot;1 &quot;Se no horário de verão, senão &quot;0&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 to 31</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>j - Dia do mês sem zeros à esquerda; i.e. &quot;1 &quot;até &quot;31&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sunday through Saturday</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>l (minúscula &apos;L&apos;) - dia da semana, texo, longo; e.g. &quot;Friday &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 if it is a leap year, 0 otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>L - booleano se é um ano bissexto; i.e. &quot;0 &quot;ou &quot;1&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>01 through 12</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>m - mês; i.e. &quot;01 &quot;até &quot;12&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Jan through Dec</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>M - mês, texto, 3 letras; e.g. &quot;Jan &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 through 12</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>n - mês sem zeros à esquerda; i.e. &quot;1 &quot;até &quot;12&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example: +0200</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O - Diferença entre o horário de Greenwich em horas; e.g. &quot;+0200 &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thu, 21 Dec 2000 16:01:07 +0200</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>r - RFC 822 formatted date; e.g. &quot;Thu, 21 Dec 2000 16:01:07 +0200 &quot;(adicionda no PHP 4.0.4)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>00 through 59</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>s - segundos; i.e. &quot;00 &quot;até &quot;59&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>st, nd, rd or th.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>S - Sufixo ordinal para o dia do mês, 2 characteres; i.e. &quot;st&quot;, &quot;nd&quot;, &quot;rd &quot;or &quot;th&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>28 through 31</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>t - número de dias do dado mês; i.e. &quot;28 &quot;até &quot;31&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Examples:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>T - Timezone setting desta máquina; e.g. &quot;EST &quot;or &quot;MDT&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also time()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>U - segundos desde a época Unix (January 1 1970 00:00:00 GMT)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 (for Sunday) through 6 (for Saturday)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>w - dia da semana, numérico, i.e. &quot;0&quot; (domingo) até &quot;6 &quot;(Sábado)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ISO-8601 week number of year, weeks starting on Monday (added in PHP 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>W - ISO-8601 números de semanas do ano, semana começa na segunda-feira (adicionado no PHP 4.1.0)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>42 (the 42nd week in the year)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Y - ano, 4 dígitos; e.g. &quot;1999 &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A full numeric representation of a year, 4 digits</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>y - ano, 2 dígitos; e.g. &quot;99 &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1999 or 2003</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>z - dia do ano; i.e. &quot;0 &quot;até &quot;365&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Examples:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Z - timezone offset em segundos (i.e. &quot;-43200 &quot;to &quot;43200&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 through 366</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O offset para as timezones oeste de UTC é sempre negativa, e para as leste de UTC é sempre positiva.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Timezone offset in seconds.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. date() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>-43200 through 43200</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo date (&quot;l dS of F Y h:i:s A&quot;); echo &quot;July 1, 2000 is on a &quot;. date (&quot;l&quot;, mktime(0,0,0,7,1,2000));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Z format will always return 0 when using gmdate().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode prevenir um caracter conhecido no formato de string de um existente por escape com uma barra invertida precedendo-o.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Prints something like:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o caracter com a barra invertida já é uma sequência especial, você pode precisar também de escape para a barra invertida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Wednesday echo date( &quot;l&quot;); / / Prints something like:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Wednesday 15th of January 2003 05:51:38 AM echo date (&quot;l dS of F Y h:i:s A&quot;); / / Prints:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Caracteres de escape em date()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can prevent a recognized character in the format string from being expanded by escaping it with a preceding backslash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo date( &quot;l \\t\h\e jS&quot;); / / prints something like &apos;Saturday the 8th &apos;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>é possível usar date() e mktime() juntos para encontrar datas no futuro ou no passado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / prints something like:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. date() e mktime() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is possible to use date() and mktime() together to find dates in the future or the past.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$tomorrow = mktime (0,0,0,date(&quot;m&quot;) ,date(&quot;d&quot;)+1,date(&quot;Y&quot;)); $lastmonth = mktime (0,0,0,date(&quot;m&quot;)-1,date(&quot;d&quot;), date(&quot;Y&quot;)); $nextyear = mktime (0,0,0,date(&quot;m&quot;), date(&quot;d&quot;), date(&quot;Y&quot;)+1);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. date() and mktime() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta pode ser mais confiável do que simplesmente adicionar ou subtrair o número de segundos em um dia ou mês para um timestamp devido ao horário de verão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be more reliable than simply adding or subtracting the number of seconds in a day or month to a timestamp because of daylight savings time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alguns exemplos de date() Alguns exemplos de date() formatação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that you should escape any other characters, as any which currently have a special meaning will produce undesirable results, and other characters may be assigned meaning in future PHP versions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que você poderia escapar qualquer outro caracter, qualquer um que correntemente tenha um significado especial produziria resultados indesejáveis, e outros caracteres poderiam assumir significados em futuras versões do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When escaping, be sure to use single quotes to prevent characters like \n from becoming newlines.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando usar escape, certifique o uso de aspas simples para evitar caracteres como \n próprio para novas linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. date() Formatting</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4. date() Formatação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>March 10th, 2001, 5:16:18 pm $today = date( &quot;F j, Y, g:i a&quot;); / / March 10, 2001, 5:16 pm $today = date(&quot;m.d.y&quot;); / / 03.10.01 $today = date(&quot;j, n, Y&quot;); / / 10, 3, 2001 $today = date(&quot;Ymd&quot;); / / 20010310 $today = date(&apos;h-i-s, j-m-y, it is w Day z &apos;); / / 05-16-17, 10-03-01, 1631 1618 6 Fripm01 $today = date(&apos;\i\t \i\s \t\h\e jS \d\a\y .&apos;); / / It is the 10th day. $today = date(&quot;D M j G:i:s T Y&quot;); / / Sat Mar 10 15:16:08 MST 2001 $today = date(&apos;H:m:s \m \i\s\ \m\o\n\t\h&apos;); / / 17:03:17 m is month $today = date(&quot;H:i:s&quot;); / / 17:16:17?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/* Today is March 10th, 2001, 5:16:18 pm * / $today = date( &quot;F j, Y, g:i a&quot;); / / March 10, 2001, 5:16 pm $today = date(&quot;m.d.y&quot;); / / 03.10.01 $today = date(&quot;j, n, Y&quot;); / / 10, 3, 2001 $today = date(&quot;Ymd&quot;); / / 20010310 $today = date(&apos;h-i-s, j-m-y, it is w Day z &apos;); / / 05-16-17, 10-03-01, 1631 1618 6 Fripm01 $today = date(&apos;\i\t \i\s \t\h\e jS \d\a\y .&apos;); / / It is the 10th day. $today = date(&quot;D M j G:i:s T Y&quot;); / / Sat Mar 10 15:16:08 MST 2001 $today = date(&apos;H:m:s \m \i\s\ \m\o\n\t\h&apos;); / / 17:03:17 m is month $today = date(&quot;H:i:s&quot;); / / 17:16:17</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To format dates in other languages, you should use the setlocale() and strftime() functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para formatar datas em outras línguas, você usaria as funções setlocale() e strftime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also getlastmod(), gmdate(), mktime(), strftime() and time().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também getlastmod(), gmdate(), mktime(), strftime() e time().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbase_add_record</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adds the data in the record to the database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbase_delete_record</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Marks record to be deleted from the database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbase_get_record</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the data from record in an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbase_get_record_with_names</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the data from record in an associative array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbase_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The flags correspond to those for the open() system call. (Typically 0 means read-only, 1 means write-only, and 2 means read and write.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dblist</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Getting the information on the command line</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbmdelete</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes the value for key in the database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbmfirstkey</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the first key in the database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbminsert</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adds the value to the database with the specified key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbmnextkey</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the next key after key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_add</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_aql</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_chdir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_curr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_errcode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_errno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_find</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_first</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_flush</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_freealllocks</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_freelock</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_freerlocks</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_getlock</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_getunique</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_last</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_next</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_prev</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rchperm</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rcreate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rcrtexact</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rcrtlike</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_resolve</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_restorepos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rkeys</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_ropen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rquery</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rrename</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rsecindex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_runlink</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_rzap</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_savepos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_setindexbynumber</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_setindex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_sql</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_tcl</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_tremove</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_undo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_undoprepare</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_unlockrel</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_unselect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_update</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_xlockrel</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbplus_xunlockrel</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>dbx_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_close() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = dbx_connect( DBX_MYSQL, &quot;localhost&quot;, &quot;db&quot;, &quot;username&quot;, &quot;password&quot;) or die (&quot;Could not connect&quot;); print(&quot;Connected successfully&quot;); dbx_close($link);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. dbx_close() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_compare() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. dbx_compare() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_connect() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. dbx_connect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_error() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. dbx_error() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_escape_string() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. dbx_escape_string() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. lists each field &apos;s name and type</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. lists each field &apos;s name and type</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. outputs the content of data property into HTML table</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. outputs the content of data property into HTML table</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dbx_sort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. dbx_sort() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. debug_backtrace() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. debug_backtrace() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>debugger_off</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Disables the internal PHP debugger.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing a binary representation of the given number argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string contendo a representação binária do parâmetro numero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 4294967295 in decimal resulting to a string of 32 1 &apos;s.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O maior número que pode ser convertido é 4294967295 em decimal, resultando em uma strings de 32 números 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: bindec().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também a função bindec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing a hexadecimal representation of the given number Returns a string containing a hexadecimal representation of the given number argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string contendo a representação hexadecimal do argumento numero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 2147483647 in decimal resulting to &quot;7fffffff&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O maior número que pode ser convertido é 2147483647 em decimal, resultando em &quot;7fffffff&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hexdec().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também hexdec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing an octal representation of the given number argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string contendo a representação octal do parâmetro numero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 2147483647 in decimal resulting to &quot;17777777777&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O maior número que pode ser convertido é 2147483647 em decimal, resultando em &quot;17777777777&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also octdec().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também octdec().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the named constant given by name has been defined, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se a constante dada pelo parâmetro name já foi definida, em outro caso FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checking Constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Conferindo Constantes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php if (defined(&quot;CONSTANT&quot;)) {/ / Note that it should be quoted echo CONSTANT; / /}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php if (defined(&quot;CONSTANT&quot;)) {/ /Note que deve estar entre aspas echo CONSTANT; / /}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also define(), constant(), get_defined_constants() and the section on Constants.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também define(), constant(), get_defined_constants() e a seção sobre Constants.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>define</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defines a named constant.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the section on constants for more details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a seção sobre constantes para maiores detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of the constant is given by name; the value is given by value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome da constante é dado pelo parâmetro name; o valor é dado por value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional third parameter case_insensitive is also available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O terceiro parâmetro, que é opcional, case_insensitive também esta disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the value TRUE is given, then the constant will be defined case-insensitive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se é dado o valor TRUE, então a constante será definida como case-insensitive.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default behaviour is case-sensitive; i.e.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão é case-sensitive; ex.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CONSTANT and Constant represent different values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CONSTANTE e Constante representam valores diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php define (&quot;CONSTANT&quot;, &quot;Hello world .&quot;); echo CONSTANT; / / outputs &quot;Hello world. &quot;echo Constant; / / outputs &quot;Constant&quot; and issues a notice. define (&quot;GREETING&quot;, &quot;Hello you .&quot;,TRUE); echo GREETING; / / outputs &quot;Hello you. &quot;echo Greeting; / / outputs &quot;Hello you.&quot;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php define (&quot;CONSTANTE&quot;, &quot;Alô Mundo .&quot;); echo CONSTANTE; / / mostra &quot;Alô Mundo. &quot;echo Constante; / / mostra &quot;Constante&quot; e dá um aviso. define (&quot;GREETING&quot;, &quot;Alô Você .&quot;,TRUE); echo GREETING; / / mostra &quot;Alô você. &quot;echo Greeting; / / mostra &quot;Alô você.&quot;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also defined(), constant() and the section on Constants.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vejá também defined(), constant() e a seção sobre Constantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function converts number from degrees to the radian equivalent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função converte numero de graus ao equivalente em radianos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rad2deg().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também rad2deg().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a dummy manual entry to satisfy those people who are looking for unlink() or unset() in the wrong place.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma seção falsa do manual, criada para satisfazer as pessoas que estão procurando por unlink() ou unset() no lugar errado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: unlink() to delete files, unset() to delete variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: unlink() para deletar arquivos, unset() para apagar váriaveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of exit().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é um apelido para exit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Given a string containing a path to a file, this function will return the name of the directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dada uma string contendo um caminho para um arquivo, esta função irá retornar o nome do diretório.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows, both slash (/) and backslash (\) are used as path separator character.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No Windows, tanto barra (/) quanto a barra invertida (\) são usadas como caracter separador no path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other environments, it is the forward slash (/).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outros ambientes é utilizado a barra (/).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. dirname() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo do dirname()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$path = &quot;/ etc / passwd&quot;; $file = dirname ($path); / / $file is set to&quot; / etc &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$path = &quot;/ etc / passwd&quot;; $file = dirname ($path); / / $file =&quot; / etc &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.0.3, dirname() was fixed to be POSIX-compliant.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.0.3, dirname() foi modificada para ser conformante com o POSIX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Essentially, this means that if there are no slashes in path, a dot (&apos;.&apos;) is returned, indicating the current directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essencialemente, isto significa que se não há barras no path, um ponto (&apos;.&apos;) é retornado, indicando o diretório atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, the returned string is path with any trailing / component removed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Antes, a string retornada era o path com todos os / componente Antes, a string retornada era o path com todos os / componente removidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this means that you will often get a slash or a dot back from dirname() in situations where the older functionality would have given you the empty string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ou seja, você receberá uma barra ou ponto de dirname() em situações onde a funcionalidade anterior devolveria uma string vazia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: basename(), pathinfo(), and realpath().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: basename(), pathinfo() e realpath().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Given a string containing a directory, this function will return the number of bytes available on the corresponding filesystem or disk partition.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dado uma string contendo um diretório, esta função retornará o numero de bytes disponíveis no sistema de arquivos ou partição de disco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. disk_free_space() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo de disk_free_space()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$df = disk_free_space( &quot;/ &quot;); / / $df contains the number of bytes / / available on&quot; / &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$df = disk_free_space( &quot;/ &quot;); / / $df contém o número de bytes. / / disponível em&quot; / &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a deprecated alias of disk_free_space().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este é um sinônimo obsoleto para a função disk_free_space().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use that function instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ultilize aquela função ao invez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Given a string containing a directory, this function will return the total number of bytes on the corresponding filesystem or disk partition.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dado uma string contendo um diretório, esta função retornará o numero total de bytes do sistema de arquivos ou a partição de disco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. disk_total_space() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. disk_total_space() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$df = disk_total_space( &quot;/ &quot;); / / $df contains the total number of / / bytes available on&quot; / &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$df = disk_total_space( &quot;/ &quot;); / / $df contém o numero total de / / bytes disponíveis em&quot; / &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not implemented on Windows platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - add_root [deprecated]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - create_attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a new instance of class DomAttribute.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - create_cdata_section</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a new instance of class DomCData.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - create_comment</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a new instance of class DomComment.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - create_element</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a new instance of class DomElement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - create_element_ns</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - create_entity_reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a new instance of class DomEntityReference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - create_processing_instruction</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - create_text_node</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a new instance of class DomText.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - doctype</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an object of class DomDocumentType.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - document_element</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the root element node of a document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - dump_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates an XML document from the dom representation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocument - html_dump_mem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates an HTML document from the dom representation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocumentType - public_id</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the public id of the document type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Retrieving the public id</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocumentType - system_id</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the system id of the document type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomElement - get_attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the attribute with name name of the current node.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomElement - set_attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets an attribute with name name ot the given value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting an attribute</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - append_sibling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This functions appends a sibling to an existing node.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - first_child</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - insert_before</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function inserts the new node newnode right before the node refnode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - last_child</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - owner_document</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the document the current node belongs to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - previous_sibling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the previous sibling of the current node.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - remove_child</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This functions removes a child from a list of children.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - replace_child</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4.2) This function replaces the child oldnode with the passed new node.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - replace_node</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4.2) This function replaces an existing node with the passed new node.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomNode - set_namespace</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the namespace of a node to uri.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>domxml_new_doc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>domxml_xmltree</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>domxml_xslt_stylesheet_doc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>domxml_xslt_stylesheet_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>domxml_xslt_stylesheet</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomXsltStylesheet - process</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomXsltStylesheet - result_dump_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomXsltStylesheet - result_dump_mem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of floatval().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>doubleval - - Alias of floatval()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This alias is a left-over from a function-renaming.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current key and value pair from the array array and advances the array cursor.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o par chave / valor corrente de array e avança o seu cursor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This pair is returned in a four-element array, with the keys 0, 1, key, and value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse par é retornado num array de quatro elementos, com as chaves 0, 1, key, e value.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Elements 0 and key contain the key name of the array element, and 1 and value contain the data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os elementos 0 e key contêm o nome da chave do elemento do array, e 1 e value contêm o valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the internal pointer for the array points past the end of the array contents, each() returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o cursor interno do array estiver apontando para além do final do array, each() retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. each() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos de each()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$bar now contains the following key / value pairs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$bar agora contém os seguintes pares de chaves e valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>each() is typically used in conjunction with list() to traverse an array; for instance, $_POST:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>each() é tipicamente usada em conjunto com list() para percorrer um array; por exemplo, $_POST:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Traversing $_POST with each()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Percorrendo $HTTP_POST_VARS usando each()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo &quot;Values submitted via POST method: br / \n&quot;; reset ($_POST); while (list ($key, $val) = each ($_POST)) {echo &quot;$key = $val br / \n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo &quot;Valores submetidos pelo método POST: br&quot;; reset ($_POST); while (list ($chave, $valor) = each ($_POST)) {echo &quot;$chave = $valor br &quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After each() has executed, the array cursor will be left on the next element of the array, or on the last element if it hits the end of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Depois da execução de each(), o cursor interno do array vai apontar para o prócimo elemento do array, ou no último elemento se ele chegar ao final do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You have to use reset() if you want to traverse the array again using each.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve usar reset() se quiser percorrer o array novamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also key(), list(), current(), reset(), next(), prev(), and foreach.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também key(), list(), current(), reset(), next(), prev() e foreach.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. easter_date() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. easter_date() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. easter_days() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. easter_days() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ebcdic2ascii() is an Apache-specific function which is available only on EBCDIC based operating systems (OS / 390, BS2000).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ebcdic2ascii() é uma função específica do Apache, somente disponível em sistemas operacionais baseados no EBCDIC (OS / 390, BS2000).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It translates the EBCDIC encoded string ebcdic_str to its equivalent ASCII representation (binary safe), and returns the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela converte a string codificada em EBCDIC ebcdic_str em sua representação equivalente em ASCII (binary safe), retornando o resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the reverse function ascii2ebcdic()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também a função inversa ascii2ebcdic()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Outputs all parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo() is not actually a function (it is a language construct) so you are not required to use parentheses with it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo() não é uma função atualmente (construtor da linguagem) então não é obrigatório usar parênteses.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In fact, if you want to pass more than one parameter to echo, you must not enclose the parameters within parentheses.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De fato, se você quer passar mais do que um parâmetro para echo, você não deve fechar os parênteses dentro de parênteses.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not possible to use echo() in a variable function context.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não é possível usar echo() num contexto de variable function, mas você pode usar print() no lugar dela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. echo() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. echo() exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo() also has a shortcut syntax, where you can immediately follow the opening tag with an equals sign.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo() também tem uma sintaxe curta, onde você pode seguir imediatamente a tag de abertura com um sinal de igual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This short syntax only works with the short_open_tag configuration setting enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Está sintaxe curta apenas trabalha se a configuração short_open_tag está habilitada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also print(), printf(), and flush().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também print(), printf(), e flush().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>end() advances array&apos;s internal pointer to the last element, and returns that element.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>end() avança o ponteiro interno de array até o seu último elemento, e retorna esse elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple end() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo simples de end()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $fruits = array( &apos;apple&apos; ,&apos;banana&apos; ,&apos;cranberry&apos;); print end($fruits); / / cranberry?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $frutas = array( &apos;melancia&apos; ,&apos;banana&apos; ,&apos;morango&apos;); print end($frutas); / / morango?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current(), each(), next(), and reset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também current(), each(), end(), next() e reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ereg() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ereg() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. eregi() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. eregi() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ereg_replace() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ereg_replace() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. ereg_replace() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. ereg_replace() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. error_log() log types</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. error_log() log types</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. error_log() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. error_log() examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. error_reporting() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. error_reporting() examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. error_reporting() level constants and bit values</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. error_reporting() level constants and bit values</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>eval</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>eval() evaluates the string given in code_str as PHP code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are some factors to keep in mind when using eval().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função eval() executa a string dada no parâmetro code_str A função eval() executa a string dada no parâmetro code_str como código PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remember that the string passed must be valid PHP code, including things like terminating statements with a semicolon so the parser doesn&apos; t die on the line after the eval(), and properly escaping things in code_str.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há alguns fatores para lembrar quando usar eval().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A return statement will terminate the evaluation of the string immediately.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lembre-se que a string passada deve ser código PHP valido, incluindo coisas como terminar os comandos com ponto-e-vírgula assim o compilador não morre uma linha após eval(), escapar as coisas propriamente em code_str.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, eval() returns NULL unless return() is called in the evaluated code, in which case the value passed to return() In PHP 4, eval() returns NULL unless return() is called in the evaluated code, in which case the value passed to return() is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um comando return irá terminar a execução do script imediatamente No PHP 4, eval() retorna NULL a menos que return() seja chamado no código executado, caso no qual o valor passado para return() é retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, eval() does not return a value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, eval() não retorna um valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. eval() example - simple text merge</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo eval()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $string = &apos;cup&apos;; $name = &apos;coffee&apos;; $str = &apos;This is a $string with my $name in it. br&apos;; echo $str; eval (&quot;\$str = \&quot;$str\&quot; ;&quot;); echo $str;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $string = &apos;taça&apos;; $name = &apos;café&apos;; $str = &apos;Esta é uma $string com o meu $name nela. br&apos;; echo $str; eval (&quot;\$str = \&quot;$str\&quot; ;&quot;); echo $str;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example will show:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo acima irá mostrar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a $string with my $name in it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma $string com o meu $name nela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a cup with my coffee in it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma taça com o meu café nela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. exif_read_data() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exif_read_data() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. exif_thumbnail() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exif_thumbnail() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is not a real function, but a language construct.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta não é uma função real, mas uma construção da linguagem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The exit() function terminates execution of the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função exit() termina a execução do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It prints status just before exiting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela mostra o parâmetro status justamente antes de sair.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If status is an integer, that value will also be used as the exit status.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se status é um integer, este valor será usado como estado se saída.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Exit statuses should be in the range 1 to 254, the exit status 255 is reserved by PHP and shall not be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estados de saída deve, estar no intervalo de 1 a 254, o estado de saída 255 é reservado pelo php e não deve ser usado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current CVS version does NOT print the status if it is an integer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A versão atual do CVS NÃO mostra status se for um integer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The die() function is an alias for exit().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função die() é um apelido para a função exit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. exit() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo exit()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $filename = &apos;/ path / to / data-file&apos;; $file = fopen ($filename, &apos;r&apos;) or exit(&quot;unable to open file ($filename)&quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $filename = &apos;/ caminho / para / arquivo&apos;; $file = fopen ($filename, &apos;r&apos;) or exit(&quot;Não pude abrir o arquivo ($filename)&quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns e raised to the power of arg.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna e a potência de arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the string separator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma matriz de strings, cada uma como substring de string formada pela divisão dela a partir de fronteiras presentes nela separator.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If limit is set, the returned array will contain a maximum of limit elements with the last element containing the rest of string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se limit está definido, a matriz retornada conterá o máximo de limit elementos com o último elemento contendo o resto da string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If separator is an empty string (&quot;&quot;), explode() will return FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se separator está como uma string vazia (&quot;&quot;), explode() retornará FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If separator contains a value that is not contained in string, then explode() will return an array containing string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se separator contém um valor que não está contido em string, então explode() retornará uma matriz contendo a string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The limit parameter was added in PHP 4.0.1</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro limit foi adicionado no PHP 4.0.1</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. explode() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. explode() exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although implode() can for historical reasons accept its parameters in either order, explode() cannot.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ainda que implode() pode por razões históricas aceitar seus parâmetros em uma das duas ordens, explode() não pode.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must ensure that the separator argument comes before the string argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve assegurar que o argumento separator vem antes do argumento string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also preg_split(), spliti(), split(), and implode().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também preg_split(), spliti(), split(), e implode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>expm1</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is used to import variables from an array into the current symbol table.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função é usada para importar variáveis a partir de um array para a tabela de símbolos corrente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes an associative array var_array and treats keys as variable names and values as variable values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Recebe o array associativo var_array e trata as suas chaves como os nomes das variáveis e os valores como valores das variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For each key / value pair it will create a variable in the current symbol table, subject to extract_type and prefix parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para cada par chave / valor ele criará uma variável na tabela de símbolos corrente, seguindo os parâmetros extract_type e prefix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Beginning with version 4.0.5, this function returns the number of variables extracted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde a versão 4.0.5, essa função retorna o número de variáveis extraídas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>EXTR_IF_EXISTS and EXTR_PREFIX_IF_EXISTS was introduced in version 4.2.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>EXTR_IF_EXISTS e EXTR_PREFIX_IF_EXISTS foram adicionadas na versão 4.2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>EXTR_REFS was introduced in version 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>EXTR_REFS foi adicionada na versão 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It also checks for collisions with existing variables in the symbol table.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>extract() checa se cada chave do array constitui um nome de variável válido e por colisões com as variáveis já existentes na tabela de símbolos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The way invalid / numeric keys and collisions are treated is determined by the extract_type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O modo com que chaves inválidas ou númericas e colisões são tratadas é determinado pelo argumento extract_type.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can be one of the following values:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse argumento pode receber os seguintes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is a collision, overwrite the existing variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se houver uma colisão, sobrescreve a variável existente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is a collision, don &apos;t overwrite the existing variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se houver uma colisão, não sobrescreve a variável existente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is a collision, prefix the variable name with prefix.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se houver uma colisão, adiciona um prefixo ao nome da variável definido pelo argumento prefix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prefix all variable names with prefix.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Adiciona um prefixo ao nome de todas as variáveis definido por prefix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Beginning with PHP 4.0.5, this includes numeric variables as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.0.5 estão incluídos nomes numéricos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only prefix invalid / numeric variable names with prefix.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Adiciona um prefixo definido por prefix apenas para variáveis como nomes inválidos ou numéricos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag was added in PHP 4.0.5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa opção foi adicionada no PHP 4.0.5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only overwrite the variable if it already exists in the current symbol table, otherwise do nothing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Só sobrescreve a variável se ela já existe na tabela de símbolos corrente, caso contrário, não faz nada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful for defining a list of valid variables and then extracting only those variables you have defined out of $_REQUEST, for example.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso é útil quando se quer definir uma lista de variáveis válidas e então extrair só as que foram definidas em $_REQUEST, por exemplo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag was added in PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa opção foi adicionada no PHP 4.2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only create prefixed variable names if the non-prefixed version of the same variable exists in the current symbol table.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Só cria nomes de variáveis usando o prefixo se na tabela de símbolos já existe uma variável com o nome sem esse prefixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This effectively means that the values of the imported variables are still referencing the values of the var_array parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Extrai variáveis como referências, ou seja, os valores das variáveis importadas ainda estarão referenciando os valores do parâmetro var_array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use this flag on its own or combine it with any other flag by OR &apos;ing the extract_type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa opção pode ser usada sozinha ou em conjunto com as outras usando o operador &apos;ou&apos; em extract_type.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag was added in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa opação foi adicionada no PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If extract_type is not specified, it is assumed to be EXTR_OVERWRITE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se extract_type não for especificado, é assumido o valor EXTR_OVERWRITE por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that prefix is only required if extract_type is EXTR_PREFIX_SAME, EXTR_PREFIX_ALL, EXTR_PREFIX_INVALID or EXTR_PREFIX_IF_EXISTS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que prefix só é necessário se extract_type for EXTR_PREFIX_SAME, EXTR_PREFIX_ALL, ou EXTR_PREFIX_INVALID, EXTR_PREFIX_INVALID ou EXTR_IF_EXISTS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the prefixed result is not a valid variable name, it is not imported into the symbol table.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o nome com o prefixo não for um nome de variável válido, ela não será importada para a tabela de símbolos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>extract() returns the number of variables successfully imported into the symbol table.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>extract() retorna o número de variáveis importadas com sucesso para a tabela de símbolos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A possible use for extract() is to import into the symbol table variables contained in an associative array returned by wddx_deserialize().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma possível utilização de extract() e na importação de variáveis contidas num array associativo retornado pela função wddx_deserialize().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. extract() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de extract()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * Suppose that $var_array is an array returned from wddx_deserialize * / $size = &quot;large&quot;; $var_array = array (&quot;color&quot; = &quot;blue&quot;, &quot;size &quot;= &quot;medium&quot;, &quot;shape&quot; = &quot;sphere&quot;); extract ($var_array, EXTR_PREFIX_SAME, &quot;wddx&quot;); print &quot;$color, $size, $shape, $wddx_size\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Suponha que $var_array é um array retornado pela função wddx_deserialize * / $tamanho = &quot;grande&quot;; $var_array = array (&quot;cor&quot; = &quot;azul&quot;, &quot;tamanho &quot;= &quot;medio&quot;, &quot;forma&quot; = &quot;esfera&quot;); extract ($var_array, EXTR_PREFIX_SAME, &quot;wddx&quot;); print &quot;$cor, $tamanho, $forma, $wddx_tamanho\n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example will produce:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo acima produziria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>blue, large, sphere, medium</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>azul, grande, esfera, medio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The $size wasn &apos;t overwritten, because we specified EXTR_PREFIX_SAME, which resulted in $wddx_size being created.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O $tamanho não foi sobrescrito, porque nós especificamos EXTR_PREFIX_SAME, o que resultou na criação da variável $wddx_tamanho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If EXTR_SKIP was specified, then $wddx_size wouldn &apos;t even have been created.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se EXTR_SKIP fosse utilizado, então $wddx_tamanho não seria criada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>EXTR_OVERWRITE would have caused $size to have value &quot;medium&quot;, and EXTR_PREFIX_ALL would result in new variables being named $wddx_color, $wddx_size, and $wddx_shape.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>EXTR_OVERWRITE teria feito com que $tamanho tivesse o valor &quot;medio&quot;, e EXTR_PREFIX_ALL resultaria em novas variáveis com os nomes $wddx_cor, $wddx_tamanho, e $wddx_forma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must use an associative array, a numerically indexed array will not produce results unless you use EXTR_PREFIX_ALL or EXTR_PREFIX_INVALID.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve usar um array associativo, um array indexado numericamente não produzirá resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also compact().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também compact().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ezmlm_hash() calculates the hash value needed when keeping EZMLM mailing lists in a MySQL database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ezmlm_hash() calcula valor do hash necessário quando mantendo listas de email EZMLM num banco de dados MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculating the hash and subscribing a user</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Calculando o hash e inscrevendo um usuário</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_close() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_close() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_commit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fbsql_commit() ends the current transaction by writing all inserts, updates and deletes to the disk and unlocking all row and table locks held by the transaction.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_connect() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_connect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_create_blob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_create_blob() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_create_blob() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_create_clob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_create_clob() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_create_clob() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_create_db() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_create_db() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_database_password</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_data_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fbsql_data_seek() moves the internal row pointer of the FrontBase result associated with the specified result identifier to point to the specified row number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_data_seek() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_data_seek() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_db_query</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_db_status</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_drop_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fbsql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_fetch_array() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_fetch_array() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_fetch_assoc() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_fetch_assoc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_fetch_field</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_fetch_field() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_fetch_field() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_fetch_lengths</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_fetch_object() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_fetch_object() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_fetch_row</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_field_name() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_field_name() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_field_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_field_type() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_field_type() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_get_autostart_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_list_dbs() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_list_dbs() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_list_fields() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_list_fields() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_next_result() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_next_result() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_num_rows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fbsql_num_rows() returns the number of rows in a result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_num_rows() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_num_rows() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_pconnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_query() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_query() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. fbsql_query() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. fbsql_query() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_read_blob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_read_blob() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_read_blob() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_read_clob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_read_clob() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_read_clob() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_rollback</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fbsql_rollback() ends the current transaction by rolling back all statements issued since last commit.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_select_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_set_lob_mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_set_transaction</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_start_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fbsql_start_db()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fbsql_stop_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fbsql_stop_db()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fbsql_tablename() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fbsql_tablename() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fclose</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointed to by handle is closed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo apontado por fp é fechado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen() or fsockopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro para o arquivo tem que ser válido e tem que apontar para um arquivo aberto por fopen() ou fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple fclose() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo fclose()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $handle = fopen( &apos;somefile.txt&apos;, &apos;r&apos;); fclose($handle);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $fp = fopen( &apos;qualquerarquivo.txt&apos;, &apos;r&apos;); fclose($fp);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fdf_create</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_create() creates a new FDF document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fdf_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_open() function opens a file with form data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fdf_save</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_save() function saves a FDF document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fdf_set_status</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fdf_set_status() sets the value of the / STATUS key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the file pointer is at EOF or an error occurs; otherwise returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se o ponteiro estiver no fim do arquivo (eof) ou um erro ocorrer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro para o arquivo tem que ser válido e tem que apontar para um arquivo aberto com sucesso por fopen(), popen() ou fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function forces a write of all buffered output to the resource pointed to by the file handle handle.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função força a escrita de toda saída cacheada no buffer do arquivo apontado pelo recurso fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if successful, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se obtiver sucesso e caso contrário FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro de arquivo tem que ser válido e apontar para um arquivo que foi aberto com sucesso por fopen(), popen() ou fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fgetc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on EOF.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE no fim do arquivo (eof).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is binary safe.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro de arquivo tem que ser válido e apontar para um arquivo aberto com sucesso por fopen(), popen(), ou fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fread(), fopen(), popen(), fsockopen(), and fgets().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fread(), fopen(), popen(), fsockopen() e fgets().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similar to fgets() except that fgetcsv() parses the line it reads for fields in CSV format and returns an array containing the fields read.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Similar à fgets() exceto que fgetcsv() interpreta a linha que lê por campos no formato CSV e retorna um vetor (array) contendo os campos lidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional third delimiter parameter defaults as a comma.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O terceiro parâmetro delimiter (opcional) tem como padrão a vígula.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional enclosure cannot be null, and is limited to one character.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A opção enclosure não pode ser null, e está limitada a um caracter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If enclosure is more than one character, only the first character is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se enclosure tiver mais que um carcater, somente o primeiro será utilizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The enclosure parameter was added in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro enclosure foi acrescentado no PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The handle parameter must be a valid file pointer to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro fp tem que ser um ponteiro de arquivo válido para um arquivo aberto com sucesso por fopen(), popen() ou fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length parameter must be greater than the longest line to be found in the CSV file (allowing for trailing line-end characters).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>length tem que ser maior do que a maior linha a ser encontrada no arquivo CSV (incluindo caracteres de terminação de linha).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fgetcsv() returns FALSE on error, including end of file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fgetcsv() retorna FALSE ao encontrar um erro, incluindo fim de arquivo (eof).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A blank line in a CSV file will be returned as an array comprising a single null field, and will not be treated as an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma linha em branco em um arquivo CSV será retornada como um array contendo um único campo nulo (null), e não será tratado como um erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read and print the entire contents of a CSV file</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lê e imprime todo o conteúdo de um arquivo CSV</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $row = 1; $handle = fopen (&quot;test.csv&quot; ,&quot;r&quot;); while ($data = fgetcsv ($handle, 1000, &quot;,&quot;)) {$num = count ($data); print&quot; p $num fields in line $row: br \n&quot;; $row++; for ($c=0; $c $num; $c++) {print $data[$c]. &quot;br \n&quot;;}} fclose ($handle);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $row = 1; $fp = fopen (&quot;test.csv&quot; ,&quot;r&quot;); while ($data = fgetcsv ($fp, 1000, &quot;,&quot;)) {$num = count ($data); print&quot; p $num campos na linha $row: br &quot;; $row++; for ($c=0; $c $num; $c++) {print $data[$c].&quot; br &quot;;}} fclose ($fp);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also explode(), file(), and pack()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também explode(), file() e pack()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string of up to length - 1 bytes read from the file pointed to by handle.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string com até length - 1 bytes lidos do arquivo apontado por fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading ends when length - 1 bytes have been read, on a newline (which is included in the return value), or on EOF (whichever comes first).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A leitura acaba quando length - 1 bytes foram lidos, encontra-se um fim de linha (newline) (que é incluido no valor retornado) ou no fim de arquivo (eof) (o que acontecer primeiro).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no length is specified, the length defaults to 1k, or 1024 bytes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum length for informado, o default é 1Kb, ou 1024 bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um erro ocorrer, retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Common Pitfalls:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Equívocos comuns:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>People used to the &apos;C&apos; semantics of fgets() should note the difference in how EOF is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pessoas acostumadas a semântica do fgets em &apos;C&apos; devem notar a diferenca em como o fim do arquivo (EOF) é retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro para o arquivo deve ser válido e deve apontar para um arquivo aberto com sucesso por fopen(), popen() ou fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple example follows:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um simples exemplo segue:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading a file line by line</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lendo um arquivo linha a linha</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$handle = fopen (&quot;/ tmp / inputfile.txt&quot;, &quot;r&quot;); while (!feof ($handle)) {$buffer = fgets($handle, 4096); echo $buffer;} fclose ($handle);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$fd = fopen (&quot;/ tmp / arquivodeentrada.txt&quot;, &quot;r&quot;); while (!feof ($fd)) {$buffer = fgets($fd, 4096); echo $buffer;} fclose ($fd);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The length parameter became optional in PHP 4.2.0, if omitted, it would assume 1024 as the line length.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro length se tornou opcional a partir do PHP 4.2.0, e se omitido, tem default para 1024 bytes para o comprimento da linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.3, omitting length will keep reading from the stream until it reaches the end of the line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.3, omitindo length fará continuar a leitura a partir do stream até encontrar o fim da linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the majority of the lines in the file are all larger than 8KB, it is more resource efficient for your script to specify the maximum line length.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a maioria das linhas no arquivo forem todar maiores que 8 Kb, haverá mais eficiência de recursos se seus scripts informarem o comprimento máximo das linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is binary safe as of PHP 4.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é binary safe a partir do PHP 4.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Earlier versions were not binary safe.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Versões anteriores não são seguras para dados binários.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are having problems with PHP not recognizing the line endings when reading files either on or created by a Macintosh computer, you might want to enable the auto_detect_line_endings run-time configuration option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está tendo problemas com o PHP no reconhecimento do final de linha quando criando ou lendo arquivos num computador Macintosh, você pode habilitar a opção auto_detect_line_endings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fread(), fopen(), popen(), fgetc(), fsockopen(), and socket_set_timeout().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fread(), fopen(), popen(), fgetc(), fsockopen() e socket_set_timeout().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to fgets(), except that fgetss attempts to strip any HTML and PHP tags from the text it reads.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Idêntico a fgets(), exceto que fgetss tenta retirar qualquer tag HTML ou PHP do texto que ele lê.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional third parameter to specify tags which should not be stripped.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode utilizar o terceiro parâmetro opcional para especificar quais tags não devem ser retiradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fgets(), fopen(), fsockopen(), popen(), and strip_tags().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fgets(), fopen(), fsockopen(), popen() e strip_tags().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the time the file was last accessed, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a data e hora em que o arquivo foi acessado pela última vez, ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The time is returned as a Unix timestamp.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tempo que é retornado é um timestamp UNIX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The atime of a file is supposed to change whenever the data blocks of a file are being read.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O atime do arquivo supostamente deve mudar quando os blocos de informação do arquivo forem lidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be costly performancewise when an application regularly accesses a very large number of files or directories.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode ser caro em termos de performance quando uma aplicação freqüentemente acessa um número muito grande de arquivos ou diretórios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some Unix filesystems can be mounted with atime updates disabled to increase the performance of such applications; USENET news spools are a common example.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alguns filesystems Unix podem ser montados com updates dos atimes desabilitados para aumentar a performance destas aplicações; USENET news spools é um exemplo comum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On such filesystems this function will be useless.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nestes filesystems esta função é inútil.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the time the file was last changed, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o tempo em que o arquivo foi modificado pela última vez, ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The time is returned as a Unix timestamp.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tempo é retornado como um timestamp Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In most Unix filesystems, a file is considered changed when its inode data is changed; that is, when the permissions, owner, group, or other metadata from the inode is updated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na maior parte dos filesystems Unix, um arquivo é considerado modificado quando a informação do inode é modificada; isto é, quando as permissões, dono (owner), grupo (group), ou outra metadata do inode é modificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also filemtime() (which is what you want to use when you want to create &quot;Last Modified &quot;footers on web pages) and fileatime().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também filemtime() (o que é o que você deseja usar quando criando rodapés com informações sobre última vez que o arquivo foi modificado em web pages) e fileatime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note also that in some Unix texts the ctime of a file is referred to as being the creation time of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note também que em alguns textos Unix o ctime do arquivo é referido como sendo o tempo de criação do tempo do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is wrong.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é errado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no creation time for Unix files in most Unix filesystems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há tempo de criação de arquivos Unix na maior parte dos filesystems Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server&apos;s filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não irá funcionar em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the file specified by filename exists; FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se o arquivo expecificado por nomedoarquivo existe; FALSE caso contrário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server&apos;s filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não irá funcionar em arquivos remotos; o arquivo para ser examinado tem que ser accessivel pelo filesystem do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using Windows shares:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando compartilhamentos Windows:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On windows, use / /computername / share / filename or \\\\computername\share\filename to check files on network shares.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No Windows, use / /computername / share / filename ou \\\\computername\share\filename para checar arquivos em compartilhamentos de rede.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Testing whether a file exists</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Testando se um arquivo existe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $filename = &apos;/ path / to / foo.txt&apos;; if (file_exists($filename)) {print &quot;The file $filename exists&quot;;} else {print &quot;The file $filename does not exist&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $filename = &apos;/ caminho / para / qualquer.txt&apos;; if (file_exists($filename)) {print &quot;O arquivo $filename existe&quot;;} else {print &quot;O arquivo $filename não existe&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_readable(), is_writable(), is_file() and file().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_readable(), is_writable(), is_file() e file().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to file(), except that file_get_contents() returns the file in a string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Idêntico a readfile(), exceto que file_get_contents() retorna o arquivo em uma string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is binary-safe.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é compatível com dados binários</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: fgets(), file(), fread(), include(), and readfile().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: fgets(), file(), fread(), include() e readfile().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the group ID of the file, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o group ID do arquivo, ou FALSE no caso de um erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The group ID is returned in numerical format, use posix_getgrgid() to resolve it to a group name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use posix_getgrgid() para resolver para o nome do grupo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O resultado desta função é guardado em cache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server&apos;s filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não irá funcionar em arquivos remotos; o arquivo a ser examinado tem que ser acessivel através do filesystem do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each element of the array corresponds to a line in the file, with the newline still attached.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Idêntico a readfile(), exceto que file() retorna o arquivo em um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each line in the resulting array will include the line ending, so you still need to use trim() if you do not want the line ending present.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em caso de falha, file() retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are having problems with PHP not recognizing the line endings when reading files either on or created by a Macintosh computer, you might want to enable the auto_detect_line_endings run-time configuration option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada linha do array resultante terá os caracteres de fim de linha, então você precisa utilizar trim() se não quiser esses caracteres presentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional use_include_path parameter and set it to &quot;1&quot;, if you want to search for the file in the include_path, too.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está tendo problemas com o PHP no reconhecimento do final de linha quando criando ou lendo arquivos num computador Macintosh, você pode habilitar a opção auto_detect_line_endings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar o parâmetro opcional use_include_path como &quot;1&quot;, se você deseja procurar o arquivo no include_path também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.3.0 file() became binary safe.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também file_get_contents(). $html = implode (&apos;&apos;, file (&apos;http: / /www.exemplo.com / &apos;));?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also readfile(), fopen(), fsockopen(), popen(), file_get_contents(), and include().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também readfile(), fopen(), fsockopen(), and popen(), file_get_contents() e include().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the inode number of the file, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o número do inode do arquivo, ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>filemtime</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The time is returned as a Unix timestamp, which is suitable for the date() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a data / hora em que o arquivo foi modificado pela última vez, ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tempo é retornado como um timestamp Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server&apos;s filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja clearstatcache() para mais detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the time when the data blocks of a file were being written to, that is, the time when the content of the file was changed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. filemtime() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilize date() no resultado desta função para obter uma versão imprimível da data (para a utilização em rodapés).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also filectime(), stat(), touch(), and getlastmod().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também filectime() e touch().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the user ID of the owner of the file, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o ID do usuário( user ID) do dono (owner) do arquivo, ou FALSE caso um erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The user ID is returned in numerical format, use posix_getpwuid() to resolve it to a username.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ID do usuário é retornado no formato numérico, use posix_getpwuid() para obter o username do usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the permissions on the file, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna as permissões do arquivo, ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>filepro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This reads and verifies the map file, storing the field count and info.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>filepro_retrieve</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>filepro_rowcount</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the size of the file in bytes, or FALSE in case of an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o tamanho do arquivo, ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>filetype</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possible values are fifo, char, dir, block, link, file, and unknown.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o tipo do arquivo( file type).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE if an error occurs. filetype() will also produce an E_NOTICE message if the stat call fails or if the file type is unknown.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se um erro ocorrer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: is_dir(), is_file(), is_link(), file_exists(), and stat().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: is_dir(), is_file(), is_link(), file_exists() e stat().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>floatval</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the float value of var.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports a portable way of locking complete files in an advisory way (which means all accessing programs have to use the same way of locking or it will not work).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta uma maneira portável de lock arquivos inteiros em uma advisory way (que significa que todos os programas acessando tem que usar o mesmo tipo de travamento ou não irá funcionar).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>flock() operates on handle which must be an open file pointer. operation is one of the following values:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>flock() opera em fp, que tem que ser um ponteiro de arquivo aberto com sucesso. operacao é um dos seguintes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To acquire a shared lock (reader), set operation to LOCK_SH (set to 1 prior to PHP 4.0.1).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para obter um lock compartilhado (leitura), utilize operation como LOCK_SH (ou use 1 se a versão do PHP for anterior a 4.0.1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To acquire an exclusive lock (writer), set operation to LOCK_EX (set to 2 prior to PHP 4.0.1).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para obter um lock exclusivo (gravação), utilize operacao como LOCK_EX (ou use 2 se a versão do PHP for anterior a 4.0.1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To release a lock (shared or exclusive), set operation to LOCK_UN (set to 3 prior to PHP 4.0.1).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para retirar um lock (compartilhado ou exclusivo), uyilize operacao como LOCK_UN (ou use 3 se a versão do PHP for anterior a 4.0.1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don&apos; t want flock() to block while locking, add LOCK_NB (4 prior to PHP 4.0.1) to operation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você não quer usar flock() para bloquear enquanto travando, adicione LOCK_NB (4 se a versão do PHP for anterior a 4.0.1) a operacao.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>flock() allows you to perform a simple reader / writer model which can be used on virtually every platform (including most Unix derivatives and even Windows).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>flock() permite a você fazer um simples modelo leitura / gravação (reader / writer) que pode ser usado em virtualmente todas as plataformas (incluindo a maior parte dos Unixes e até mesmo Windows).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional third argument is set to TRUE if the lock would block (EWOULDBLOCK errno condition)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O terceiro argumento opcional é usado como TRUE se a lock irá bloquear (EWOULDBLOCK errno condition).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>flock() retorna TRUE em caso de sucesso e FALSE em caso de erro (por exemplo quando um lock não pode ser obtido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because flock() requires a file pointer, you may have to use a special lock file to protect access to a file that you intend to truncate by opening it in write mode (with a &quot;w &quot;or &quot;w+&quot; argument to fopen()).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma vez que flock() requer um ponteiro de arquivo, você precisa utilizar um lock de arquivo especial para proteger i acessi a um arquivo ao qual você pretende truncar quando abrindo no modo de escrita (com um argumento &quot;w &quot;ou &quot;w+&quot; em fopen()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>flock() will not work on NFS and many other networked file systems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>flock() não funcionará em NFS ou em qualquer outro sistema de arquivos em rede.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Check your operating system documentation for more details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifique a documentação do seu sistema operacional para mais detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On some operating systems flock() is implemented at the process level.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na maior parte dos sistemas operacionais flock() é implementada no nível do processo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using a multithreaded server API like ISAPI you may not be able to rely on flock() to protect files against other PHP scripts running in parallel threads of the same server instance!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando utilizando um servidor com uma API de multiprocessamento (como ISAPI), você não pode confiar em flock() para proteger os arquivos contra outros scripts PHP rodando em threads paralelas da mesma instância do servidor!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>flock() is not supported on antiquated filesystems like FAT and its derivates and will therefore always return FALSE under this environments (this is especially true for Windows 98 users).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>flock() não é suportado em sistemas de arquivos antiquados como a FAT e seus derivados, e sempre retornará FALSE sob esses ambientes (especialmente para usuários do Windows 98).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the next lowest integer value by rounding down value if necessary.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o próximo menor valor inteiro ao se arredondar para baixo o valor, se necessário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value of floor() is still of type float because the value range of float is usually bigger than that of integer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor retornado de floor() é do tipo float porque o tipo float normalmente abrange mais números possíveis do que integer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. floor() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplos de floor()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ceil() and round().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também ceil() e round().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fnmatch() checks if the passed string would match the given shell wildcard pattern.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fnmatch() checa se a string se encaixa com o pattern.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is especialy usefull for filenames, but may also be used on regular strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é especialmente útil para nomes de arquivos, mas também pode ser utilizado em strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The average user may be used to shell patterns or at least in their simplest form to &apos;?&apos; and &apos;* &apos;wildcards so using fnmatch() instead of ereg() or preg_match() for frontend search expression input may be way more convenient for non-programming users.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O usuário comum poderá utilizar curingas shell na sua forma mais simples (&apos;?&apos; e &apos;* &apos;) com fnmatch() em vez de ereg() ou preg_match() para pesquisas realizadas em código, numa forma mais inteligível para usuários não programadores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checking a color name against a shell wildcard pattern.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verificando um nome de cor com um padrão shell</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if( fnmatch(&quot;*gr[ae]y&quot;, $color)) {echo &quot;some form of gray.. .&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if( fnmatch(&quot;*gr[ae]y&quot;, $color)) {echo &quot;alguma forma da palavra gray.. .&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also glob(), ereg(), preg_match() and the unix manpage on fnmatch(3) for flag names (as long as they are not documented here).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também glob(), ereg(), preg_match() e a manpage UNIX de fnmatch(3) para nomes de flags (já que não estão documentadas aqui).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fopen() binds a named resource, specified by filename, to a stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fopen() conecta um recurso nomeado, especificado em filename para um stream.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If filename is of the form &quot;scheme: / /.. .&quot;, it is assumed to be a URL and PHP will search for a protocol handler (also known as a wrapper) for that scheme.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se filename está na forma &quot;protocolo: / /.. .&quot;, é assumido que seja uma URL e o PHP irá procurar por um manipulador de protocolo (também conhecido como wrapper) conforme o prefixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no wrappers for that protocol are registered, PHP will emit a notice to help you track potential problems in your script and then continue as though filename specifies a regular file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum wrapper para o protocolo estiver registrado, o PHP irá emitir um alerta para ajudá-lo a rastrear problemas potenciais em seu script, presumindo que filename é um nome de arquivo comum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP has decided that filename specifies a local file, then it will try to open a stream on that file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o PHP decidir que filename se refere a um arquivo local, então ele tentará abrir o stream para aquele arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file must be accessible to PHP, so you need to ensure that the file access permissions allow this access.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse arquivo precisa ser acessível pelo PHP, então você precisa certificar-se que as permissões de acesso que garantam esse acesso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have enabled safe_mode, or open_basedir further restrictions may apply.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está com safe_mode ativado ou open_basedir, essas restrições serão aplicadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP has decided that filename specifies a registered protocol, and that protocol is registered as a network URL, PHP will check to make sure that allow_url_fopen If PHP has decided that filename specifies a registered protocol, and that protocol is registered as a network URL, PHP will check to make sure that allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o PHP decidir que filename se refere a um protocolo registrado, e que o protocolo está registrado como um URL de rede, o PHP irá verificar se allow_url_fopen Se o PHP decidir que filename se refere a um protocolo registrado, e que o protocolo está registrado como um URL de rede, o PHP irá verificar se allow_url_fopen está ativado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is switched off, PHP will emit a warning and the fopen call will fail.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se ele estiver desligado, o PHP irá emitir um alerta e a chamada a fopen irá falhar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The list of supported protocols can be found in Appendix I.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A lista de protocolos registrados pode ser encontrada em Apêndice I.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mode specifies the type of access you require to the stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mode especifica a tipo de acesso que você requer na stream.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It may be any of the following:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele pode ser um dos seguintes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;r&apos; - Open for reading only; place the file pointer at the beginning of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;r&apos; - Abrir somente para leitura; coloca o ponteiro de arquivo no começo do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;r+&apos; - Open for reading and writing; place the file pointer at the beginning of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;r+&apos; - Abrir para leitura e gravação; colocar o ponteiro de arquivo no começo do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;w&apos; - Open for writing only; place the file pointer at the beginning of the file and truncate the file to zero length.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;w&apos; - Abrir somente para gravação; colocar o ponteiro de arquivo no começo do arquivo e truncar o arquivo para tamanho zero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the file does not exist, attempt to create it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo não existir, tentar cria-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;w+&apos; - Open for reading and writing; place the file pointer at the beginning of the file and truncate the file to zero length.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;w+&apos; - Abrir para leitura e escrita; colocar o ponteiro de arquivo no início do arquivo e truncar o arquivo para tamanho zero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;a&apos; - Open for writing only; place the file pointer at the end of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;a&apos; - Abrir o arquivo somente para escrita; colocar o ponteiro de arquivo no fim do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the file does not exist, attempt to create it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo não existe, tentar cria-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;a+&apos; - Open for reading and writing; place the file pointer at the end of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;a+&apos; - Abrir o arquivo para leitura e gravação; colocar o ponteiro no fim do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mode may contain the letter &apos;b&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O mode O mode pode conter a letra &apos;b&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é útil somente em sistemas que diferenciam entre arquivos binários e texto (por exemplo Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It&apos; s useless on Unix).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É inútil em Unix).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not needed, this will be ignored.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se não necessário, será ignorado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You are encouraged to include the &apos;b&apos; flag in order to make your scripts more portable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você é encorajado a incluir o modo &apos;b&apos; de forma a tornar seus scripts mais portáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional third use_include_path parameter can be set to &apos;1&apos; or TRUE if you want to search for the file in the include_path, too.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar o terceiro pparâmetro opcional como &quot;1&quot;, se você quiser procurar pelo arquivo no include_path também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional fourth zcontext is used for specifying tuning parameters and callbacks.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O quarto parâmetro zcontext (opcional) é utilizado especificamente para ajuste de parâmetros e callbacks.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the open fails, the function returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a abertura falhar, a função retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fopen() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo do fopen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $handle = fopen (&quot;/ home / rasmus / file.txt&quot;, &quot;r&quot;); $handle = fopen (&quot; / home / rasmus / file.gif&quot;, &quot;wb&quot;); $handle = fopen (&quot;http: / /www.example.com /&quot;, &quot;r&quot;); $handle = fopen (&quot;ftp: / /user:password@example.com / somefile.txt&quot;, &quot;w&quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $fp = fopen (&quot;/ home / rasmus / file.txt&quot;, &quot;r&quot;); $fp = fopen (&quot; / home / rasmus / file.gif&quot;, &quot;wb&quot;); $fp = fopen (&quot;http: / /www.example.com /&quot;, &quot;r&quot;); $fp = fopen (&quot;ftp: / /user:password@example.com / &quot;, &quot;w&quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are experiencing problems with reading and writing to files and you&apos; re using the server module version of PHP, remember to make sure that the files and directories you&apos;re using are accessible to the server process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está tendo problemas com a leitura e gravação para arquivos e você está usando a versão de modulo de servidor do PHP, lembre-se de que os arquivos e diretórios que você está usando precisam ser acessíveis ao processo do servidor HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On the Windows platform, be careful to escape any backslashes used in the path to the file, or use forward slashes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na plataforma Windows, tenha cuidado para usar uma segunda barra invertida (escape) nos caminhos de arquivos, ou usar a barra normal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $handle = fopen (&quot;c:\\data\\info.txt&quot;, &quot;r&quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $fp = fopen (&quot;c:\\data\\info.txt&quot;, &quot;r&quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also Appendix I, fclose(), fgets(), fsockopen(), file(), file_exists(), is_readable(), socket_set_timeout(), and popen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice I, fclose(), fgets(), fsockopen(), file(), file_exists(), is_readable(), socket_set_timeout() e popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fpassthru</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, fpassthru() returns the number of characters read from handle and passed through to the output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um error ocorrer, a função fpassthru() retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro de arquivo tem que ser válido e apontar para um arquivo aberto com sucesso por fopen(), popen() ou fsockopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may need to call rewind() You may need to call rewind() to reset the file pointer to the beginning of the file if you have already written data to the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode precisar chamar rewind() para reiniciar o ponteiro do arquivo para o início do arquivo caso você já tenha escrito dados no arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file is closed when fpassthru() is done reading it (leaving handle useless).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo é fechado quando fpassthru() acaba de ler (deixando fp sem utilidade).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you just want to dump the contents of a file to the output buffer, without first modifying it or seeking to a particular offset, you may want to use the readfile(), which saves you the fopen() call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você somente quiser jogar o conteúdo de um arquivo para o buffer de saída, sem primeiro modificar ou procurar por um detalhe qualquer, você pode querer usar a função readfile(), que vai economizar uma chamada a função fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using fpassthru() on a binary file on Windows systems, you should make sure to open the file in binary mode by appending a b to the mode used in the call to fopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando utilizando fpassthru() em um arquivo binário em sistemas Windows, você precisa verificar se abriu o arquivo em modo binário, acrescentando um b no modo informado na chamada de fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You are encouraged to use the b flag when dealing with binary files, even if your system does not require it, so that your scripts will be more portable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você é encorajado a utilizar o modo b quando trabalhando com arquivos binários, mesmo que seu sistema não requira isso, de forma que seus scripts se tornem mais portáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also readfile(), fopen(), popen(), and fsockopen()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também readfile(), fopen(), popen() e fsockopen()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: printf(), sprintf(), sscanf(), fscanf(), vsprintf(), and number_format().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. sprintf(): zero-padded integers</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. sprintf(): zero-padded integers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. sprintf(): formatting currency</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. sprintf(): formatting currency</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fputs() is an alias to fwrite(), and is identical in every way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fputs() é uma função sinônima (alias) para fwrite(), e é identica em todas as maneiras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the length parameter is optional and if not specified the entire string will be written.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que o parametro comprimento é opcional e se não for especificado a string inteira será escrita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fread() reads up to length bytes from the file pointer referenced by handle.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fread() lê até comprimento bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading stops when length bytes have been read or EOF (end of file) reached, whichever comes first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A leitura é interrompida quando comprimento bytes foram lidos ou o fim do arquivo (eof) foi alcançado, o que ocorrer primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / get contents of a file into a string $filename = &quot;/ usr / local / something.txt&quot;; $handle = fopen ($filename, &quot;r&quot;); $contents = fread ($handle, filesize ($filename)); fclose ($handle);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / ler o conteúdo do arquivo para uma string $nomedoarquivo = &quot;/ usr / local / algo.txt&quot;; $fd = fopen ($nomedoarquivo, &quot;r&quot;); $conteudo = fread ($fd, filesize ($nomedoarquivo)); fclose ($fd);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows) the file must be opened with&apos;b &apos;included in fopen() mode parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em sistemas que diferenciam entre arquivos binários e texto (por exemplo Windows) o arquivo tem que ser aberto com &apos;b &apos;incluído como parametro na função fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $filename = &quot;c:\\files\\somepic.gif&quot;; $handle = fopen ($filename, &quot;rb&quot;); $contents = fread ($handle, filesize ($filename)); fclose ($handle);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $nomedoarquivo = &quot;c:\\arquivos\\algumaimg.gif&quot;; $fd = fopen ($nomedoarquivo, &quot;rb&quot;); $conteudo = fread ($fd, filesize ($nomedoarquivo)); fclose ($fd);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fwrite(), fopen(), fsockopen(), popen(), fgets(), fgetss(), fscanf(), file(), and fpassthru().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fwrite(), fopen(), fsockopen(), popen(), fgets(), fgetss(), fscanf(), file() e fpassthru().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fribidi_log2vis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fscanf</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If only two parameters were passed to this function, the values parsed will be returned as an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any whitespace in the format string matches any whitespace in the input stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se somente dois parametros forem passados para a função, os valores interpretados serão retornados como um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that even a tab \t in the format string can match a single space character in the input stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os parametros opcionais tem que ser passados por referência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fscanf() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que qualquer tabulação \t na string formato poderá bater com um caracter de espaço simples no stream de entrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. users.txt</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo do fscanf()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.3.0, the maximum number of characters read from the file was 512 (or up to the first \n, whichever came first).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$fp = fopen (&quot;users.txt&quot; ,&quot;r&quot;); while ($userinfo = fscanf ($fp, &quot;%s\t%s\t%s\n&quot;)) {list ($name, $profission, $countrycode) = $userinfo; / /... fazer algo com os valores} fclose($fp);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.3.0 arbitrarily long lines will be read and scanned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. users.txt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fread(), fgets(), fgetss(), sscanf(), printf(), and sprintf().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fread(), fgets(), fgetss(), sscanf(), printf() e sprintf().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the file position indicator for the file referenced by handle .The new position, measured in bytes from the beginning of the file, is obtained by adding offset to the position specified by whence, whose values are defined as follows:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A nova posição é obtida, medindo em bytes do início do arquivo, é obtida ao adicionar offset a posição especificada por whence, cujo valor é definido como se segue:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SEEK_SET - Set position equal to offset bytes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SEEK_SET - Use a posição igual à offset bytes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SEEK_CUR - Set position to current location plus offset.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SEEK_CUR - Use a posição para a localização atual mais offset.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SEEK_END - Set position to end-of-file plus offset. (To move to a position before the end-of-file, you need to pass a negative value in offset.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SEEK_END - Use a posição para o fim do arquivo (eof) mais offset. (Para mover para uma posição anterior ao fim de arquivo, você precisa passar um valor negativo em offset.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If whence is not specified, it is assumed to be SEEK_SET.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se whence não é especificado é presumido ser SEEK_SET.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon success, returns 0; otherwise, returns -1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em caso de sucesso, retorna 0; caso contrário, retorna -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that seeking past EOF is not considered an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que fazer um seek depois do fim do arquivo (eof) é considerado um erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>May not be used on file pointers returned by fopen() if they use the &quot;http: / / &quot;or &quot;ftp: / /&quot; formats.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não pode ser usado em ponteiros de arquivo retornados por fopen() se for usado o formato &quot;http: / / &quot;ou &quot;ftp: / /&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The whence argument was added after PHP 4.0.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento whence foi adicionado depois do PHP 4.0.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ftell() and rewind().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também ftell() e rewind().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. fsockopen() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. fsockopen() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gathers the statistics of the file opened by the file pointer handle.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mantém estatísticas do arquivo aberto pelo ponteiro de arquivos fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is similar to the stat() function except that it operates on an open file pointer instead of a filename.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é similar a função stat() exceto que ela opera em um ponteiro de arquivo aberto ao invéz de um nome de arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array with the statistics of the file with the following elements:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um array com as estatísticas do arquico com os seguintes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>user id of owner</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>user id do dono (owner)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>group id owner</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>group id (owner)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>device type if inode device *</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tipo de device se inode device *</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last access</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tempo do último acesso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last modification</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tempo da última modificação( modification)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>time of last change</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tempo da última mudança( change)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>blocksize for filesystem I / O *</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tamanho do bloco para o filesystem I / O *</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number of blocks allocated</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>número de blocos alocados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the position of the file pointer referenced by handle; i.e., its offset into the file stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a posição do ponteiro de arquivo referenciado por fp; por exemplo o seu offset no file stream.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um error ocorrer, retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen() or popen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro de arquivo tem que ser válidoe apontar para um arquivo aberto com sucesso por fopen() ou popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fopen(), popen(), fseek(), and rewind().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fopen(), popen(), fseek() e rewind().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_close</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_chmod</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_close() closes ftp_stream and releases the resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_chdir</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_chmod</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a FTP stream on success or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer, fp.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer, handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_fput() uploads the data from the file pointer fp until the end of the file is reached.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_fput() uploads the data from the file pointer handle ftp_fput() uploads the data from the file pointer handle until the end of the file is reached.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_get_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is only available in CVS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_get_option() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ftp_get_option() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_mkdir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates the specified directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_nb_continue</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Continues retrieving / sending a file nbronously</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_nb_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer, fp.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_nb_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer, handle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_nb_fput() uploads the data from the file pointer fp ftp_nb_fput() uploads the data from the file pointer fp until it reaches the end of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_nb_fput() uploads the data from the file pointer handle until it reaches the end of the file.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_nb_get() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ftp_nb_get() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_nb_put</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ftp_nb_put() stores local_file on the FTP server, as remote_file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_nb_put() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ftp_nb_put() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_put() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ftp_put() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_set_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ftp_set_option() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ftp_set_option() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ftp_ssl_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a SSL-FTP stream on success or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Takes the filepointer, handle, and truncates the file to length, size.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pega o ponteiro de arquivo, fp, e corta o arquivo no comprimento especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna TRUE em caso de sucesso e FALSE em caso de falha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fwrite() writes the contents of string to the file stream pointed to by handle.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fwrite() grava os conteúdos de string para o stream de arquivo apontado por fp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the length argument is given, writing will stop after length bytes have been written or the end of string is reached, whichever comes first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o argumento comprimento é dado, a gravação irá parar depois de que comprimento bytes foram escritos ou o fim da string é alcançada, o que ocorrer primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fwrite() returns the number of bytes written, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fwrite() retorna o número de bytes gravados, ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that if the length argument is given, then the magic_quotes_runtime configuration option will be ignored and no slashes will be stripped from string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que se o argumento comprimento é dado, então a opção de configuração magic_quotes_runtime será ignorada e nenhuma barra será retirada do string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows) the file must be opened with&apos;b &apos;included in fopen() mode parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em sistemas que diferenciam entre arquivos binários e texto (por exemplo Windows) o arquivo tem que ser aberto com &apos;b &apos;incluído no parametro mode do fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple fwrite example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo fwrite</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $filename = &apos;test.txt&apos;; $somecontent = &quot;Add this to the file\n&quot;; / / Let&apos;s make sure the file exists and is writable first. if (is_writable($filename)) {/ / In our example we&apos;re opening $filename in append mode. / / The file pointer is at the bottom of the file hence / / that&apos;s where $somecontent will go when we fwrite() it. if (!$handle = fopen($filename, &apos;a&apos;)) {print &quot;Cannot open file ($filename)&quot;; exit;} / / Write $somecontent to our opened file. if (!fwrite($handle, $somecontent)) {print &quot;Cannot write to file ($filename)&quot;; exit;} print &quot;Success, wrote ($somecontent) to file ($filename)&quot;; fclose($handle);} else {print &quot;The file $filename is not writable&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $filename = &apos;teste.txt&apos;; $somecontent = &quot;Acrescentando isto no arquivo\n&quot;; / / Tendo certeza que o arquivo existe e que há permissão de escrita primeiro. if (is_writable($filename)) {/ / Em nosso exemplo, nós estamos abrindo $filename em modo de append (acréscimo). / / O ponteiro do arquivo estará no final dele desde / / que será aqui que $somecontent será escrito com fwrite(). if (!$fp = fopen($filename, &apos;a&apos;)) {print &quot;Erro abrindo arquivo ($filename)&quot;; exit;} / / Escrevendo $somecontent para o arquivo aberto. if (!fwrite($fp, $somecontent)) {print &quot;Erro escrevendo no arquivo ($filename)&quot;; exit;} print &quot;Sucesso: escrito ($somecontent) no arquivo ($filename)&quot;; fclose($fp);} else {print &quot;The file $filename is not writable&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fread(), fopen(), fsockopen(), popen(), and fputs().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fread(), fopen(), fsockopen(), popen() e fputs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>getallheaders() is an alias for apache_request_headers().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>getallheaders() é um sinônimo para apache_request_headers().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will return an associative array of all the HTTP headers in the current request.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela retorna um array associativo de todos os headers HTTP da requisição atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read the apache_request_headers() documentation for more information on how this function works.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a documentação de apache_request_headers() para mais detalhes do funcionamento dessa função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.3.0, getallheaders() became an alias for apache_request_headers().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4.3.0, getallheaders() se tornou um apelido de apache_request_headers().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Essentially, it was renamed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essencialmente, ela foi renomeada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is because this function only works when PHP is compiled as an Apache Module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto porque a função somente funciona quando o PHP é compilado com um módulo do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also apache_request_headers().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também apache_request_headers().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>get_browser</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, the value of HTTP_USER_AGENT is used; however, you can alter this (i.e., look up another browser&apos;s info) by passing the optional user_agent parameter to get_browser().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The information is returned in an object, which will contain various data elements representing, for instance, the browser&apos; s major and minor version numbers and ID string; TRUE / FALSE values for features such as frames, JavaScript, and cookies; and so forth.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por padrão, o valor de $HTTP_USER_AGENT é usado; em qualquer caso você pode alterar isto (ex., procurar informação de outro browser) passando o parâmetro opcional user_agent para a função get_browser().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The format of the file is fairly self-explanatory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A informação é retornada como um objeto, que contém vários elementos com dados representando, por exemplo, os números de versão maior e menor, a string de ID, valores TRUE / false para coisas como frames, JavaScript, e cookies; e assim em diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example shows how one might list all available information retrieved about the user &apos;s browser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O formato do arquivo é auto-explicatório.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. get_browser() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo a seguir irá mostrar uma possível lista de toda a informação disponível sobre o browser do usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo $_SERVER[ &apos;HTTP_USER_AGENT&apos;]. &quot;hr / \n&quot;; $browser = get_browser(); foreach ($browser as $name = $value) {print&quot; b $name / b $value br / \n&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output of the above script would look something like this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo get_browser()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order for this to work, your browscap configuration setting in php.ini must point to the correct location of the browscap.ini file on your system. browscap.ini is not bundled with PHP but you may find an up-to-date browscap.ini file here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function list_array ($array) {while (list ($key, $value) = each ($array)) {$str .= &quot;b $key: / b $value br / \n&quot;;} return $str;} echo &quot;$HTTP_USER_AGENT hr / \n&quot;; $browser = get_browser(); echo list_array ((array) $browser);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, the browscap directive is commented out.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída do script acima deve ser algo como isto:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cookies The cookies value simply means that the browser itself is capable of accepting cookies and does not mean the user has enabled the browser to accept cookies or not.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mozilla / 4.5 [en] (X11; U; Linux 2.2.9 i586) hr / b browser_name_pattern: / b Mozilla / 4\.5.* br / b parent: / b Netscape 4.0 br / b platform: / b Unknown br / b majorver: / b 4 br / b minorver: / b 5 br / b browser: / b Netscape br / b version: / b 4 br / b frames: / b 1 br / b tables: / b 1 br / b cookies: / b 1 br / b backgroundsounds: / b br / b vbscript: / b br / b javascript: / b 1 br / b javaapplets: / b 1 br / b activexcontrols: / b br / b beta: / b br / b crawler: / b br / b authenticodeupdate: / b br / b msn: / b br /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The only way to test if cookies are accepted is to set one with setcookie(), reload, and check for the value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>In order for this to work, your browscap configuration file setting must point to the correct location of the browscap.ini file.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case, you will pass in $HTTP_SERVER_VARS[ &apos;HTTP_USER_AGENT&apos;].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>For more information (including locations from which you may obtain a browscap.ini file), check the PHP FAQ at http: / /www.php.net / FAQ.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the name of the class of which the object obj is an instance.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna o nome da classe da qual o objeto obj é instância.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE if obj is not an object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se obj não é um objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A class defined in a PHP extension is returned in its original notation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma classe definida em uma extensão do PHP é retornada em sua notação original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_parent_class(), gettype(), and is_subclass_of().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também get_parent_class(), gettype() e is_subclass_of().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an array of method names defined for the class specified by class_name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna uma matriz com nomes dos métodos definidos para a classe especificada por class_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.0.6, you can specify the object itself instead of class_name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.0.6, você pode especificar o próprio objeto em vez no nome da classe em class_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$class_methods = get_class_methods( $my_class); / / see below the full example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$class_methods = get_class_methods( $my_class); / / veja um exemplo completo abaixo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. get_class_methods() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo get_class_methods()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will produce:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Produzirá:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class_vars() and get_object_vars().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também get_class_vars() e get_object_vars().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return an associative array of default properties of the class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retornará uma matriz associativa com as propriedades padrão da classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resulting array elements are in the form of varname = value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os elementos resultantes da matriz estão na forma nome_variavel = valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.2.0, Uninitialized class variables will not be reported by get_class_vars().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis de classe não iniciadas não serão exibidos por get_class_vars().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. get_class_vars() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo get_class_vars()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will produce:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php class myclass {var $var1; / / esta não tem valor default... var $var2 = &quot;xyz&quot;; var $var3 = 100; / / construtor function myclass() {return(TRUE);}} $my_class = new myclass(); $class_vars = get_class_vars(get_class($my_class)); foreach ($class_vars as $name = $value) {echo &quot;$name: $value\n&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / Before PHP 4.2.0 var2: xyz var3:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Produzirá:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>100 / / As of PHP 4.2.0 var1: var2: xyz var3:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>var2: xyz var3:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class_methods(), get_object_vars()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também get_class_methods() e get_object_vars()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>get_current_user</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the name of the owner of the current PHP script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current working directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o diretório atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chdir().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: chdir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array containing the date information of the timestamp, or the current local time if no timestamp is given, as the following array elements:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma matriz contendo a data do timestamp, ou a hora corrente local se se nenhum timestamp é dado, como a seguintes elementos da matriz:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;seconds&quot; - seconds</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;seconds&quot; - segundos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;minutes&quot; - minutes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;minutes&quot; - minutos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;hours&quot; - hours</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;hours&quot; - horas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;mday&quot; - day of the month</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;mday&quot; - dia do ano</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;wday&quot; - day of the week, numeric: from 0 as Sunday up to 6 as Saturday</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;wday&quot; - dia da semana, numérico: de 0 como Domingo até 6 como Sábado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;mon&quot; - month, numeric</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;mon&quot; - mês, numérico</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;year&quot; - year, numeric</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;year&quot; - ano, numérico</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;yday&quot; - day of the year, numeric; i.e. &quot;299 &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;yday&quot; - dia do ano, numérico; i.e. &quot;299 &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;weekday&quot; - day of the week, textual, full; i.e. &quot;Friday &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;weekday&quot; - dia da semana, texo, completo; i.e. &quot;Friday &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;month&quot; - month, textual, full; i.e. &quot;January &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;month&quot; - mês, texto, completo; i.e. &quot;January &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. getdate() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. getdate() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>get_declared_classes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an array of the names of the declared classes in the current script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.0.1pl2, three extra classes are returned at the beginning of the array: stdClass (defined in Zend / zend.c), OverloadedTestClass (defined in ext / standard / basic_functions.c) and Directory (defined in ext / standard / dir.c).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna uma matriz com os nomes das classes declaradas no script em execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also note that depending on what libraries you have compiled into PHP, additional classes could be present.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is a list of predefined classes in the Predefined Classes section of the appendices.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.0.1pl2, três classes extras são retornadas no início da matriz: stdClass (definida em Zend / zend.c), OverloadedTestClass (definida em ext / standard / basic_functions.c) e Directory (definida em ext / standard / dir.c).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also class_exists().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que você não será capaz de distinguir suas próprias classes usando estes nomes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>get_html_translation_table() will return the translation table that is used internally for htmlspecialchars() and htmlentities().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>get_html_translation_table() retornará a tabela de tradução que é usada internamente por htmlspecialchars() e htmlentities().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two new defines (HTML_ENTITIES, HTML_SPECIALCHARS) that allow you to specify the table you want.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há duas novas definidas (HTML_ENTITIES, HTML_SPECIALCHARS) que permite especificar a tabela que você quer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>And as in the htmlspecialchars() and htmlentities() functions you can optionally specify the quote_style you are working with.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E como nas funções htmlspecialchars() e htmlentities() você pode opcionalmente especificar a quote_style que você está trabalhando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is ENT_COMPAT mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão é modo ENT_COMPAT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the description of these modes in htmlspecialchars().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a descrição desses modos em htmlspecialchars().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Translation Table Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de tabela de tradução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cool thing is using array_flip() to change the direction of the translation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Legal é usar array_flip() para mudar a direção da tradução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also htmlspecialchars(), htmlentities(), strtr(), and array_flip().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também htmlspecialchars(), htmlentities(), strtr(), e array_flip().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. getimagesize (file)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. getimagesize (file)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. getimagesize (URL)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. getimagesize (URL)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. getimagesize() and MIME types</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. getimagesize() and MIME types</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. getimagesize() returning IPTC</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4. getimagesize() returning IPTC</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. get_included_files() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. get_included_files() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. getlastmod() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. getlastmod() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>getmxrr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches DNS for MX records corresponding to hostname.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>getmyinode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current script &apos;s inode, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>get_object_vars</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an associative array of defined object properties for the specified object obj.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In versions prior to PHP 4.2.0, if the variables declared in the class of which the obj is an instance, have not been assigned a value, those will not be returned in the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna uma matriz associativa com as propriedades definidas do objeto informado em obj.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In versions after PHP 4.2.0, the key will be assigned with a NULL value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se variáveis declaradas na classe de qual obj é uma instância e que não tenham valores assimilados, esses não serão retornados na matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of get_object_vars()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uso de get_object_vars()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([x] = 1.233 [y] = 3.445 [label] =) Array ([x] = 1.233 [y] = 3.445 [label] = point #1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([x] = 1.233 [y] = 3.445) Array ([x] = 1.233 [y] = 3.445 [label] = point #1)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class_methods() and get_class_vars()!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também get_class_methods() e get_class_vars()!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If obj is an object, returns the name of the parent class of the class of which obj is an instance.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se obj é um objeto, retorna o nome da classe pai da classe da qual o obj é uma instância.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If obj is a string, returns the name of the parent class of the class with that name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se obj é uma string, retorna o nome da classe pai da classe com aquele nome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This functionality was added in PHP 4.0.5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta funcionalidade foi adicionada no PHP 4.0.5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class() and is_subclass_of()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também get_class() e is_subclass_of()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the maximum value that can be returned by a call to rand().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o valor máximo que pode ser gerado em uma chamada a função rand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rand(), srand() and mt_getrandmax().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também rand(), srand() e mt_getrandmax().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>getrusage</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an interface to getrusage( 2).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. gettext() -check</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. gettext() -check</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gettimeofday</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an interface to gettimeofday( 2).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns an associative array containing the data returned from the system call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta retorna uma matriz contendo o dado retornado da comunicação com o sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;sec&quot; - seconds</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;sec&quot; - segundos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;usec&quot; - microseconds</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;usec&quot; - microsegundos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;minuteswest&quot; - minutes west of Greenwich</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;minuteswest&quot; - minutos Leste de Greenwich</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;dsttime&quot; - type of dst correction</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;dsttime&quot; - tipo de correção dst</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gettype</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the type of the PHP variable var.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Never use gettype() to test for a certain type, since the returned string may be subject to change in a future version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atenção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>glob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The glob() function searches for all the pathnames matching pattern according to the rules used by the shell.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array containing the matched files / directories or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função glob() procura por todos os caminhos de arquivos que batem com o padrão pattern de acordo com as regras do sistema operacional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GLOB_MARK - Adds a slash to each item returned</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma expansão ou substituição de variável é realizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GLOB_NOCHECK - Return the search pattern if no files matching it were found</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um array contendo os arquivos / diretórios localizados ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GLOB_NOESCAPE - Backslashes do not quote metacharacters</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GLOB_BRACE - Expands {a,b,c} to match&apos;a&apos;, &apos;b&apos;, or&apos;c &apos;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Maneira conveniente de como glob() pode substituir opendir() e similares.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>foreach (glob(&quot;*.txt&quot;) as $filename) {echo &quot;Tamanho de $filename &quot;. filesize($filename). &quot;\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Convenient way how glob() can replace opendir() and friends.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Resultado possível do exemplo acima:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also opendir(), readdir() and closedir(), fnmatch().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também opendir(), readdir(), closedir(), fnmatch() e a manpage UNIX de glob(3) para os nomes das flags (uma vez que elas não estão documentadas aqui).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to the date() function except that the time returned is Greenwich Mean Time (GMT).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Idêntico a função date() exceto que o tempo está em Greenwich Mean Time (GMT).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, when run in Finland (GMT +0200), the first line below prints &quot;Jan 01 1998 00:00:00&quot;, while the second prints &quot;Dec 31 1997 22:00:00 &quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, quando execulta ma Finlândia (GMT +0200), a primeira linha abaixo imprime &quot;Jan 01 1998 00:00:00&quot;, enquando a segunda imprime &quot;Dec 31 1997 22:00:00 &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. gmdate() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. gmdate() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also date(), mktime(), gmmktime() and strftime().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>veja também date(), mktime(), gmmktime() e strftime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical to mktime() except the passed parameters represents a GMT date.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Idêntico ao mktime() exceto que os parâmetros passados representam uma data GMT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gmp_add</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Add two GMP numbers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gmp_div_q</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Divides a by b and returns the integer result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gmp_gcd</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculate greatest common divisor of a and b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gmp_invert</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Computes the inverse of a modulo b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gmp_mod</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates n modulo d.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gmp_pow</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Raise base into power exp.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gmp_prob_prime</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this function returns 0, a is definitely not prime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gmp_random</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Generate a random number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Behaves the same as strftime() except that the time returned is Greenwich Mean Time (GMT).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mesmo comportamento que strftime() exceto que o tempo retornado é Greenwich Mean Time (GMT).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, when run in Eastern Standard Time (GMT -0500), the first line below prints &quot;Dec 31 1998 20:00:00&quot;, while the second prints &quot;Jan 01 1999 01:00:00 &quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, quando roda no Padrão de tempo Oriental (GMT -0500), a primeira linha abaixo imprime &quot;Dec 31 1998 20:00:00&quot;, enquanto a segunda linha imprime &quot;Jan 01 1999 01:00:00 &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. gmstrftime() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. gmstrftime() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strftime().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também strftime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>GregorianToJD</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid Range for Gregorian Calendar 4714 B.C. to 9999 A.D.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gzclose</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The gz-file pointed to by zp is closed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The gz-file pointer must be valid, and must point to a file successfully opened by gzopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gzopen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a gzip (.gz) file for reading or writing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. gzopen() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. gzopen() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>header</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>header() is used to send raw HTTP headers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is similar to hebrev() This function is similar to hebrev() with the difference that it converts newlines (\n) to &quot;br \n&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É similar a hebrev() a diferença é que ela converte newlines (\n) para &quot;br \n&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional parameter max_chars_per_line indicates maximum number of characters per line will be output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro opcional max_chars_per_line indica o número máximo de caracteres por linha que será exibido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function tries to avoid breaking words.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função evita quebrar palavras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hebrev()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também hebrev()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function tries to avoid breaking words.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função tenta evitar palavras quebradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also hebrevc()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também hebrevc()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the decimal equivalent of the hexadecimal number represented by the hex_string argument. hexdec() converts a hexadecimal string to a decimal number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o decimal equivalente do número hexadecimal representado pelo argumento hex_string. hexdec() Retorna o decimal equivalente do número hexadecimal representado pelo argumento hex_string. hexdec() converte uma string hexadecimal para um número decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 7fffffff or 2147483647 in decimal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O maior número que pode ser convertido é 7fffffff (ou 2147483647 em decimal).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>hexdec() will replace of any non-hexadecimal characters it encounters by 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hexdec() substituirá qualquer caracter não hexadecimal que encontrar por 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This way, all left zeros are ignored, but right zeros will be valued.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desta forma, todos os zeros a esqueda são ignorados, mas zeros a direita serão avaliados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. hexdec() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplos hexdec()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>var_dump( hexdec(&quot;See&quot;)); var_dump(hexdec(&quot;ee&quot;)); / / both prints &quot;int(238) &quot;var_dump(hexdec(&quot;that&quot;)); var_dump(hexdec(&quot;a0&quot;)); / / both prints int(160)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>var_dump( hexdec(&quot;See&quot;)); var_dump(hexdec(&quot;ee&quot;)); / / ambos exibem &quot;int(238) &quot;var_dump(hexdec(&quot;that&quot;)); var_dump(hexdec(&quot;a0&quot;)); / / ambos exibem int(160)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also dechex().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também dechex().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The highlight_file() function prints out a syntax higlighted version of the code contained in filename using the colors defined in the built-in syntax highlighter for PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função highlight_file() mostra uma versão do código contido em filename com a sintaxe destacada usando as cores definidas pelo destacador de sintaxe do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the second parameter return is set to TRUE then highlight_file() If the second parameter return is set to TRUE then highlight_file() will return the highlighted code as a string instead of printing it out.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o segundo parâmetro return for TRUE então highlight_file() irá retornar o código como uma string ao invés de mostrá-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the second parameter is not set to TRUE then highlight_file() will return TRUE on success, FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o segundo parâmetro não for TRUE então highlight_file() irá retornar TRUE se funcionar, FALSE em caso de falha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return parameter became available in PHP 4.2.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro return tornou-se disponível no PHP 4.2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Before this time it behaved like the default, which is FALSE</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Antes disso é usado como o padrão, que é FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Care should be taken when using the show_source() and highlight_file() functions to make sure that you do not inadvertently reveal sensitive information such as passwords or any other type of information that might create a potential security risk.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Deve se tomar cuidado quando usar as funções show_source() e highlight_file() para ter certeza que você não irá inadvertidamente revelar informações sensíveis como senhas ou outros tipos de informação que possam criar um risco de segurança em potencial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.2.1 this function is also affected by safe_mode and open_basedir.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.1 esta função também é afetada por safe_mode e open_basedir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creating a source highlighting URL</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Criando uma URL para destaque da sintaxe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To setup a URL that can code hightlight any script that you pass to it, we will make use of the &quot;ForceType&quot; directive in Apache to generate a nice URL pattern, and use the function highlight_file() to show a nice looking code list.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para configurar uma url que possa fazer o destaque da sintaxe de qualquer script que você passar para ela, nós iremos fazer uso da diretiva &quot;ForceType&quot; no Apache para gerar um bom modelo de URL, e usar a função highlight_file() para mostrar o código com uma boa aparência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In your httpd.conf you can add the following:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No seu httpd.conf você pode adicionar o seguinte:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>And then make a file named &quot;source&quot; and put it in your web root directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E então faça um arquivo chamado &quot;source&quot; e coloque-o no seu diretório raiz do servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>HTML HEAD TITLE Source Display / TITLE / HEAD BODY BGCOLOR=&quot; white &quot;?php $script = getenv (&quot;PATH_TRANSLATED&quot;); if(!$script) {echo&quot; BR B ERROR:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>HTML HEAD TITLE Mostrar Fonte / TITLE / HEAD BODY BGCOLOR=&quot; white &quot;?php $script = getenv (&quot;PATH_TRANSLATED&quot;); if(!$script) {echo&quot; BR B ERRO:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Script Name needed / B BR &quot;;} else {if (ereg(&quot;(\.php_BAR_\.inc)$&quot;,$script)) {echo&quot; H1 Source of: $PATH_INFO / H1 \n HR \n&quot;; highlight_file($script);} else {echo &quot;H1 ERROR:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Necessário o nome do script / B BR &quot;;} else {if (ereg(&quot;(\.php_BAR_\.inc)$&quot;,$script)) {echo&quot; H1 Source of: $PATH_INFO / H1 \n HR \n&quot;; highlight_file($script);} else {echo &quot;H1 ERRO:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only PHP or include script names are allowed / H1 &quot;;}} echo&quot; HR Processed: &quot;.date(&quot;Y / M/d H:i:s&quot;,time());? / BODY / HTML</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente PHP ou script de inclusão( .inc) são permitidos / H1 &quot;;}} echo&quot; HR Processado: &quot;.date(&quot;Y / M/d H:i:s&quot;,time());? / BODY / HTML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Then you can use an URL like the one below to display a colorized version of a script located in &quot;/ path / to / script.php&quot; in your web site.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então você pode usar uma URL como a abaixo para mostrar uma versão colorida do script localizado em &quot;/ caminho / para / script.php&quot; no seu site web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>http: / /your.server.com / source / path / to / script.php</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>http: / /your.server.com / source / caminnho / para / script.php</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also highlight_string(), show_source().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também highlight_string(), show_source().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The highlight_string() function outputs a syntax highlighted version of str using the colors defined in the built-in syntax highlighter for PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função highlight_string() mostra o destaque da sintaxe para o parâmetro str usando as cores definidas para o destacador de sintaxe do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the second parameter return is set to TRUE then highlight_string() If the second parameter return is set to TRUE then highlight_string() will return the highlighted code as a string instead of printing it out.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o segundo parâmetro return for TRUE então a função highlight_string() irá retornar o código com a sintaxe destacada ao invés de mostrá-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the second parameter is not set to TRUE then highlight_string() will return TRUE on success, FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o segundo parâmetro não for TRUE então highlight_string() irá retornar TRUE se funcionar, FALSE se ocorrer falha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Before this time it behaved like the default, which is FALSE</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Antes disso é usado como o padrão, que é FALSE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also highlight_file(), and show_source().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também highlight_file(), e show_source().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>htmlentities</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is identical to htmlspecialchars() in all ways, except with htmlentities(), all characters which have HTML character entity equivalents are translated into these entities.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like htmlspecialchars(), the optional second quote_style parameter lets you define what will be done with&apos;single &apos;and &quot;double &quot;quotes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como htmlspecialchars(), ele leva um segundo argumento opcional que indica o que seria feito com aspas simples e dupla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes on one of three constants with the default being ENT_COMPAT:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ENT_QUOTES será convertido ambas aspas simples e dupla, e ENT_NOQUOTES deixará ambas desconvertidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No presente momento, o conjunto de caracteres ISO-8859-1 é usado como padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Available quote_style constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte para o segundo argumento opcional foi adicionado no PHP 3.0.17 e PHP 4.0.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will convert double-quotes and leave single-quotes alone.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como htmlspecialchars() ,ele leva um terceiro argumento opcional que define o conjunto de caracteres usados na conversão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for the optional quote parameter was added in PHP 4.0.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte para esse argumento foi adicionado no PHP 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like htmlspecialchars(), it takes an optional third argument which defines character set used in conversion.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há o oposto desta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for this argument was added in PHP 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, você pode criar uma você próprio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Presently, the ISO-8859-1 character set is used as the default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui está um exemplo de como fazer isso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you&apos; re wanting to decode instead (the reverse) you can use html_entity_decode().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Oposto de htmlentities()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also html_entity_decode(), get_html_translation_table(), htmlspecialchars(), nl2br(), and urlencode().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também htmlspecialchars() e nl2br().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>html_entity_decode() is the opposite of htmlentities() in that it converts all HTML entities to their applicable characters from string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>html_entity_decode() é o oposto da função htmlentities() no que converte todas as entidades HTML para os seus caracteres de string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional second quote_style parameter lets you define what will be done with &apos;single&apos; and &quot;double &quot;quotes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo parâmetro, que é opcional, quote_style permite você definir o que será feito com &apos;apostrofos&apos; e &quot;aspas &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes on one of three constants with the default being ENT_COMPAT:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele recebe uma constante entre três, sendo o padrão ENT_COMPAT:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Available quote_style constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes disponíveis para quote_style</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constant Name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome da Constante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will convert double-quotes and leave single-quotes alone.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Irá converter aspas e deixar os apostrofos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will convert both double and single quotes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Irá converter ambos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Will leave both double and single quotes unconverted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Irá deixar ambos sem converter.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The ISO-8859-1 character set is used as default for the optional third charset.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conjunto de caracteres ISO-8859-1 é usado como padrão para o terceiro parâmetro, que é opcional, charset.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This defines the character set used in conversion.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este defini o conjunto de caracteres usado na conversão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Decoding html entities</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Decodificando entidades html</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $orig = &quot;I&apos;ll \&quot;walk\&quot; the b dog / b now&quot;; $a = htmlentities($orig); $b = html_entity_decode($a); echo $a; / / I&apos;ll quot;walk quot; the lt;b gt;dog lt; / b gt; now echo $b; / / I&apos;ll &quot;walk &quot;the b dog / b now / / Para versões anteriores ao PHP 4.3.0 você deve fazer isto: function unhtmlentities ($string) {$trans_tbl = get_html_translation_table (HTML_ENTITIES); $trans_tbl = array_flip ($trans_tbl); return strtr ($string, $trans_tbl);} $c = unhtmlentities($a); echo $c; / / I&apos;ll &quot;walk&quot; the b dog / b now?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also htmlentities(), htmlspecialchars(), get_html_translation_table(), htmlspecialchars() and urldecode().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também htmlentities(), htmlspecialchars(), get_html_translation_table(), htmlspecialchars() e urldecode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Certain characters have special significance in HTML, and should be represented by HTML entities if they are to preserve their meanings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Certos caracteres tem significado especial em HTML, e seriam representados pela realidade HTML se eles estão preservanado seus significados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a string with some of these conversions made; the translations made are those most useful for everyday web programming.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna uma string com algumas destas conversões feitas; As transformações feitas são aquelas mais úteis para programação web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you require all HTML character entities to be translated, use htmlentities() instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você precisa que sejam transformados todos os caracteres da realidade HTML, use htmlentities() no lugar dela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is useful in preventing user-supplied text from containing HTML markup, such as in a message board or guest book application.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é útil na prevenção de textos fornecidos pelo usuário contendo marcação HTML, tal como um quadro de mensgens ou guest book.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional second argument, quote_style, tells the function what to do with single and double quote characters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo argumento opcional, quote_style, conta à função o que fazer com os caracteres aspas simples e dupla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default mode, ENT_COMPAT, is the backwards compatible mode which only translates the double-quote character and leaves the single-quote untranslated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O modo padrão, ENT_COMPAT, é o modo mais compatível com a atualidade, apenas transforma a aspas-dupla e deixa a aspas-simples como está.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If ENT_QUOTES is set, both single and double quotes are translated and if ENT_NOQUOTES is set neither single nor double quotes are translated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se ENT_QUOTES está definida, ambas transformadas e se ENT_NOQUOTES está definida nenhuma das duas são modificadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The translations performed are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As traduções executadas são:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;&apos; (ampersand) becomes&apos; amp; &apos;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;&apos; (ampersand) torna-se &apos;amp;&apos;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;&quot;&apos; (double quote) becomes&apos; quot; &apos;when ENT_NOQUOTES is not set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;&quot;&apos; (aspas dupla) torna-se &apos;quot;&apos; quando ENT_NOQUOTES não está definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;&apos; &apos;(single quote) becomes&apos; #039; &apos;only when ENT_QUOTES is set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;&apos; &apos;(aspas simples) torna-se&apos; #039; &apos;apenas quando ENT_QUOTES está definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;&apos; (less than) becomes&apos; lt; &apos;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;&apos; (menor que) torna-se &apos;lt;&apos;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&apos;&apos; (greater than) becomes&apos; gt; &apos;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&apos;&apos; (maior que) torna-se &apos;gt;&apos;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. htmlspecialchars() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. htmlspecialchars() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this function does not translate anything beyond what is listed above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que esta função não converte nada além do que foi listado acima.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For full entity translation, see htmlentities().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para completa realidade de conversões, veja htmlentities().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for the optional second argument was added in PHP 3.0.17 and PHP 4.0.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte para o segundo argumento opcional foi adicionado no PHP 3.0.17 e PHP 4.0.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The third argument defines character set used in conversion.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O terceiro argumento define o conjunto de caracteres usados na conversão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default character set is ISO-8859-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conjunto de caracteres padrão é ISO-8859-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for this third argument was added in PHP 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte para o terceiro argumento foi adicionado no PHP 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_html_translation_table(), htmlentities() and nl2br().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também htmlentities() e nl2br().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api_attribute - value</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the value of the attribute.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - checkin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function checks in an object or a whole hiearchie of objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - checkout</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function checks out an object or a whole hiearchie of objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - dstanchors</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Retrieves all destination anchors of an object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - dstofsrcanchors</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Retrieves the destination object pointed by the specified source anchors.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - insertanchor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - insertcollection</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is a shortcut for hwapi_insert().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - insertdocument</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - objectbyanchor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function retrieves an object the specified anchor belongs to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - setcommitedversion</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Commits a version of a docuemnt.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_api - srcanchors</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Retrieves all source anchors of an object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Array2Objrec</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts an object_array into an object record.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Children</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of object ids.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_ChildrenObj</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of object records.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Document_Attributes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the object record of the document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Document_BodyTag</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the BODY tag of the document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Document_Content</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the content of the document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Document_SetContent</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets or replaces the content of the document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Document_Size</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the size in bytes of the document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_EditText</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Uploads the text document to the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_GetAndLock</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the object record for the object with ID objectID.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_GetChildColl</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_GetChildCollObj</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_GetParents</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an indexed array of object ids.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_GetRemoteChildren</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the children of a remote document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_GetRemote</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a remote document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_GetText</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the document with object ID objectID.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Identify</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identifies as user with username and password.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_insertanchors</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_InsertDocument</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Uploads a document into the collection with parent_id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_InsertObject</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inserts an object into the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. modifying an attribute</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. modifying an attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. adding a completely new attribute</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. adding a completely new attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. modifying Title attribute</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. modifying Title attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. modifying Title attribute</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4. modifying Title attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5. removing attribute</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5. removing attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Objrec2Array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts an object_record into an object array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_Output_Document</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prints the document without the BODY tag.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hw_PipeDocument</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the Hyperwave document with object ID objectID.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Principal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Up</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Acima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Manual</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Manual do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>hypot</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is EXPERIMENTAL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atenção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso quer dizer que o comportamento desta função e seu nome, incluindo TUDO o que está documentado aqui pode mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this function at your own risk.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esteja avisado, e use esta função por sua própria conta e risco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atenção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is currently not documented; only the argument list is available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não está documentada, somente a lista de argumentos está disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ibase_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Establishes a connection to an InterBase server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ibase_connect() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ibase_connect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ibase_execute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Execute a query prepared by ibase_prepare().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ibase_field_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array with information about a field after a select query has been run.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ibase_num_fields</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an integer containing the number of fields in a result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ibase_query</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Performs a query on an InterBase database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. iconv_get_encoding() example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. iconv_get_encoding() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. iconv() example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. iconv() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>iconv_set_encoding</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It changes the value of type to charset.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of type can be:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. iconv_set_encoding() example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. iconv_set_encoding() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifx_blobinfile_mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the default blob mode for all select queries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifx_byteasvarchar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the default byte mode for all select-queries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifx_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns: always TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifx_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a connection identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifx_create_blob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>type:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifx_htmltbl_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of rows fetched or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifx_prepare</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a integer result_id for use by ifx_do().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifx_textasvarchar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the default text mode for all select-queries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ifxus_create_slob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates an slob object and opens it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sets whether a client disconnect should cause a script to be aborted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função estabelece se quando o usuário desconectar deve acontecer o fim do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will return the previous setting and can be called without an argument to not change the current setting and only return the current setting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Irá retornar o que foi estabelecido anteriormente e pode ser chamado sem argumentos para retornar o que esta estabelecido e não muda-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Connection Handling section in the Features chapter for a complete description of connection handling in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a seção Connection Handling no capitulo Features para uma completa descrição do manuseio de conexões no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imagecolorclosesthwb</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imagecreatefromgd2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Tip:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dica:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use a URL as a filename with this function if the fopen wrappers have been enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar uma URL com esta função se fopen wrappers estiver habilitado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja fopen() para mais detalhes em como especificar o nome do arquivo e Apêndice I para uma lista de protololos URL suportados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A versões Windows do PHP anteriores ao PHP 4.3 não suportam acesso a arquivos remotos através desta função, mesmo se allow_url_fopen estiver ativado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imagecreatefromgd2part</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imagecreatefromgd</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imagedashedline</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imagefontwidth</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the pixel width of a character in font.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imageinterlace</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>imageinterlace() turns the interlace bit on or off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.9, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imagepsbbox</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Size is expressed in pixels.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.9, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imagepstext</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imagesetstyle() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imagesetstyle() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imagettftext() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imagettftext() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imagetypes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imagetypes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. image_type_to_mime_type (file)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. image_type_to_mime_type (file)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_append</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on sucess, FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_append() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_append() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_check</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns information about the current mailbox.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Close the imap stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_createmailbox() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_createmailbox() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_delete</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_delete() Beispiel</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_delete() Beispiel</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_fetch_overview() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_fetch_overview() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.12, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_getmailboxes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of objects containing mailbox information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_getmailboxes() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_getmailboxes() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_get_quota() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_get_quota() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. imap_get_quota() 4.3 or greater example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. imap_get_quota() 4.3 or greater example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_get_quotaroot() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_get_quotaroot() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_headerinfo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an object of various header elements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_list</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array containing the names of the mailboxes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$mbox = imap_open( &quot;{your.imap.host}&quot; ,&quot;username&quot; ,&quot;password&quot;,OP_HALFOPEN) or die(&quot;can&apos;t connect: &quot;.imap_last_error()); $list = imap_list($mbox ,&quot;{your.imap.host}&quot; ,&quot;*&quot;); if(is_array($list)) {reset($list); while (list($key, $val) = each($list)) print imap_utf7_decode($val). &quot;br \n&quot;;} else print &quot;imap_list failed: &quot;.imap_last_error() .&quot;\n&quot;; imap_close($mbox);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_list() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.2, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_mailboxmsginfo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_mailboxmsginfo() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_mailboxmsginfo() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.5, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_mail_compose</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_mail_compose() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $envelope[ &quot;from&quot;]=&quot;musone@afterfive.com&quot;; $envelope[&quot;to&quot;]=&quot;musone@darkstar&quot;; $envelope[&quot;cc&quot;]=&quot;musone@edgeglobal.com&quot;; $part1[&quot;type&quot;]=TYPEMULTIPART; $part1[&quot;subtype&quot;]=&quot;mixed&quot;; $filename=&quot; / tmp / imap.c.gz&quot;; $fp=fopen($filename ,&quot;r&quot;); $contents=fread($fp,filesize($filename)); fclose($fp); $part2[&quot;type&quot;]=TYPEAPPLICATION; $part2[&quot;encoding&quot;]=ENCBINARY; $part2[&quot;subtype&quot;]=&quot;octet-stream&quot;; $part2[&quot;description&quot;]=basename($filename); $part2[&quot;contents.data&quot;]=$contents; $part3[&quot;type&quot;]=TYPETEXT; $part3[&quot;subtype&quot;]=&quot;plain&quot;; $part3[&quot;description&quot;]=&quot;description3&quot;; $part3[&quot;contents.data&quot;]=&quot;contents.data3\n\n\n\t&quot;; $body[1]=$part1; $body[2]=$part2; $body[3]=$part3; echo nl2br(imap_mail_compose($envelope,$body));?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_mail_compose() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_mail_copy</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_mail_move</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_mime_header_decode() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_mime_header_decode() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an IMAP stream on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_open() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_open() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_ping</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the stream is still alive, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_rfc822_parse_adrlist() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_rfc822_parse_adrlist() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_rfc822_write_address() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_rfc822_write_address() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_setflag_full() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_setflag_full() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_set_quota</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets an upper limit quota on a per mailbox basis.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_set_quota() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_set_quota() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. imap_status() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. imap_status() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_subscribe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subscribe to a new mailbox.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_unsubscribe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unsubscribe from a specified mailbox.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.15, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_utf7_decode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Decodes modified UTF-7 text into 8bit data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.15, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>imap_utf7_encode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converts 8bit data to modified UTF-7 text.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string containing a string representation of all the array elements in the same order, with the glue string between each element.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string contendo os elementos da matriz na mesma ordem com uma ligação entre cada elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. implode() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. implode() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For consistency with explode(), however, it may be less confusing to use the documented order of arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para consistência com explode(), entretando, ela pode ser menos confusa por usar a ordem documentada dos argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also explode(), and split().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também explode(), e split().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>import_request_variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Imports GET / POST / Cookie variables into the global scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>in_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches haystack for needle and returns TRUE if it is found in the array, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the third parameter strict is set to TRUE then the in_array() function will also check the types of the needle in the haystack.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Procura em haystack pelo valor needle e retorna TRUE se este valor for encontrado no array, e FALSE em caso contrário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If needle is a string, the comparison is done in a case-sensitive manner.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o terceiro parâmetro strict for TRUE então in_array() também irá checar os tipos de needle em haystack.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP versions before 4.2.0 needle was not allowed to be an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. in_array() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de in_array()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$os = array (&quot;Mac&quot;, &quot;NT&quot;, &quot;Irix&quot;, &quot;Linux&quot;); if (in_array (&quot;Irix&quot;, $os)) {print &quot;Got Irix&quot;;} if (in_array (&quot;mac&quot;, $os)) {print &quot;Got mac&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$os = array (&quot;Mac&quot;, &quot;NT&quot;, &quot;Irix&quot;, &quot;Linux&quot;); if (in_array (&quot;Irix&quot;, $os)) {print &quot;Tem Irix&quot;;} if (in_array (&quot;mac&quot;, $os)) {print &quot;Tem mac&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second condition fails because in_array() is case-sensitive, so the program above will display:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então, a saída seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Got Irix</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tem Irix</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. in_array() with strict example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. in_array() com checagem de tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = array( &apos;1.10&apos;, 12.4, 1.13); if (in_array(&apos;12.4&apos;, $a, TRUE)) echo &quot;&apos;12.4 &apos;found with strict check\n&quot;; if (in_array(1.13, $a, TRUE)) echo &quot;1.13 found with strict check\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $a = array( &apos;1.10&apos;, 12.4, 1.13); if (in_array(&apos;12.4&apos;, $a, TRUE)) echo &quot;&apos;12.4 &apos;encontrado com checagem de tipo\n&quot;; if (in_array(1.13, $a, TRUE)) echo &quot;1.13 encontrado com checagem de tipo\n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will display:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1.13 found with strict check</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>1.13 encontrado com checagem de tipo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. in_array() with an array as needle</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de in_array() passando um array para needle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = array( array(&apos;p&apos;, &apos;h&apos;), array(&apos;p&apos;, &apos;r&apos;), &apos;o&apos;); if (in_array(array (&apos;p&apos;, &apos;h&apos;), $a)) echo &quot;&apos;ph &apos;was found\n&quot;; if (in_array(array (&apos;f&apos;, &apos;i&apos;), $a)) echo &quot;&apos;fi&apos; was found\n&quot;; if (in_array(&apos;o&apos;, $a)) echo &quot;&apos;o &apos;was found\n&quot;;? / / This will output: &apos;ph&apos; was found&apos;o &apos;was found</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also array_search().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também array_search().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 12.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 12.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Control Structures</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>include()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The include() statement includes and evaluates the specified file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A instrução include() inclui e avalia o arquivo informado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The documentation below also applies to require().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A documentação a seguir se aplica também a require().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The two constructs are identical in every way except how they handle failure. include() produces a Warning while require() results in a Fatal Error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esses dois construtores são idênticos a exceção de como eles manipulam erros. include() produz um Warning enquanto require() produzirá um Fatal Error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, use require() if you want a missing file to halt processing of the page. include() does not behave this way, the script will continue regardless.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outras palavras, utilize require() se você deseja que um arquivo faltando interrompa o processamento da página. include() não se comporta da mesma maneira, permitindo que o script continue nessas situações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be sure to have an appropriate include_path setting as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em todo caso, vale a pena confirmar a configuração da diretiva include_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a file is included, the code it contains inherits the variable scope of the line on which the include occurs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando um arquivo é incluído, seu código entra no escopo de variável Quando um arquivo é incluído, seu código entra no escopo de variável da linha onde a inclusão ocorre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any variables available at that line in the calling file will be available within the called file, from that point forward.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer variável disponível da linha onde a chamada da inclusão ocorre estará disponível para o arquivo incluído, daquele ponto em diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 12-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic include() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos de include() s simples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>vars.php ?php $color = &apos;green&apos;; $fruit = &apos;apple&apos;;? test.php ?php echo &quot;A $color $fruit&quot;; / / A include&apos;vars.php&apos;; echo &quot;A $color $fruit&quot;; / / A green apple?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>variaveis.php ?php $cor = &apos;verde&apos;; $fruta = &apos;maçã&apos;;? teste.php ?php echo &quot;Uma $fruta $cor&quot;; / / Uma include &apos;vars.php&apos;; echo &quot;Uma $fruta $cor&quot;; / / Uma maçã verde?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the include occurs inside a function within the calling file, then all of the code contained in the called file will behave as though it had been defined inside that function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o include ocorre dentro de uma função do arquivo principal, então todo o código incluído será executado como se ele tivesse sido definido dentro daquela função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, it will follow the variable scope of that function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Da mesma forma, ele seguirá o escopo de variáveis da função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 12-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Including within functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Incluindo dentro de funções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function foo() {global $color; include&apos;vars.php&apos;; echo &quot;A $color $fruit&quot;;} / * vars.php is in the scope of foo() so * * $fruit is NOT available outside of this * * scope. $color is because we declared it * * as global. * / foo(); / / A green apple echo &quot;A $color $fruit&quot;; / / A green?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function foo() {global $cor; include &apos;variaveis.php&apos;; echo &quot;Uma $fruta $cor&quot;;} / * variaveis.php está no escopo de foo(), * .* então $fruta NÃO está disponível fora de * .* seu escopo. $cor estará porque ela foi * .* declarada como global * / foo(); / / Uma maçã verde echo &quot;A $fruta $cor&quot;; / / Uma maçã?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a file is included, parsing drops out of PHP mode and into HTML mode at the beginning of the target file, and resumes again at the end.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando um arquivo é incluído, o interpretador sai do modo PHP e entra no modo HTML (no começo do arquivo incluído), e alterna novamente no seu fim.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For this reason, any code inside the target file which should be executed as PHP code must be enclosed within valid PHP start and end tags.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por isso, qualquer código dentro do arquivo incluído que precisa ser executado como código PHP tem de ser delimitado por tags válidas de abertura e fechamento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If &quot;URL fopen wrappers&quot; are enabled in PHP (which they are in the default configuration), you can specify the file to be included using an URL (via HTTP or other supported wrapper - see Appendix I for a list of protocols) instead of a local pathname.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se &quot;URL fopen wrappers&quot; estão ativas no PHP (normalmente na configuração default), você pode especificar um arquivo utilizando uma URL (via HTTP ou qualquer outro wrapper suportado -- - veja Apêndice I para uma lista dos protocolos) em vez de uma caminho local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the target server interprets the target file as PHP code, variables may be passed to the included file using an URL request string as used with HTTP GET.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o servidor apontado interpreta o arquivo informado como código PHP, variáveis podem ser passadas ao arquivo incluído na URL de requisição como num HTTP GET.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is not strictly speaking the same thing as including the file and having it inherit the parent file&apos; s variable scope; the script is actually being run on the remote server and the result is then being included into the local script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto não é necessariamente a mesma coisa que incluir o arquivo e compartilhar o escopo de variável do arquivo principal: o script será executado no servidor remoto e apenas seu resultado será incluído no script local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-5. include() through HTTP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 12-5. include() através de HTTP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * This example assumes that www.example.com is configured to parse .php * * files and not .txt files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Este exemplo assume que www.exemplo.com está configurado para interpretar * * arquivos .php mas não .txt.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, &apos;Works&apos; here means that the variables * * $foo and $bar are available within the included file. * / / / Won&apos;t work; file.txt wasn&apos;t handled by www.example.com as PHP include&apos;http: / /www.example.com / file.txt?foo=1 bar=2&apos;; / / Won&apos;t work; looks for a file named&apos;file.php?foo=1 bar=2 &apos;on the / / local filesystem. include&apos;file.php?foo=1 bar=2&apos;; / / Works. include&apos;http: / /www.example.com / file.php?foo=1 bar=2&apos;; $foo = 1; $bar = 2; include&apos;file.txt&apos;; / / Works. include&apos;file.php&apos;; / / Works.?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além, &apos;Funciona&apos; aqui significa que as * * variáveis $foo e $bar estão disponíveis no arquivo incluído * / / / Não funciona: arquivos txt não são manipulados em www.example.com como PHP include &apos;http: / /www.exemplo.com / arquivo.txt?foo=1 bar=2&apos;; / / Não funciona: procura por um arquivo chamado &apos;arquivo.php?foo=1 bar=2 &apos;no / / sistemas de arquivo local. include &apos;arquivo.php?foo=1 bar=2&apos;; / / Funciona. include &apos;http: / /www.exemplo.com / arquivo.php?foo=1 bar=2&apos;; $foo = 1; $bar = 2; include &apos;arquivo.txt&apos;; / / Funciona. include &apos;arquivo.php&apos;; / / Funciona.?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because include() and require() are special language constructs, you must enclose them within a statement block if it&apos;s inside a conditional block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por serem include() e require() dois construtores de linguagem especiais, você precisa delimitá-los como um bloco de instruções quando utilizados dentro de instruções condicionais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-6. include() and conditional blocks</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 12-6. include() e instruções condicionais</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / This is WRONG and will not work as desired. if ($condition) include $file; else include $other; / / This is CORRECT. if ($condition) {include $file;} else {include $other;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Isto está errado e não funcionará como desejado if ($condition) include $arquivo; else include $outro; / / E este está correto if ($condition) {include $arquivo;} else {include $outro;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is possible to execute a return() It is possible to execute a return() statement inside an included file in order to terminate processing in that file and return to the script which called it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Também é possível executar uma instrução return() Também é possível executar uma instrução return() dentro de um arquivo incluído de maneira a finalizar o processamento daquele arquivo e retornar para o script que o chamou.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, it &apos;s possible to return values from included files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Também é possível retornar valores de arquivos incluídos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can take the value of the include call as you would a normal function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode pegar o valor de retorno de um include como faria com uma função normal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, the return may not appear inside a block unless it&apos; s a function block, in which case the return() applies to that function and not the whole file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, o return não pode aparecer dento de um bloco a não ser que ele seja um bloco de função, e nesse caso return() se aplica apenas para a função e não para todo o arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-7. include() and the return() statement</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instruções include() e return()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>return.php ?php $var = &apos;PHP&apos;; return $var;? noreturn.php ?php $var = &apos;PHP&apos;;? testreturns.php ?php $foo = include&apos;return.php&apos;; echo $foo; / / prints&apos;PHP&apos; $bar = include&apos;noreturn.php&apos;; echo $bar; / / prints 1?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>return.php ?php $var = &apos;PHP&apos;; return $var;? noreturn.php ?php $var = &apos;PHP&apos;;? testreturns.php ?php $foo = include &apos;return.php&apos;; echo $foo; / / imprime &apos;PHP&apos; $bar = include &apos;noreturn.php&apos;; echo $bar; / / imprime 1?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$bar is the value 1 because the include was successful.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$bar assimila o valor 1 porque a inclusão foi realizada com sucesso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice the difference between the above examples.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifique a diferença entre os exemplo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first uses return() within the included file while the other does not.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro utiliza return() dentro do arquivo incluído enquanto que o outro não.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A few other ways to &quot;include&quot; files into variables are with fopen(), file() or by using include() along with Output Control Functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há outras maneiras de &quot;incluir&quot; arquivos dentro de variáveis, com fopen(), file() ou utilizando include() através das Funções de Controle de Output.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also require(), require_once(), include_once(), readfile(), virtual(), and include_path.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: require(), require_once(), include_once(), readfile(), virtual() e include_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>include_once()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The include_once() statement includes and evaluates the specified file during the execution of the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A instrução include_once() inclui e avalia o arquivo especificado durante a execução de um script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a behavior similar to the include() This is a behavior similar to the include() statement, with the only difference being that if the code from a file has already been included, it will not be included again.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Seu comportamento é similar a instrução include(), a não ser que o arquivo informado já tenha sido incluído, não refazendo a operação novamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As the name suggests, it will be included just once.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como o nome sugere, ele será incluído apenas uma vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>include_once() should be used in cases where the same file might be included and evaluated more than once during a particular execution of a script, and you want to be sure that it is included exactly once to avoid problems with function redefinitions, variable value reassignments, etc.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>include_once() pode ser utilizado nos casos em que o mesmo arquivo pode acabar sendo incluído mais de uma vez durante a execução de um script em particular, quando na verdade ele só pode ser incluído apenas uma para evitar problemas com redefinições de funções, alterações nos valores de variáveis, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more examples on using require_once() and include_once(), look at the PEAR code included in the latest PHP source code distributions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações utilizando require_once() e include_once(), veja o código do PEAR incluído nas últimas distribuições do código fonte do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be aware, that the behaviour of include_once() and require_once() may not be what you expect on a non case sensitive operating system (such as Windows).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esteja avisado que o comportamento de include_once() e require_once() pode não ser o que você espera em um sistema operacional insensitivo ao caso (como o Windows).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-9. include_once() is case sensitive</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 12-9. include_once() é sensitivo ao caso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>include_once( &quot;a.php&quot;); / / this will include a.php include_once(&quot;A.php&quot;); / / this will include a.php again on Windows!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>include_once( &quot;a.php&quot;); / / isto irá incluir a.php include_once(&quot;A.php&quot;); / / isto irá incluir a.php de novo no Windows!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also include(), require(), require_once(), get_required_files(), get_included_files(), readfile(), and virtual().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: include(), require(), require_once(), get_required_files(), get_included_files(), readfile() e virtual().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_autocommit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_commit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_connect() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ingres_connect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. ingres_connect() example using default link</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. ingres_connect() example using default link</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_fetch_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_fetch_array() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ingres_fetch_array() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_fetch_object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_fetch_object() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ingres_fetch_object() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_fetch_row</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_fetch_row() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ingres_fetch_row() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_field_length</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_field_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_field_nullable</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_field_precision</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_field_scale</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_field_type</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_num_fields</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_num_rows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_pconnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_query</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ingres_query() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ingres_query() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ingres_rollback</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ini_set</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the value of the given configuration option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ip2long() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ip2long() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ircg_fetch_error_msg() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ircg_fetch_error_msg() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ircg_html_encode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Encodes a HTML string html_string for output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ircg_lookup_format_messages</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Check for the existence of the format message set name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE if the object is of this class or has this class as one of its parents, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna TRUE se o objeto é desta classe ou tem esta classe como uma de suas classes pai, caso contrário retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class(), get_parent_class(), and is_subclass_of().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também get_class(), get_parent_class(), e is_subclass_of().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if var is an array, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_bool</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the var parameter is a boolean.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_dir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the filename exists and is a directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If filename is a relative filename, it will be checked relative to the current working directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se filename for um caminho relativo, o mesmo será checado relativo ao diretório atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os resultados desta função são guardados em cache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja clearstatcache() para mais detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server&apos;s filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O diretório a ser examinado tem que ser acessível pelo filesystem do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chdir(), dir, opendir(), is_file() and is_link().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também chdir(), dir, opendir(), is_file() and is_link().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of is_float().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_double - - Alias of is_float()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_executable</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the filename exists and is executable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The results of this function are cached.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se no nomedoarquivo existe e é executável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See clearstatcache() for more details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os resultados desta função são guardados em cache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server&apos;s filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessivel pelo filesystem do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not available on Win32.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não está disponível no Win32.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_file() and is_link().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_file() e is_link().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the filename exists and is a regular file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se o nome do nomedoarquivo existe e é um arquivo comum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server&apos;s filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não funciona em arquivos remotos O arquivo a ser examinado precisa ser acessível pelo sistema de arquivos do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_dir() and is_link().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_dir() e is_link().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if val is a legal finite number within the allowed range for a PHP float on this platform.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se val é número finito legal dentro dos limites permitidos para um número float PHP nesta plataforma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if val is infinite (positive or negative), like the result of log(0) or any value too big to fit into a float on this platform.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se val é infinito (positivo ou negativo), como por exemplo o resultado de log(0) ou qualquer outro valor muito grande para caber num float desta plataforma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of is_int().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_integer - - Alias of is_int()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the filename exists and is a symbolic link.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se o nomedoarquivo existe e é um link simbólico (symbolic link).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_dir(), is_file(), and readlink().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_dir(), is_file() e readlink().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of is_int().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_long - - Alias of is_int()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if val is&apos; not a number&apos;, like the result of acos(1.01).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retona TRUE se val &apos;não for um número&apos;, como o resultado de acos(1.01).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_null</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if var is null, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if var is an object, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_readable</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the filename exists and is readable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Keep in mind that PHP may be accessing the file as the user id that the web server runs as (often&apos;nobody&apos;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lembre-se que o PHP deve estar acessando o arquivo como o mesmo usuário que o servidor de web roda (frequentemente &apos;nobody&apos;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Safe mode limitations are not taken into account.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Limitações do safemode não são levadas em consideração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_writable().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_writable().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of is_float().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_real - - Alias of is_float()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>isset</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if var exists; FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if var is a string, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE if the object object, belongs to a class which is a subclass of class_name, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna TRUE se o objeto object, pertence a uma classe que é uma sub-classe de class_name, caso contrário retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_class(), get_parent_class() and is_a().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também get_class(), get_parent_class() e is_a().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.17, PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_uploaded_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the file named by filename was uploaded via HTTP POST.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful to help ensure that a malicious user hasn &apos;t tried to trick the script into working on files upon which it should not be working--for instance, / etc / passwd.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é útil para ter certeza que um usuário malicioso, não está tentando confundir o script em trabalhar em arquivos que não deve estar trabalhando -- - por exemplo, / etc / passwd.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This sort of check is especially important if there is any chance that anything done with uploaded files could reveal their contents to the user, or even to other users on the same system.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este tipo de confirmação é importante principalmente se existe alguma chance que qualquer coisa feita com os arquivos carregados poderiam revelar o seu conteúdo para o usuário, ou mesmo para outros usuários no mesmo sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is_uploaded_file() is available only in versions of PHP 3 after PHP 3.0.16, and in versions of PHP 4 after 4.0.2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_uploaded_file() está disponível somente em versões do PHP 3 depois da 3.0.16 e em versões do PHP 4 posteriores a 4.0.2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are stuck using an earlier version, you can use the following function to help protect yourself:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você ainda está utilizando uma versão anterior, você pode utilizar o seguinte código para se proteger:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example will not work in versions of PHP 4 after 4.0.2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo seguinte não funcionará em versões do PHP posteriores a 4.0.2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It depends on internal functionality of PHP which changed after that version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto depende de uma funcionalidade interna do PHP que mudou depois dessa versão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * Userland test for uploaded file. * / function is_uploaded_file( $filename) {if (!$tmp_file = get_cfg_var(&apos;upload_tmp_dir&apos;)) {$tmp_file = dirname(tempnam(&apos;&apos;, &apos;&apos;));} $tmp_file .= &apos;/&apos;. basename($filename); / * User might have trailing slash in php.ini... * / return (ereg_replace(&apos; / +&apos;, &apos;/&apos;, $tmp_file) == $filename);} / * This is how to use it, since you also don&apos;t have * move_uploaded_file() in these older versions: * / if (is_uploaded_file($HTTP_POST_FILES[&apos;userfile&apos;])) {copy($HTTP_POST_FILES[&apos;userfile&apos;], &quot;/ place / to / put / uploaded / file&quot;);} else {echo &quot;Possible file upload attack: filename &apos;$HTTP_POST_FILES[userfile]&apos; .&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Teste de arquivo carregado pelo usuário * / function is_uploaded_file( $filename) {if (!$tmp_file = get_cfg_var(&apos;upload_tmp_dir&apos;)) {$tmp_file = dirname(tempnam(&apos;&apos;, &apos;&apos;));} $tmp_file .= &apos;/&apos;. basename($filename); / * Pode haver uma barra no final do php.ini... * / return (ereg_replace(&apos; / +&apos;, &apos;/&apos;, $tmp_file) == $filename);} / * Utilize isto se por acaso você não tiver * move_uploaded_file() em versões antigas: * / if (is_uploaded_file($HTTP_POST_FILES[&apos;userfile&apos;])) {copy($HTTP_POST_FILES[&apos;userfile&apos;], &quot;/ place / to / put / uploaded / file&quot;);} else {echo &quot;Possível ataque de carregamento de arquivo: filename &apos;$HTTP_POST_FILES[userfile]&apos; .&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also move_uploaded_file(), and the section Handling file uploads for a simple usage example.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também move_uploaded_file() e a seção Manipulando upload de arquivos para um exemplo de utilização desta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the filename exists and is writable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se o nomedoarquivo existe e pode ser escrito para.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The filename argument may be a directory name allowing you to check if a directory is writeable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento nomedoarquivo pode ser um nome de diretório, deixando você saber se o diretório pode ser escrito para (writeable).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will not work on remote files; the file to be examined must be accessible via the server&apos;s filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não funcionará em arquivos remotos; o arquivo a ser examinado tem que ser acessível pelo filesystem do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_readable().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_readable().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an alias for is_writable()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma função sinônima (alias) para is_writable()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>java_last_exception_clear</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>java_last_exception_get</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>JDDayOfWeek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the day of the week.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>join() is an alias to implode(), and is identical in every way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>join() é um alias para implode(), e é indêntica em tudo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also explode(), implode(), and split().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também explode(), implode(), e split().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>JulianToJD</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid Range for Julian Calendar 4713 B.C. to 9999 A.D.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Caution</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cuidado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>key() returns the index element of the current array position.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>key() retorna a chave da posição corrente de um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current() and next().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também current() e next().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorts an array by key in reverse order, maintaining key to data correlations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ordena um array pelas chaves em ordem descrescente, mantendo a correlação entre entre as chaves e os valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful mainly for associative arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função é bastante útil em arrays associativos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. krsort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de krsort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array (&quot;d&quot;= &quot;lemon&quot;, &quot;a&quot;= &quot;orange&quot;, &quot;b&quot;= &quot;banana&quot;, &quot;c&quot;= &quot;apple&quot;); krsort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo &quot;$key = $val\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$frutas = array (&quot;d &quot;= &quot;limao&quot;, &quot;a&quot; = &quot;laranja&quot;, &quot;b &quot;= &quot;banana&quot;, &quot;c&quot; = &quot;melancia&quot;); krsort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo &quot;$chave = $valor\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída deste programa seria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>d = lemon c = apple b = banana a = orange</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>d = limao c = melancia b = banana a = laranja</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode alterar o comportamento da ordenação utilizando o parâmetro opcional sort_flags, para mais detalhes veja sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asort(), arsort(), ksort(), sort(), natsort(), and rsort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também asort(), arsort(), ksort() sort(), natsort() e rsort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorts an array by key, maintaining key to data correlations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ordena um array pelas chaves, mantendo a correlação entre as chaves e os valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful mainly for associative arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função é bastante útil principalmente para arrays associativos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ksort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de ksort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array (&quot;d&quot;= &quot;lemon&quot;, &quot;a&quot;= &quot;orange&quot;, &quot;b&quot;= &quot;banana&quot;, &quot;c&quot;= &quot;apple&quot;); ksort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo &quot;$key = $val\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$frutas = array (&quot;d &quot;= &quot;limao&quot;, &quot;a&quot; = &quot;laranja&quot;, &quot;b &quot;= &quot;banana&quot;, &quot;c&quot; = &quot;melancia&quot;); ksort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo &quot;$chave = $valor\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O programa acima mostraria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>a = orange b = banana c = apple d = lemon</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>a = laranja b = banana c = melancia d = limao</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode modificar o comportamento da ordenação através do parâmetro opcional sort_flags, para mais detalhes veja sort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asort(), arsort(), krsort(), uksort(), sort(), natsort(), and rsort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também asort(), arsort(), krsort(), uksort(), sort(), natsort() e rsort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter was added in PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo parâmetro foi adicionado a partir do PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lcg_value() returns a pseudo random number in the range of (0, 1).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>lcg_value() retorna um pseudo número aleatório nos limites de (0, 1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function combines two CGs with periods of 2^31 - 85 and 2^31 - 249.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função combina duas congruências geradas, com períodos de 2^31 - 85 e 2^31 - 249.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The period of this function is equal to the product of both primes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O período desta função é igual ao produto de ambos os primos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_8859_to_t61</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_add</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The ldap_add() function is used to add entries in the LDAP directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_close() closes the link to the LDAP server that&apos;s associated with the specified link_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_compare</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if value matches otherwise returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_count_entries</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns number of entries in the result or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_delete</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_delete() function delete a particular entry in LDAP directory specified by dn.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_err2str</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns string error message.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.12, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_first_attribute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the first attribute in the entry on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_first_reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_free_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_free_result() frees up the memory allocated internally to store the result and pointed by the result_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_get_dn</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the DN of the result entry and FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_get_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets retval to the value of the specified option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The parameter option The parameter option can be one of:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_get_values_len</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array of values for the attribute on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_list</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a search result identifier or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_mod_add</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function adds attribute( s) to the specified dn.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_mod_del</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function removes attribute( s) from the specified dn.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_modify</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_modify() function is used to modify the existing entries in the LDAP directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_mod_replace</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function replaces attribute( s) from the specified dn.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_next_reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_parse_reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_parse_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_read</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_rename</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The entry specified by dn is renamed / moved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_search</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_set_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the value of the specified option to be newval.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The parameter option The parameter option can be one of:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas. on error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_set_rebind_proc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_t61_to_8859</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ldap_unbind</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ldap_unbind() function unbinds from the LDAP directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mail functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções de E-Mail</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the Levenshtein-Distance between the two argument strings or -1, if one of the argument strings is longer than the limit of 255 characters (255 should be more than enough for name or dictionary comparison, and nobody serious would be doing genetic analysis with PHP).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a Levenshtein-Distance entre duas strings argumentos ou -1, se nenhuma das strings argumentos é mais longa que o o limite de 255 caracteres (255 seria mais do que o bastante para o nome ou comparação de dicionário, e ninguém sério estaria fazendo análises genéticas com PHP).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Levenshtein distance is defined as the minimal number of characters you have to replace, insert or delete to transform str1 into str2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A distância Levenshtein é definida como o número mínimo de caracteres que você tem para substituir, inserir ou apagar para transformar str1 dentro de str2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The complexity of the algorithm is O( m*n), where n and m are the length of str1 and str2 (rather good when compared to similar_text(), which is O(max(n,m)**3), but still expensive).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A complexidade do algoritmo é O( m*n), onde n e m são o comprimento da str1 e str2 (rather good when compared to similar_text(), which is O(max(n,m)**3), but still expensive).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In its simplest form the function will take only the two strings as parameter and will calculate just the number of insert, replace and delete operations needed to transform str1 into str2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na sua forma mais simples a função pegará apenas as duas strings como parâmetros e calculará apenas o número de operações de inserção, substituição e deletação necessárias para transformar str1 em str2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A second variant will take three additional parameters that define the cost of insert, replace and delete operations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma segunda variante pegará três parâmetros adicionais que definem o custo das operações de inserção, substituição e deletação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is more general and adaptive than variant one, but not as efficient.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é a mais geral e adapatável do que a variante um, mas não tão eficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The third variant (which is not implemented yet) will be the most general and adaptive, but also the slowest alternative.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A terceira variante (que ainda não é implementada) será a mais geral e adaptável, mas também a alternativa mais lenta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It will call a user-supplied function that will determine the cost for every possible operation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela chamará uma função de usuário fornecida que determinará o custo para cada possível operação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The user-supplied function will be called with the following arguments:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função de usuário fornecida( The user-supplied function) será chamada com os seguintes argumentos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>operation to apply: &apos;I&apos;, &apos;R&apos; or&apos;D &apos;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>operation to apply: &apos;I&apos;, &apos;R&apos; ou &apos;D &apos;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also soundex(), similar_text(), and metaphone().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também soundex(), similar_text(), e metaphone().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>link</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>link() creates a hard link.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the symlink() to create soft links, and readlink() along with linkinfo().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também symlink() para criar soft links, e readlink() assim como linkinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>linkinfo() returns the st_dev field of the UNIX C stat structure returned by the lstat system call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>linkinfo() retorna o campo st_dev da structure em C do UNIX retornado pela chamada do sistema (system call) lstat.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is used to verify if a link (pointed to by path) really exists (using the same method as the S_ISLNK macro defined in stat.h).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é usada para verificar se um link (apontado por path) realmente existe (usando o mesmo metodo que a macro S_ISLNK definida em stat.h).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns 0 or FALSE in case of error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna 0 ou FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also symlink(), link(), and readlink().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também symlink(), link(), e readlink().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like array(), this is not really a function, but a language construct. list() is used to assign a list of variables in one operation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim como array(), não é exatamente uma função, e sim uma construção da própria linguagem. list() é usada para criar uma lista de variáveis em apenas um operação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. list() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de list()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $info = array( &apos;coffee&apos;, &apos;brown&apos;, &apos;caffeine&apos;); / / Listing all the variables list($drink, $color, $power) = $info; print &quot;$drink is $color and $power makes it special.\n&quot;; / / Listing some of them list($drink,, $power) = $info; print &quot;$drink has $power.\n&quot;; / / Or let&apos;s skip to only the third one list (,, $power) = $info; print &quot;I need $power!\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $info = array( &apos;Café&apos;, &apos;marrom&apos;, &apos;cafeína&apos;); / / Listando todas as variáveis list($bebida, $cor, $substancia) = $info; print &quot;$bebida is $cor e $substancia a faz especial.\n&quot;; / / Listando apenas alguns deles list($bebida,, $substanciar) = $info; print &quot;$bebida tem $substancia.\n&quot;; / / Ou ignoramos os primeiros valores para conseguir apenas o último list (,, $substancia) = $info; print &quot;I need $substancia!\n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example use of list()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de list()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>table tr th Employee name / th th Salary / th / tr ?php $result = mysql_query (&quot;SELECT id, name, salary FROM employees&quot;,$conn); while (list ($id, $name, $salary) = mysql_fetch_row ($result)) {print (&quot;tr \n&quot;.&quot; td a href=\&quot;info.php?id=$id\ &quot;$name / a / td \n&quot;.&quot; td $salary / td \n&quot;. &quot;/ tr \n&quot;);}? / table</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>table tr th Lista de empregados / th th Salário / th / tr ?php $result = mysql_query (&quot;SELECT id, nome, salario FROM empregados&quot;, $conn); while (list ($id, $nome, $salario) = mysql_fetch_row ($result)) {print (&quot;tr \n&quot;.&quot; td a href=\&quot;info.php?id=$id\ &quot;$nome / a / td \n&quot;.&quot; td $salario / td \n&quot;. &quot;/ tr \n&quot;);}? / table</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>list() assigns the values starting with the right-most parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função list() assinala os valores começando pelos parâmetros da direita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using plain variables, you don &apos;t have to worry about this.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está usando variáveis normais, então não precisa se preocupar com esse detalhe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But if you are using arrays with indices you usually expect the order of the indices in the array the same you wrote in the list() from left to right; which it isn&apos;t.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas se você está usando arrays com índices você normalmente iria esperar que a ordem dos índices no array fosse da esquerda para a direita, mas não é isso que acontece.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It &apos;s assigned in the reverse order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O índice é criado na ordem reversa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using list() with array indices</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando list() com índices de array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $info = array( &apos;coffee&apos;, &apos;brown&apos;, &apos;caffeine&apos;); list($a[0], $a[1], $a[2]) = $info; var_dump($a);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $info = array( &apos;café&apos;, &apos;marrom&apos;, &apos;cafeína&apos;); list($a[0], $a[1], $a[2]) = $info; var_dump($a);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array( 3) {[2]= string(8) &quot;caffeine &quot;[1]= string(5) &quot;brown&quot; [0]= string(6) &quot;coffee &quot;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array( 3) {[2]= string(8) &quot;cafeína &quot;[1]= string(5) &quot;marrom&quot; [0]= string(6) &quot;café &quot;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also each(), array() and extract().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também each(), array() e extract().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array containing localized numeric and monetary formatting information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma matriz associativa contendo numérico localizado e informação de formatação monetária.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>localeconv() returns data based upon the current locale as set by setlocale().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>localeconv() retorna dados baseados na localidade corrente definida por setlocale().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The associative array that is returned contains the following fields:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A matriz associativa que é retornada contém os seguintes campos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Decimal point character</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Caracter de ponto decimal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array containing numeric groupings</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Matriz contendo agrupamentos numéricos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Local currency symbol (i.e. $)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Simbolo da moeda local symbol (i.e. $)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Monetary decimal point character</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Caractere monetário de ponto decimal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Monetary thousands separator</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Separador monetário de mil</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array containing monetary groupings</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Matriz contendo agrupamentos monetários</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sign for positive values</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sinal para valores positivos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sign for negative values</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sinal para valores negativos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>International fractional digits</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dígitos de fração Internacionais</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Local fractional digits</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dígitos de fração locais</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if currency_symbol precedes a positive value, FALSE if it succeeds one</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>TRUE Se o simbolo da moeda precede um valor positivo, FALSE se eles sucede um.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if a space separates currency_symbol from a positive value, FALSE otherwise</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>TRUE Se um espaço separa o simbolo da moeda de um valor positivo, FALSE caso contrário</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if currency_symbol precedes a negative value, FALSE if it succeeds one</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>TRUE Se o simbolo de moeda precede um valor negativo, FALSE se ele sucede</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if a space separates currency_symbol from a negative value, FALSE otherwise</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>TRUE se um espaço separa o simbolo da moeda de um valor negativo, FALSE caso contrário</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parentheses surround the quantity and currency_symbol</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Parênteses na quantidade e simbolo da moeda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sign string precedes the quantity and currency_symbol</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string sinal precede a quantidade e o simbolo da moeda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sign string succeeds the quantity and currency_symbol</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string sinal sucede a quantidade e o simbolo da moeda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sign string immediately precedes the currency_symbol</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string sinal precede imediatamente o simbolo da moeda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sign string immediately succeeds the currency_symbol</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string sinal sucede imediatamente o simbolo da moeda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parentheses surround the quantity and currency_symbol</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Parentêses na quantidade e simbolo da moeda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The grouping fields contain arrays that define the way numbers should be grouped.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os campos de agrupamento contém matrizes que definem o modo de como os números seriam agrupados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the grouping field for the en_US locale, would contain a 2 item array with the values 3 and 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, o campo de agrupamento para a localidade en_US, conteria uma matriz de 2 itens com os valores 3 e 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The higher the index in the array, the farther left the grouping is.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O mais alto índice na matriz, mais distante da esquerda do agrupamento está.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an array element is equal to CHAR_MAX, no further grouping is done.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um elemento da matriz é igual a CHAR_MAX, até aqui nenhum agrupamento é feito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an array element is equal to 0, the previous element should be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um elemento de matriz é igual a 0, o prévio elemento seria usado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. localeconv() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. localeconv() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constant CHAR_MAX is also defined for the use mentioned above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A constante CHAR_MAX também está definida para o uso mencionado acima.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also setlocale().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também setlocale().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The localtime() function returns an array identical to that of the structure returned by the C function call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função localtime() retorna uma matriz idêntica àquela da estrutura retornada pela chamada de uma função em C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first argument to localtime() is the timestamp, if this is not given the current time is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro argumento para localtime() é o timestamp, se este não é dado, a hora atual é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second argument to the localtime() is the is_associative, if this is set to 0 or not supplied than the array is returned as a regular, numerically indexed array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo argumento para localtime() é o is_associative, se este é definido como 0 ou não fornecido então a matriz é retornada como uma matriz normal, matriz com indices numéricos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the argument is set to 1 then localtime() is an associative array containing all the different elements of the structure returned by the C function call to localtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o argumento é definido como 1 então localtime() é uma matriz associativa contendo todos os diferentes elementos da estrutura retornados pela chamada da função C para o localtime.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The names of the different keys of the associative array are as follows:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os nomes das diferentes chaves da matriz associativa são as seguintes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_sec&quot; - seconds</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_sec&quot; - segundos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_min&quot; - minutes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_min&quot; - minutos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_hour&quot; - hour</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_hour&quot; - hora</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_mday&quot; - day of the month</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_mday&quot; - dia do mês</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_mon&quot; - month of the year, starting with 0 for January</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_mon&quot; - mês do ano, começa com 0 para Janeiro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_year&quot; - Years since 1900</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_year&quot; - Anos desde 1900</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_wday&quot; - Day of the week</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_wday&quot; - Dia da semana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_yday&quot; - Day of the year</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_yday&quot; - Dia do ano</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;tm_isdst&quot; - Is daylight savings time in effect</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;tm_isdst&quot; - Está em horário de verão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the base-10 logarithm of arg.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o logaritmo na base 10 de arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>log1p</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>log</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The base parameter became available with PHP version 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As always you can calculate the logarithm in base b of a number n, but using the mathematical identity: log b (n) = log(n) / log(b), where log is the neperian (or natural) logarithm.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o logaritmo natural de arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>lstat</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gathers the statistics of the file or symbolic link named by filename.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is identical to the stat() function except that if the filename parameter is a symbolic link, the status of the symbolic link is returned, not the status of the file pointed to by the symbolic link.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é identica a stat() exceto que se o parametro nomedoarquivo é um link simbólico o status do link simbólico é retornado e não o status do arquivo apontando pelo link simbólico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array with the statistics of the file with the following elements:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um array com as estatísticas do arquivo com os seguintes elementos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>lstat() cannot be used on remote files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>lstat() não pode ser utilizado em arquivos remotos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ltrim</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second parameter was added in PHP 4.1.0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a string with whitespace stripped from the beginning of str.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo parâmetro foi adicionado no PHP 4.1.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without the second parameter, ltrim() will strip these characters:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna uma string com whitespace retirados do início de str.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;&quot; (ASCII 32 (0x20)), an ordinary space.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sem o segundo parâmetro, ltrim() retirará estes caracters:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;\t&quot; (ASCII 9 (0x09)), a tab.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;&quot; (ASCII 32 (0x20)), um espaço normal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;\n&quot; (ASCII 10 (0x0A)), a new line (line feed).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;\t&quot; (ASCII 9 (0x09)), uma tabela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;\x0B&quot; (ASCII 11 (0x0B)), a vertical tab.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;\0&quot; (ASCII 0 (0x00)), O NUL -byte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also specify the characters you want to strip, by means of the charlist You can also specify the characters you want to strip, by means of the charlist parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode também especificar os caracteres que você quer retirar, por meio do parâmetro charlist.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simply list all characters that you want to be stripped.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Simplesmente lista todos os caracteres que você quer que sejam retirados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With.. you can specify a range of characters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com.. você pode especificar um ordem de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Usage example of ltrim()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo do uso de ltrim()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also trim() and rtrim().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também trim() e rtrim().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mail() automatically mails the message specified in message to the receiver specified in to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mail() automaticamente envia a mensagem especificada em message para o destinatário especificado em to.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiple recipients can be specified by putting a comma between each address in to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Destinatários múltiplos podem podem ser especificados colocando uma vírgula entre cada endereço em to.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Email with attachments and special types of content can be sent using this function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Email com anexos e tipos de conteúdo especiais podem ser enviados usando esta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is accomplished via MIME-encoding - for more information, see this Zend article or the PEAR Mime Classes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é completada via MIME-encoding - para mais informações, veja Zend article or the PEAR Mime Classes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following RFC &apos;s may also be useful:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os seguintes RFC &apos;s pode ser úteis:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mail() returns TRUE if the mail was successfully accepted for delivery, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mail() retorna TRUE se o email enviado foi aceito para entrega, do contrário FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Windows implementation of mail() differs in many ways from the Unix implementation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A implentação do Windows de mail() difere bastante da implentação Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, it doesn&apos; t use a local binary for composing messages but only operates on direct sockets which means a MTA is needed listening on a network socket (which can either on the localhost or a remote machine).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Primeiro, ele não usa um binary local para compor mensagens mas apenas opera com sockets diretos o que significa que uma MTA é necessária prestando atenção num socket de rede (que pode ser ou o localhost ou uma máquina remota).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the custom headers like From:, Cc:, Bcc: and Date: are not interpreted by the MTA in the first place, but are parsed by PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Segundo, os cabeçalhos personalizados como From:, Cc:, Bcc: e Date: são not interpretados por MTA em primeiro lugar, mas são analizados pelo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4.3 only supported the Cc: header element (and was case-sensitive).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 4.3 somente elementos suportados Cc: elemento de cabeçalho (e foi caso-sensitivo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP = 4.3 supports all the mentioned header elements and is no longer case-sensitive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP = 4.3 suporta todos os elementos de cabeçalho suportados e não distante caso-sensitivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sending mail.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Enviando email.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a fourth string argument is passed, this string is inserted at the end of the header.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se uma string como quarto argumento é passada, esta string é insrida no fim do cabeçalho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is typically used to add extra headers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É usado tipicamente para adicionar cabeçalhos extras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiple extra headers are separated with a carriage return and newline.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cabeçalhos extras múltiplos são separados com sinal de retorno e novalinha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must use \r\n to separate headers, although some Unix mail transfer agents may work with just a single newline (\n).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve utilizar \r\n para separar headers, embora alguns agentes de transferência de email Unix mail podem trabalhar com uma simples linha somente (\n).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sending mail with extra headers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Enviando email com cabeçalhos extras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The additional_parameters parameter can be used to pass an additional parameter to the program configured to use when sending mail using the sendmail_path The additional_parameters parameter can be used to pass an additional parameter to the program configured to use when sending mail using the sendmail_path configuration setting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, isto pode ser usado para definir o endereço do envelope remetente quando usar sendmail.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may need to add the user that your web server runs as to your sendmail configuration to prevent a &apos;X-Warning&apos; header from being added to the message when you set the envelope sender using this method.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode precisar adicionar o usuário que seu servidor web executa como para sua configuração de sendmail para evitar que um cabeçalho &apos;X-Warning&apos; seja adicionado á mensagem quando você define o envelope remetente usando este método.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sending mail with extra headers and setting an additional command line parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Enviando email com cabeçalhos extras e definindo um parâmetro de uma linha de comando adicional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This fifth parameter was added in PHP 4.0.5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O quinto parâmetro foi adicionado no PHP 4.0.5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also use simple string building techniques to build complex email messages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode utilizar strings simples utilizando técnicas para construir mensagens complexas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sending complex email.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Enviando email complexo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1.0\r\n&quot;; $headers .= &quot;Content-type: text / html; charset=iso-8859-1\r\n&quot;; / * additional headers * / $headers .= &quot;From:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/* recipients * / $to = &quot;Mary mary@example.com&quot;. &quot;,&quot;; / /note the comma $to .= &quot;Kelly kelly@example.com &quot;; / * subject * / $subject = &quot;Birthday Reminders for August&quot;; / * message * / $message = &apos;html head title Birthday Reminders for August / title / head body p Here are the birthdays upcoming in August! / p table tr th Person / th th Day / th th Month / th th Year / th / tr tr td Joe / td td 3rd / td td August / td td 1970 / td / tr tr td Sally / td td 17th / td td August / td td 1973 / td / tr / table / body / html&apos;; / * To send HTML mail, you can set the Content-type header. * / $headers = &quot;MIME-Version:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The to The to parameter cannot be an address in the form of &quot;Something someone@example.com&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also imap_mail().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Certifique-se que você não tem nenhum caractere novalinha em to ou subject, ou o email não será enviado corretamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_determine_best_xfer_encoding</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_create</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_extract_part_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_extract_part</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_free</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_get_part_data</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_get_part</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_get_structure</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_parse_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_msg_parse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_rfc822_parse_addresses</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.1.2 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_stream_encode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mailparse_uudecode_all</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mathematical Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Matemática e Trigonometria</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>max</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max() returns the numerically highest of the parameter values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the first parameter is an array, max() returns the highest value in that array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>max() retorna o maior número dos parâmetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one or more of the values is a float, all the values will be treated as floats, and a float is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o primeiro parâmetro é um array, max() retorna o maior valor do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If none of the values is a float, all of them will be treated as integers, and an integer is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode comparar uma quantidade ilimitada de números.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also min().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum dos valores for float, todos serão tratados como inteiros, e um inteiro é retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_convert_case() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_convert_case() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_convert_encoding() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_convert_encoding() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_convert_kana() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_convert_kana() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_convert_variables() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_convert_variables() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. convmap example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. convmap example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_detect_encoding() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_detect_encoding() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. mb_detect_order() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. mb_detect_order() examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. mb_encode_numericentity() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. mb_encode_numericentity() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_eregi</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_eregi_replace</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_match</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_replace</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_search_getpos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_search_getregs</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_search</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_search_init</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_search_pos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_search_regs</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_ereg_search_setpos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_get_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_internal_encoding() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_internal_encoding() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_language</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mb_language() sets language.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_output_handler() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_output_handler() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_preferred_mime_string() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_preferred_mime_string() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_regex_encoding</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_regex_set_options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_send_mail</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mb_send_mail() sends email.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.3.0 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_split</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_strimwidth() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_strimwidth() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_strtolower() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_strtolower() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_strtoupper() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_strtoupper() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mb_strwidth</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mb_strwidth() returns width of string str.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_substitute_character() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_substitute_character() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mb_substr_count() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mb_substr_count() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcal_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an MCAL stream on success, FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcal_popen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcal_reopen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reopens an MCAL stream to a new calendar.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcrypt_create_iv</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcrypt_create_iv() is used to create an IV.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_create_iv() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_create_iv() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcrypt_enc_get_algorithms_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the name of the algorithm.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $td = mcrypt_module_open (MCRYPT_CAST_256, &apos;&apos;, MCRYPT_MODE_CFB, &apos;&apos;); echo mcrypt_enc_get_algorithms_name($td). &quot;\n&quot;; $td = mcrypt_module_open (&apos;cast-256&apos;,&apos;&apos;, MCRYPT_MODE_CFB, &apos;&apos;); echo mcrypt_enc_get_algorithms_name($td). &quot;\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_enc_get_algorithms_name() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcrypt_enc_get_modes_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns the name of the mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $td = mcrypt_module_open (MCRYPT_CAST_256, &apos;&apos;, MCRYPT_MODE_CFB, &apos;&apos;); echo mcrypt_enc_get_modes_name($td). &quot;\n&quot;; $td = mcrypt_module_open (&apos;cast-256&apos;,&apos;&apos;, &apos;ecb&apos;, &apos;&apos;); echo mcrypt_enc_get_modes_name($td). &quot;\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_enc_get_modes_name() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_enc_get_supported_key_sizes() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_enc_get_supported_key_sizes() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_encrypt() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_encrypt() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcrypt_generic</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function encrypts data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_get_block_size() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_get_block_size() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcrypt_get_cipher_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mcrypt_get_cipher_name() is used to get the name of the specified cipher.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_get_cipher_name() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_get_cipher_name() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_list_algorithms() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_list_algorithms() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_list_modes() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_list_modes() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mcrypt_module_open() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mcrypt_module_open() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcrypt_module_self_test</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function runs the self test on the algorithm specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_checkstatus</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_completeauthorizations</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_connectionerror</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_deleteresponse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_deletetrans</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_deleteusersetup</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_destroyconn</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_destroyengine</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_disableuser</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_getcellbynum</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_getcommadelimited</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_getuserparam</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_initusersetup</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_iscommadelimited</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_maxconntimeout</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_parsecommadelimited</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_preauthcompletion</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_responseparam</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_returnstatus</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_setblocking</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_setdropfile</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transactionauth</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transactionavs</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transactionbatch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transactioncv</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transactionid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transactionitem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transactionssent</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transactiontext</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_transinqueue</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_verifyconnection</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mcve_verifysslcert</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mhash Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mhash - Funções de hash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates the MD5 hash of the specified filename using the RSA Data Security, Inc. MD5 Message-Digest Algorithm</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Calcula o hash MD5 de um filename especificado usando o RSA Data Security, Inc. MD5 Message-Digest Algorithm</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function has the same purpose of the command line utility md5sum.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função tem o mesmo propósito da linha de comando md5sum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also md5() and crc32()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também md5() e crc32()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates the MD5 hash of str using the RSA Data Security, Inc. MD5 Message-Digest Algorithm</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Calcula o hash MD5 de str usando o RSA Data Security, Inc. MD5 Message-Digest Algorithm</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The hash is a 32-character hexadecimal number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O hash é um número hexadecimal caracter-32.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also crc32(), md5_file(), and sha1().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também crc32() e md5_file()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mdecrypt_generic</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function decrypts data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mdecrypt_generic() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mdecrypt_generic() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>metaphone</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates the metaphone key of str.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similar to soundex() metaphone creates the same key for similar sounding words.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Similar a soundex() metaphone cria a mesma key para palavras sonoras similares.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It&apos; s more accurate than soundex() It&apos;s more accurate than soundex() as it knows the basic rules of English pronunciation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela é mais precisa do que soundex() por ela conhecer as regras básicas da pronunciação inglesa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The metaphone generated keys are of variable length.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As metaphone keys geradas são de comprimentos variados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Metaphone was developed by Lawrence Philips lphilips@verity.com.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Metaphone foi desenvolvido por Lawrence Philips lphilips@verity.com.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is described in [&quot;Practical Algorithms for Programmers&quot;, Binstock Rex, Addison Wesley, 1995].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela é descrita em [&quot;Practical Algorithms for Programmers&quot;, Binstock Rex, Addison Wesley, 1995].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE if the method given by method_name has been defined for the given object, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorma TRUE se o método dado pelo method_name foi definido para o dado object, caso contrário FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_count() returns the highest available hash id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mhash_count() retorna a mais alta hash id disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hashes are numbered from 0 to this hash id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As hashes são numeradas de 0 até esta hash id.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Traversing all hashes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Listando todas as hashes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $nr = mhash_count(); for ($i = 0; $i = $nr; $i++) {echo sprintf (&quot;The blocksize of %s is %d\n&quot;, mhash_get_hash_name ($i), mhash_get_block_size ($i));}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $nr = mhash_count(); for ($i = 0; $i = $nr; $i++) {echo sprintf (&quot;O tamanho do bloco de %s é %d\n&quot;, mhash_get_hash_name ($i), mhash_get_block_size ($i));}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_get_block_size() is used to get the size of a block of the specified hash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mhash_get_block_size() é usada para obter o tamanho de um blobo da hash específicada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_get_block_size() takes one argument, the hash and returns the size in bytes or FALSE, if the hash does not exist.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mhash_get_block_size() recebe um argumento, a hash e retorna o tamanho em bytes ou FALSE, se o parametro hash não existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.9, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mhash_get_hash_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_get_hash_name() is used to get the name of the specified hash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash_get_hash_name() takes the hash id as an argument and returns the name of the hash or FALSE, if the hash does not exist.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mhash_get_hash_name() recebe a id da hash como um argumento e retorna o nome da hash ou FALSE, se a hash não existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mhash_get_hash_name() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo do mhash_get_hash_name()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example will print out:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo acima irá imprimir:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mhash() applies a hash function specified by hash to the data and returns the resulting hash (also called digest).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mhash() applica a função hash especificada por hash para o parametro data e retorna a hash resultante (também chamada de digest).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the key is specified it will return the resulting HMAC.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a key for especificada a função irá retornar o HMAC resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>HMAC is keyed hashing for message authentication, or simply a message digest that depends on the specified key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>HMAC é o hashing com chave (keyed) para autenticações de mensagens, ou simplesmente um digest de mensagens que depende na chave (key) específicada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not all algorithms supported in mhash can be used in HMAC mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nem todos os algorítmos suportados em mhash podem ser usados em modo HMAC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case of an error returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em caso de erro retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mhash_keygen_s2k</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That salt must be known when you check the keys, thus it is a good idea to append the key to it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Keep in mind that user supplied passwords are not really suitable to be used as keys in cryptographic algorithms, since users normally choose keys they can write on keyboard.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este é o algoritmo Salted S2K como especificado no documento OpenPGP (RFC 2440).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These passwords use only 6 to 7 bits per character (or less).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este salt tem que ser sabido quando você checar as suas chaves (keys), logo é uma boa ideia que a chave siga o salt.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is highly recommended to use some kind of tranformation (like this function) to the user supplied key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenha em mente que as senhas fornecidas pelos usuários não são boas para serem usadas como chaves em algoritmos criptográficos, pois usuários normalmente escolhem chaves que eles podem escrever no teclado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the string &quot;msec sec&quot; where sec is the current time measured in the number of seconds since the Unix Epoch (0:00:00 January 1, 1970 GMT), and msec is the microseconds part.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string &quot;msec sec&quot; onde sec é o tempo atual medido no número de segundos desde a Era Unix (0:00:00 January 1, 1970 GMT), e msec é a parte em microsegundos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is only available on operating systems that support the gettimeofday() system call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função está disponível unicamente em sistemas operacionais que suportam a chamada gettimeofday().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both portions of the string are returned in units of seconds.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ambas porções de string são retornadas em segundos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. microtime() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. microtime() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also time().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também time().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Microsoft SQL Server functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções Microsoft SQL Server</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ming_setcubicthreshold</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ming_useswfversion</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>min() returns the numerically lowest of the parameter values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>min() retorna o menor número dos parâmetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the first variant, you need at least two parameters and min() returns the lowest of these values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na primeira variante, você precisa pelo menos dois parâmetros, e min() retornará o menor desses valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can compare an unlimited number of values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode comparar um número ilimitado de valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one of the variables is undefined, min() will fail.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se uma das variáveis é indefinida, min() falhará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the second variant, min() returns the lowest value in numbers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na segunda variante, min() retorna o menor dos valores em numbers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one or more of the values is a float, all the values will be treated as floats, and a float is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um ou mais dos valores for um float, todos os valores serão tratados como floats, e um float será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If none of the values is a float, all of them will be treated as integer s, and an integer is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum dos valores é um float, todos eles serão tratados como inteiros, e um inteiro será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon failure, min() returns NULL and an error of level E_WARNING is generated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em caso de falha, min() retorna NULL e um erro nível E_WARNING é registrado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 4; $b = 9; $c = 3; $arr = array(99, 34, 11); / / You may want to implement your own error checking in / / case of failure (a variable may not be set) if (!$min_value = @min($a, $b, $c)) {echo &quot;Could not get min value, please try again .&quot;;} else {echo &quot;min value is $min_value&quot;;} print min($arr); / / 11?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $a = 4; $b = 9; $c = 3; $arr = array(99, 34, 11); / / Você pode querer implementar sua própria checagem / / no caso de falha (uma variável pode não existir) if (!$min_value = @min($a, $b, $c)) {echo &quot;Não pude obter o menor valor, tente novamente .&quot;;} else {echo &quot;O menor valor é $min_value&quot;;} print min($arr); / / Exibe 11?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also max().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também max().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mkdir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that you probably want to specify the mode as an octal number, which means it should have a leading zero.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenta criar o diretório pathname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que você provavelmente quer especificar o mode como um número octal, o que significa que ele deve ter o zero inicial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mode is 0777 by default, which means the widest possible access.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O mode é também modificado pela umaks atual, o que você pode mudar usando umask().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rmdir().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também rmdir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is a common error to mix these values up in a script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note a estranha ordem dos argumentos, que diferem da ordem dos argumentos em um chamada regular da UNIX mktime() e que não combina bem com si mesma para a omissão dos parâmetros da direita para a esquerda (veja abaixo). é um erro comum misturar estes valores acima em um script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the Unix timestamp corresponding to the arguments given.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o timestamp Unix correspondente para os argumentos dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This timestamp is a long integer containing the number of seconds between the Unix Epoch (January 1 1970) and the time specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este timestamp é um longo inteiro contendo o número de segundos entre a Era Unix (January 1 1970) e o tempo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguments may be left out in order from right to left; any arguments thus omitted will be set to the current value according to the local date and time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Argumentos podem ser omitidos da direita para esquerda; quaisquer argumentos assim omitidos serão definidos para o valor atual de acordo com a data e a hora local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>is_dst can be set to 1 if the time is during daylight savings time, 0 if it is not, or -1 (the default) if it is unknown whether the time is within daylight savings time or not.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>is_dst pode ser definido para 1 se está durante o horário de verão, 0 se não estiver, ou -1 (o padrão) se não se sabe se está em horário de verão ou não.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it &apos;s unknown, PHP tries to figure it out itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se é desconhecido, o PHP tenta calcular.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can cause unexpected (but not incorrect) results.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode causar resultados inesperados (mas não incorretos).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mktime() is useful for doing date arithmetic and validation, as it will automatically calculate the correct value for out-of-range input.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mktime() é útil para fazer data aritimética e validação, ela calculará automaticamente o valor correto para um receptor fora de linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, each of the following lines produces the string &quot;Jan-01-1998&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, cada uma das seguintes linhas produz a string &quot;Jan-01-1998&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mktime() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mktime() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The last day of any given month can be expressed as the &quot;0&quot; day of the next month, not the -1 day.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O último dia de qualquer mês pode ser expresso como o dia &quot;0&quot; do próximo mês, não o dia -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both of the following examples will produce the string &quot;The last day in Feb 2000 is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os seguintes exemplos produzirão a string &quot;The last day in Feb 2000 is:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Last day of next month</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ultimo dia do próximo mês</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Date with year, month and day equal to zero is considered illegal (otherwise it what be regarded as 30.11.1999, which would be strange behavior).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Data com ano, mês e dia igual a zero é considerado ilegal (senão ele é considerado como 30.11.1999, que poderia ser um comportamento estranho).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also date() and time().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também date() e time().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>money_format</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>money_format() returns a formatted version of number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. money_format() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. money_format() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function checks to ensure that the file designated by filename is a valid upload file (meaning that it was uploaded via PHP&apos;s HTTP POST upload mechanism).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função primeiro checa o arquivo informado nomedoarquivo é um arquivo válido uploadeado (significando que ele foi carregado pelo mecanismo do PHP de HTTP POST).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the file is valid, it will be moved to the filename given by destination.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo é válido, ele será movido para o nomedoarquivo dado pelo destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If filename is not a valid upload file, then no action will occur, and move_uploaded_file() will return FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nomedoarquivo não é um arquivo carregado válido, então não haverá nenhuma ação e move_uploaded_file() irá retornar FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If filename is a valid upload file, but cannot be moved for some reason, no action will occur, and move_uploaded_file() will return FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nomedoarquivo é um arquivo uploadeado válido e não pode ser movido por alguma razão, nenhuma ação irá ocorrer, e move_uploaded_file() irá retornar FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally, a warning will be issued.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Adicionalmente, um aviso será emitido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This sort of check is especially important if there is any chance that anything done with uploaded files could reveal their contents to the user, or even to other users on the same system.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este tipo de confirmação é importante principalmente se existe alguma chance que qualquer coisa feita com os arquivos carregados poderem revelar o seu conteúdo para o usuário, ou mesmo para outros usuários no mesmo sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o safe-mode está ativo, o PHP verifica se o( s) arquivo(s) e / ou diretório(s) que serão afetados por esta operação tem o mesmo UID (proprietário) do script que está sendo executado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is not unsafe because move_uploaded_file() only operates on files uploaded via PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto não é inseguro porque move_uploaded_file() somente opera sobre arquivos carregados pelo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the destination file already exists, it will be overwritten.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo destino já existir, então ele será sobrescrito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_uploaded_file(), and the section Handling file uploads for a simple usage example.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_uploaded_file() e a seção Manipulando o upload de arquivos para um exemplo de utilização desta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msession_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msession_destroy</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msession_disconnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msession_get_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msession_randstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msession_set_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msession_timeout</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success, FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_data_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_data_seek() moves the internal row pointer of the mSQL result associated with the specified query identifier to point to the specifyed row number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_drop_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_drop_db().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_dropdb - - Drop (delete) mSQL database</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_fetch_field</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object containing field information</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_field_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeks to the specified field offset.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_free_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msql_free_result() frees the memory associated with query_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_free_result()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_freeresult - - Free result memory</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_list_dbs().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_listdbs - - List mSQL databases on server</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_list_fields().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_listfields - - List result fields</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_list_tables().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_listtables - - List tables in an mSQL database</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. msql_query()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. msql_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See sql_regcase().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_regcase - - Make regular expression for case insensitive match</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_select_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See msql_select_db().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>msql_selectdb - - Select mSQL database</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. msql_tablename() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. msql_tablename() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_bind</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is currently not documented; only the argument list is available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mssql_execute(), mssql_free_statement() and mssql_init()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não está documentada, somente a lista de argumentos está disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_close() closes the link to a MS SQL Server database that&apos;s associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_close() fecha a conexão com o MS SQL Server que esta associado ao identificador de conexão(link_identifier) indicado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn &apos;t specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o identificador de conexão não é especificado, a ultima conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this isn&apos; t usually necessary, as non-persistent open links are automatically closed at the end of the script&apos;s execution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que isto não é usualmente necessário, já que conexões não persistentes são automaticamente fechadas ao final da execução do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_close() will not close persistent links generated by mssql_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_close() não irá fechar conexões persistentes geradas por mssql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_connect(), mssql_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_connect(), mssql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive MS SQL link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna: um identificador de link positivo com o servidor MS SQL se funcionar, ou FALSE se houver erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_connect() establishes a connection to a MS SQL server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_connect() estabelece uma conexão com um servidor MS SQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The servername argument has to be a valid servername that is defined in the &apos;interfaces&apos; file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento nomedoservidor tem que ser um nome de servidor que esteja definido no arquivo &apos;interfaces&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case a second call is made to mssql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No caso de uma segunda chamada for feita para mssql_connect() com os mesmos argumentos, não será criada uma nova conexão, mas ao invés, o identificador de conexão da conexão que já esta aberta será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The link to the server will be closed as soon as the execution of the script ends, unless it&apos; s closed earlier by explicitly calling mssql_close().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A conexão com o servidor será fechada assim que a execução do script terminar, a menos que seja fechada antes explicitamente por mssql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mssql_pconnect(), mssql_close().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mssql_pconnect(), mssql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_data_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_data_seek() moves the internal row pointer of the MS SQL result associated with the specified result identifier to point to the specified row number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_data_seek() move o ponteiro interno da linha do resultado indicado por result_identifier para o numero da linha especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The next call to mssql_fetch_row() would return that row.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A próxima chamada a mssql_fetch_row() irá retornar esta linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_data_seek().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_data_seek().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_execute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In that case use mssql_next_result() to shift through the results.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atenção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mssql_bind(), mssql_free_statement() and mssql_init()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não está documentada, somente a lista de argumentos está disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna: uma array que corresponde a linha, ou FALSE se não houver mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_fetch_array() is an extended version of mssql_fetch_row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_array() é uma versão estendida de mssql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alem de guardar os dados em uma matriz com índices numéricos, também guarda os dados em uma matriz associativa, usando os nomes dos campos como chave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An important thing to note is that using mssql_fetch_array() is NOT significantly slower than using mssql_fetch_row(), while it provides a significant added value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma coisa importante para notar é que usar mssql_fetch_array() NÃO é significativamente mais lento do que usar mssql_fetch_row(), enquanto que é mais fácil de usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For further details, also see mssql_fetch_row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores detalhes veja também mssql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_assoc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_batch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_field</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object containing field information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_fetch_field() can be used in order to obtain information about fields in a certain query result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_field() pode ser usada para obter informações sobre os campos do resultado de uma query.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the field offset isn&apos; t specified, the next field that wasn&apos;t yet retrieved by mssql_fetch_field() is retrieved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o índice do campo não for especificado, o próximo campo que ainda não foi recuperado por mssql_fetch_field() é retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The properties of the object are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As propriedades do objeto são:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>name - column name. if the column is a result of a function, this property is set to computed#N, where #N is a serial number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a coluna é resultado de alguma função, esta propriedade é estabelecida como computed#N, aonde #N é um número de série.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>column_source - the table from which the column was taken</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>column_source - a tabela de onde a coluna veio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max_length - maximum length of the column</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>max_length - o limite de tamanho da coluna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>numeric - 1 if the column is numeric</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>numeric - 1 se a coluna é numérica</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mssql_field_seek().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mssql_field_seek().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An object with properties that correspond to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um objeto com propriedades que correspondem a linha, ou FALSE se não houver mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_fetch_object() is similar to mssql_fetch_array(), with one difference - an object is returned, instead of an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_object() é similar a mssql_fetch_array(), com uma diferença - um objeto é retornado, ao invés de uma matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Indiretamente, isto indica que você só pode acessar os dados pelo nome dos campos, e não por seus índices (números são nomes de propriedades ilegais).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Speed-wise, the function is identical to mssql_fetch_array(), and almost as quick as mssql_fetch_row() (the difference is insignificant).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em velocidade, esta função é idêntica a mssql_fetch_array(), e quase tão rápida quanto mssql_fetch_row() (a diferença é insignificante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_fetch-array() and mssql_fetch-row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_fetch-array() e mssql_fetch-row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_row</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna: uma matriz que corresponde a linha, ou FALSE se não houver mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_fetch_row() fetches one row of data from the result associated with the specified result identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_fetch_row() retorna uma linha do resultado identificado por result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row is returned as an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A linha é retornada como uma matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada coluna do resultado é guardada com um índice numérico, começando no 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subsequent call to mssql_fetch_rows() would return the next row in the result set, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A próxima chamada para mssql_fetch_rows() deve retornar a próxima linha do conjunto de resultados, ou FALSE se não houver mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_fetch_array(), mssql_fetch_object(), mssql_data_seek(), mssql_fetch_lengths(), and mssql_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_fetch_array(), mssql_fetch_object(), mssql_data_seek(), mssql_fetch_lengths(), e mssql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_field_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeks to the specified field offset.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the next call to mssql_fetch_field() won&apos;t include a field offset, this field would be returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a próxima chamada a mssql_fetch_field() não incluir um índice do campo, este campo será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_fetch_field().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_free_result() only needs to be called if you are worried about using too much memory while your script is running.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_free_result() somente precisa ser chamado se você esta preocupado com a quantidade de memória usada enquanto o seu script esta sendo executado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All result memory will automatically be freed when the script ends.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Toda a memória do resultado é liberada automaticamente quando o script acaba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may call mssql_free_result() with the result identifier as an argument and the associated result memory will be freed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve chamar mssql_free_result() com o identificador do resultado que você quer liberar da memória.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_guid_string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_init</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mssql_bind(), mssql_execute() and mssql_free_statement()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não está documentada, somente a lista de argumentos está disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When sending more than one SQL statement to the server or executing a stored procedure with multiple results, it will cause the server to return multiple result sets.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando se envia mais de uma sql para o servidor ou executando uma stored procedure com múltiplos resultados, irá causar que o servidor retorne múltiplos conjuntos de resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will test for additional results available form the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função irá testar se há resultados adicionais do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an additional result set exists it will free the existing result set and prepare to fetch the rows from the new result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se existir um conjunto adicional de resultados, irá liberar o conjunto atual de resultados e preparar para usar o novo conjunto de resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function will return TRUE if an additional result set was available or FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função irá retornar TRUE se um conjunto adicional de resultados estiver disponível ou FALSE em outro caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mssql_next_result() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mssql_next_result()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_num_fields() returns the number of fields in a result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_num_fields() retorna o número de campos em um conjunto de resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_db_query(), mssql_query(), mssql_fetch_field(), and mssql_num_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_db_query(), mssql_query(), mssql_fetch_field(), e mssql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_num_rows() returns the number of rows in a result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_num_rows() retorna o número de linhas em um conjunto de resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_db_query(), mssql_query(), and mssql_fetch_row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_db_query(), mssql_query(), e mssql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_pconnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive MS SQL persistent link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna: um identificador de link persistente com MS SQL se funcionar, ou FALSE se houver erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_pconnect() acts very much like mssql_connect() with two major differences.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_pconnect() funciona muito parecido com mssql_connect() com duas diferenças maiores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, when connecting, the function would first try to find a (persistent) link that&apos;s already open with the same host, username and password.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Primeiro, ao conectar, a função irá primeiro tentar achar uma conexão (persistente) que já esteja aberta com o mesmo host, username e password.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If one is found, an identifier for it will be returned instead of opening a new connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se uma é encontrada, um identificador para ela será retornada ao invés de abrir uma nova conexão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the connection to the SQL server will not be closed when the execution of the script ends.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Segundo, a conexão ao servidor SQL não será fechada quando a execução do script terminar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, the link will remain open for future use (mssql_close() will not close links established by mssql_pconnect()).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés, a conexão permanecerá aberta para uso futuro (mssql_close() não irá fechar conexões criadas com mssql_pconnect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type of links is therefore called &apos;persistent&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este tipo de conexão é chamado &apos;Persistente&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_query</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive MS SQL result identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna: um identificador de resultado do MS SQL se funcionar, ou FALSE se houver um erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_query() sends a query to the currently active database on the server that&apos;s associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_query() envia uma query para o banco de dados atual no servidor que esta associado a conexão especificada em link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn &apos;t specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se link_identifier não for especificado, a ultima conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function tries to establish a link as if mssql_connect() was called, and use it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhuma conexão estiver aberta, a função tenta criar um como se mssql_connect() fosse chamada, e irá usa-la.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_db_query(), mssql_select_db(), and mssql_connect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_db_query(), mssql_select_db() ,e mssql_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_result() returns the contents of one cell from a MS SQL result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_result() retorna o conteúdo de uma célula de um conjunto de resultados do MS SQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field argument can be the field&apos; s offset, the field&apos;s name or the field&apos;s table dot field&apos;s name (tablename.fieldname).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento field pode ser o índice do campo, o nome do campo ou a tabela do campo ponto o nome do campo (tabela.campo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the column name has been aliased (&apos;select foo as bar from.. .&apos;), it uses the alias instead of the column name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um nome da coluna tem apelido (&apos;select foo as bar from.. .&apos;), use o apelido ao invés do nome da coluna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando estiver trabalhando com grandes conjuntos de resultados, você deve considerar o uso de funções que retornam toda a linha (especificadas abaixo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As these functions return the contents of multiple cells in one function call, they&apos; re MUCH quicker than mssql_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como estas funções retornam múltiplas células em uma chamada de função, elas são MUITO mais rápidas do que mssql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Também note que especificar um índice numérico para o argumento field é muito mais rápido do que especificar um nome de campo ou tabela.campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recommended high-performance alternatives: mssql_fetch_row(), mssql_fetch_array(), and mssql_fetch_object().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alternativas mais rápidas recomendadas: mssql_fetch_row(), mssql_fetch_array(), e mssql_fetch_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_rows_affected</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_select_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on error</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mssql_select_db() sets the current active database on the server that&apos;s associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mssql_select_db() estabelece o banco de dados ativo para a conexão especificada por link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link identifier is specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum identificador de conexão for especificado, a ultima conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function will try to establish a link as if mssql_connect() was called, and use it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhuma conexão estiver aberta a função tentará estabelecer uma como se mssql_connect() fosse chamada, e irá usa-la.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every subsequent call to mssql_query() will be made on the active database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as próximas chamadas a mssql_query() serão feitas no banco de dados ativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mssql_connect(), mssql_pconnect(), and mssql_query()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mssql_connect(), mssql_pconnect(), e mssql_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the maximum value that can be returned by a call to mt_rand().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o maior valor que pode ser obtido numa chamada a mt_rand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mt_rand(), mt_srand() and getrandmax().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mt_rand(), mt_srand() e getrandmax().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mt_rand</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many random number generators of older libcs have dubious or unknown characteristics and are slow.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, PHP uses the libc random number generator with the rand() By default, PHP uses the libc random number generator with the rand() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por default, o PHP utiliza o gerador de números aleatórios da libc para a função rand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mt_rand() function is a drop-in replacement for this.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mt_rand() é um bom substituto para a primeira.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It uses a random number generator with known characteristics using the Mersenne Twister, which will produce random numbers that should be suitable for seeding some kinds of cryptography (see the home page for details) and is four times faster than what the average libc provides.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela utiliza um gerador de números aleatórios com características conhecidas, o Mersenne Twister, que produzirá números randômicos que podem ser utilizados como sementes em alguns tipos de criptografia e é em média quatro vezes mais rápido do que o fornecido pela libc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want a random number between 5 and 15 (inclusive), for example, use mt_rand (5, 15).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se chamada sem os argumentos opcionais min e max, mt_rand() retorna um pseudo número aletório enrte 0 e RAND_MAX. se você precisa de um número randômico entre 5 e 15 (inclusive), por exemplo, utilize mt_rand (5, 15).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In older versions of PHP, you had to seed the random number generator before use with mt_srand().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores do PHP, você tem que semear o gerador de números randômicos primerio com mt_srand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since 4.2.0 this is no longer necessary.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.0, isto não é mais necessário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In versions before 3.0.7 the meaning of max was range.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores a 3.0.7, o significado do parâmetro max era range.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get the same results in these versions the short example should be mt_rand (5, 11) to get a random number between 5 and 15.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, para obter os mesmos resultados do exemplo acima, você precisaria utilizar rand (5, 11) para obter um número aleatório entre 5 e 15.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mt_srand(), mt_getrandmax() and rand().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mt_srand(), mt_getrandmax() e rand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mt_srand</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeds the random number generator with seed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Deszcrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / seed with microseconds function make_seed() {list($usec, $sec) = explode( &apos;&apos;, microtime()); return (float) $sec + ((float) $usec * 100000);} mt_srand(make_seed()); $randval = mt_rand();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / semente de microsegundos function make_seed() {list($usec, $sec) = explode( &apos;&apos;, microtime()); return (float) $sec + ((float) $usec * 100000);} mt_srand(make_seed()); $randval = mt_rand();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.2.0 it &apos;s no longer necessary to seed the random number generator before using it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.0 não é mais necessário semear o gerador de números aleatórios antes de usá-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mt_rand(), mt_getrandmax() and srand().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mt_rand(), mt_getrandmax() e srand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>muscat_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>muscat_get</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>muscat_give</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>muscat_setup</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>muscat_setup_net</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query associated with link_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_affected_rows() retorna o número de linhas afetadas pela ultima query INSERT, UPDATE ou DELETE associada a link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn&apos; t specified, the last link opened by mysql_connect() is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o identificador de link não é especificado, o ultimo link aberto por mysql_connect() é utilizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using transactions, you need to call mysql_affected_rows() after your INSERT, UPDATE, or DELETE query, not after the commit.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você esta usando transações, você deve chamar mysql_affected_rows() após sua query INSERT, UPDATE, ou DELETE, não depois de commit.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the last query was a DELETE query with no WHERE clause, all of the records will have been deleted from the table but this function will return zero.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a ultima query foi um DELETE sem a cláusula WHERE, todos os registros foram apagados da tabela, mas esta função retornará zero.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using UPDATE, MySQL will not update columns where the new value is the same as the old value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando usando UPDATE, o MySQL não atualizará as colunas onde o novo valor é o mesmo que o valor anterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This creates the possiblity that mysql_affected_rows() may not actually equal the number of rows matched, only the number of rows that were literally affected by the query.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto cria a possibilidade de que a função mysql_affected_rows() não seja atualmente igual ao número de linhas encontradas, somente o número de linhas que literalmente foram afetadas pela query.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_affected_rows() does not work with SELECT statements; only on statements which modify records.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mysql_affected_rows() A função mysql_affected_rows() não funciona com os comandos SELECT; somente comandos que modificam os registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To retrieve the number of rows returned by a SELECT, use mysql_num_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para pegar o número de linhas retornados por SELECT, use mysql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the last query failed, this function will return -1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a ultima query falhou, esta função irá retornar -1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * connect to database * / mysql_pconnect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); / * this should return the correct numbers of deleted records * / mysql_query(&quot;DELETE FROM mytable WHERE id 10&quot;); printf (&quot;Records deleted: %d\n&quot;, mysql_affected_rows()); / * without a where clause in a delete statement, it should return 0 * / mysql_query(&quot;DELETE FROM mytable&quot;); printf (&quot;Records deleted: %d\n&quot;, mysql_affected_rows());?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Conecta com o banco de dados * / mysql_pconnect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die (&quot;Não pude conectar: &quot;. mysql_error()); / * Este deve retornar o número coreto de registros excluídos * / mysql_query(&quot;DELETE FROM mytable WHERE id 10&quot;); printf (&quot;Registros excluídos: %d\n&quot;, mysql_affected_rows()); / * Sem a clausula where no comando delete, deve retornar 0 * / mysql_query(&quot;DELETE FROM mytable&quot;); printf (&quot;Registros excluídos: %d\n&quot;, mysql_affected_rows());?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would produce the following output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo acima deve produzir a seguinte saída:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Records deleted:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Registros excluídos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>10 Records deleted:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>10 Registros excluídos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * connect to database * / mysql_pconnect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); / * Update records * / mysql_query(&quot;UPDATE mytable SET used=1 WHERE id 10&quot;); printf (&quot;Updated records: %d\n&quot;, mysql_affected_rows()); mysql_query(&quot;COMMIT&quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * conecta com o banco de dados * / mysql_pconnect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die (&quot;Não pude conectar: &quot;. mysql_error()); / * Atualiza os registros * / mysql_query(&quot;UPDATE mytable SET used=1 WHERE id 10&quot;); printf (&quot;Registros atualizados: %d\n&quot;, mysql_affected_rows()); mysql_query(&quot;COMMIT&quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Updated Records:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Registros atualizados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_num_rows(), mysql_info().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_num_rows(), mysql_info().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_change_user() changes the logged in user of the current active connection, or the connection given by the optional link_identifier parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mysql_change_user() muda o usuário logado da conexão ativa atual, ou da conexão dada pelo parâmetro opcional link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a database is specified, this will be the current database after the user has been changed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um banco de dados é especificado, este será o banco de dados atual depois que mudar de usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the new user and password authorization fails, the current connected user stays active.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se houver erro na troca de usuário o que esta atualmente conectado permanece como o usuário ativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function was introduced in PHP 3.0.13 and requires MySQL 3.23.3 or higher.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função foi introduzida no PHP 3.0.13 e requer MySQL 3.23.3 ou superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not available in PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela não esta disponível no PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_client_encoding() returns the default character set name for the current connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mysql_client_encoding() retorna o conjunto de caracteres padrão para a conexão atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_client_encoding() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_client_encoding()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = mysql_connect( &apos;localhost&apos;, &apos;mysql_user&apos;, &apos;mysql_password&apos;); $charset = mysql_client_encoding($link); printf (&quot;current character set is %s\n&quot;, $charset);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $link = mysql_connect( &apos;localhost&apos;, &apos;mysql_user&apos;, &apos;mysql_password&apos;); $charset = mysql_client_encoding($link); printf (&quot;Conjunto atual de caracteres é %s\n&quot;, $charset);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would produce the following output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo acima deve produzir a seguinte saida:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>current character set is latin1</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Conjunto atual de caracteres é latin1</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_real_escape_string()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_real_escape_string()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_close() closes the connection to the MySQL server that&apos;s associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mysql_close() fecha a conexão com o servidor MySQL que você referir com o link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If link_identifier isn &apos;t specified, the last opened link is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro link_identifier não é especificado a ultima conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using mysql_close() isn&apos;t usually necessary, as non-persistent open links are automatically closed at the end of the script&apos;s execution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usar a função mysql_close() não é atualmente necessário, porque conexões não persistentes são automaticamente fechadas ao final da execução do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also freeing resources.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também freeing resources.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL close example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo MySQL close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); print (&quot;Connected successfully&quot;); mysql_close($link);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $link = mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); print (&quot;Conectado !&quot;); mysql_close($link);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_connect(), and mysql_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_connect(), e mysql_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a MySQL link identifier on success, or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_connect() establishes a connection to a MySQL server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um identificador de link (link_identifier) com o MySQL se der certo, ou FALSE se falhar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following defaults are assumed for missing optional parameters: server = &apos;localhost:3306&apos;, username = name of the user that owns the server process and password = empty password.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os seguintes padrões são assumidos para os argumentos opcionais que estiverem faltando: server = &apos;localhost:3306&apos;, username = nome do usuário dono do processo do servidor, password = senha vazia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The server parameter can also include a port number. eg. &quot;hostname:port&quot; or a path to a socket eg. &quot;: / path / to / socket&quot; for the localhost.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo: &quot;hostname:port&quot; ou um caminho para um socket, exemplo. &quot;: / path / to / socket&quot; para o servidor local (localhost).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for &quot;:port&quot; was added in PHP 3.0B4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte para &quot;:port&quot; foi adicionado no PHP 3.0B4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for &quot;: / path / to / socket&quot; was added in PHP 3.0.10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte para &quot;: / path / to / socket&quot; foi adicionado no PHP 3.0.10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can suppress the error message on failure by prepending a @ to the function name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode suprimir a mensagem de erro em caso de falha colocando um @ antes do nome da função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a second call is made to mysql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se uma segunda chamada é feita para mysql_connect() com os mesmos argumentos, um novo link não será estabelecido, mas ao invés disto o identificador da conexão já aberta será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The new_link parameter modifies this behavior and makes mysql_connect() always open a new link, even if mysql_connect() was called before with the same parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro new_link modifica esta opção e faz com que a função mysql_connect() sempre abra um novo link, mesmo que mysql_connect() seja chamada com os mesmos parâmetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The client_flags parameter can be a combination of the constants MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE or MYSQL_CLIENT_INTERACTIVE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro client_flags pode ser uma combinação das constantes MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE ou MYSQL_CLIENT_INTERACTIVE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The new_link parameter became available in PHP 4.2.0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro new_link tornou-se disponível no PHP 4.2.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The client_flags parameter became available in PHP 4.3.0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro client_flags tornou-se disponível no PHP 4.3.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The link to the server will be closed as soon as the execution of the script ends, unless it&apos; s closed earlier by explicitly calling mysql_close().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O link com o servidor será fechado tão logo a execução do script termine, se não tiver sido fechado anteriormente por chamar explicita à mysql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL connect example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de conexão MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); print (&quot;Connected successfully&quot;); mysql_close($link);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $link = mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); print (&quot;Conectado&quot;); mysql_close($link);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_pconnect() and mysql_close().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mysql_pconnect() e mysql_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_create_db() attempts to create a new database on the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_create_db() tenta criar um novo banco de dados no servidor especificado pelo identificador de link (link_identifier) indicado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL create database example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo MySQL create database</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = mysql_pconnect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); if (mysql_create_db(&quot;my_db&quot;)) {print (&quot;Database created successfully\n&quot;);} else {printf (&quot;Error creating database: %s\n&quot;, mysql_error());}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $link = mysql_pconnect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); if (mysql_create_db(&quot;my_db&quot;)) {print (&quot;Banco de dados criado\n&quot;);} else {printf (&quot;Erro criando o banco de dados: %s\n&quot;, mysql_error());}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downwards compatibility mysql_createdb() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_createdb() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em todo o caso ela esta obsoleta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function mysql_create_db() is deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mysql_create_db() está obsoleta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is preferable to use mysql_query() to issue a SQL CREATE DATABASE Statement instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É preferível usar mysql_query() para fazer o comando SQL CREATE DATABASE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_drop_db(), mysql_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_drop_db(), mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_data_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_data_seek() moves the internal row pointer of the MySQL result associated with the specified result identifier to point to the specified row number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_data_seek() move o ponteiro interno do resultado MySQL associado ao identificador de resultado (result_identifier) especificado para apontar a linha identificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The next call to mysql_fetch_row() would return that row.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A próxima chamada a mysql_fetch_row() irá retornar esta linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Row_number starts at 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro row_number O parâmetro row_number (número de linha) começa no 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row_number should be a value in the range from 0 to mysql_num_rows - 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O row_number deve ser um valor entre 0 e mysql_num_rows - 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function mysql_data_seek() can be used in conjunction only with mysql_query(), not with mysql_unbuffered_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mysql_data_seek() pode ser usada somente em conjunto com mysql_query(), não com mysql_unbuffered_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL data seek example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo MySQL data seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = mysql_pconnect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); mysql_select_db(&quot;samp_db&quot;) or die(&quot;Could not select database:&quot;. mysql_error()); $query = &quot;SELECT last_name, first_name FROM friends&quot;; $result = mysql_query($query) or die(&quot;Query failed: &quot;. mysql_error()); / * fetch rows in reverse order * / for ($i = mysql_num_rows($result) - 1; $i = 0; $i- -) {if (!mysql_data_seek($result, $i)) {echo &quot;Cannot seek to row $i:&quot;. mysql_error(). &quot;\n&quot;; continue;} if( !($row = mysql_fetch_object($result))) continue; echo &quot;$row - last_name $row - first_name br / \n&quot;;} mysql_free_result($result);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $link = mysql_pconnect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); mysql_select_db(&quot;samp_db&quot;) or die(&quot;Não pude selecionar o banco de dados:&quot;. mysql_error()); $query = &quot;SELECT last_name, first_name FROM friends&quot;; $result = mysql_query($query) or die(&quot;Query falhou: &quot;. mysql_error()); / * fetch rows in reverse order * / for ($i = mysql_num_rows($result) - 1; $i = 0; $i- -) {if (!mysql_data_seek($result, $i)) {echo &quot;Não pude ir para a linha $i:&quot;. mysql_error(). &quot;\n&quot;; continue;} if( !($row = mysql_fetch_object($result))) continue; echo &quot;$row - last_name $row - first_name br / \n&quot;;} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_query(), mysql_num_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_query() e mysql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_db_name() takes as its first parameter the result pointer from a call to mysql_list_dbs().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_db_name() tem como primeiro parâmetro o resultado de uma chamada a mysql_list_dbs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row parameter is an index into the result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro row é o índice no conjunto de respostas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, FALSE is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se houver um erro é retornado FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use mysql_errno() and mysql_error() to determine the nature of the error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use mysql_errno() e mysql_error() para determinar a natureza do erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_db_name() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_db_name()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For backward compatibility, mysql_dbname() is also accepted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores, mysql_dbname() também é aceito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Seu uso está obsoleto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive MySQL result resource to the query result, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um recurso com o resultado de uma query, ou FALSE se houver erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function also returns TRUE / FALSE for INSERT / UPDATE / DELETE queries to indicate success / failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função também retorna TRUE / FALSE para as query INSERT / UPDATE / DELETE para indicar sucesso ou falha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_db_query() selects a database and executes a query on it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_db_query() seleciona um banco de dados e executa uma query nele.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional link identifier isn&apos; t specified, the function will try to find an open link to the MySQL server and if no such link is found it&apos;ll try to create one as if mysql_connect() was called with no arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o link_identifier não for especificado (é opcional), a função tenterá achar um link aberto para o servidor MySQL, e se nenhum for encontrado, a função tenterá criar um como se a função mysql_connect() fosse chamada sem argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be aware that this function does NOT switch back to the database you were connected before.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenha cuidado pois esta função NÃO seleciona de volta o banco de dados que você estava conectado antes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, you can &apos;t use this function to temporarily run a sql query on another database, you would have to manually switch back.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outras palavras, você não pode usar esta função para executar uma query temporariamente em outro banco de dados, você deve manualmente trocar de volta o banco de dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users are strongly encouraged to use the database.table syntax in their sql queries instead of this function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É fortemente recomendado usar a sintaxe database.table nas suas queries ao invés desta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_connect() and mysql_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mysql_connect() e mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function has been deprecated since PHP 4.0.6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é obsoleta desde PHP 4.0.6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do not use this function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não use esta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use mysql_select_db() and mysql_query() instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés utilize mysql_select_db() e mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_drop_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_drop_db() tenta remover todo um banco de dados do servidor especificado em link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_dropdb() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com as versãoes anteriores, mysql_dropdb() pode ser usada também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é obsoleta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function mysql_drop_db() is deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mysql_drop_db() é obsoleta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is preferable to use mysql_query() to issue a SQL DROP DATABASE statement instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É preferivel usar mysql_query() ao invés um comando SQL DROP DATABASE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_create_db(), mysql_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_create_db() e mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_errno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the error number from the last MySQL function, or 0 (zero) if no error occurred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Errors coming back from the MySQL database backend no longer issue warnings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o número do erro da ultima função do MySQL, ou 0 (zero) se não houve erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, use mysql_errno() to retrieve the error code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Erros vindos do MySQL não causam avisos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this function only returns the error code from the most recently executed MySQL function (not including mysql_error() and mysql_errno()), so if you want to use it, make sure you check the value before calling another MySQL function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que esta função somente retorna o código de erro da ultima função do MySQL que foi executada( não incluindo mysql_error() e mysql_errno()), assim se você quer usa-la, tenha certeza de utiliza-la antes de chamar outra função do MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_errno Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_errno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;); mysql_select_db(&quot;nonexistentdb&quot;); echo mysql_errno(). &quot;:&quot;. mysql_error(). &quot;\n&quot;; mysql_select_db(&quot;kossu&quot;); mysql_query(&quot;SELECT * FROM nonexistenttable&quot;); echo mysql_errno(). &quot;:&quot;. mysql_error(). &quot;\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;); mysql_select_db(&quot;arquivonaoexistente&quot;); echo mysql_errno(). &quot;:&quot;. mysql_error(). &quot;\n&quot;; mysql_select_db(&quot;kossu&quot;); mysql_query(&quot;SELECT * FROM tabelanaoexistente&quot;); echo mysql_errno(). &quot;:&quot;. mysql_error(). &quot;\n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unknown database &apos;nonexistentdb&apos; 1146:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Unknown database &apos;arquivonaoexistente&apos; 1146:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table &apos;kossu.nonexistenttable&apos; doesn&apos;t exist</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Table &apos;kossu.tabelanaoexistente&apos; doesn &apos;t exist</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional argument is specified the given link is used to retrieve the error code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o argumento opcional é especificado, a conexão indicada é usada para obter o código de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not, the last opened link is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se não, a ultima conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_error()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_error()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the error text from the last MySQL function, or &apos;&apos; (the empty string) if no error occurred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o texto do erro da ultima função do MySQL, ou &apos;&apos; (Uma string vazia) se não houve erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Errors coming back from the MySQL database backend no longer issue warnings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Erros vindo do MySQL não causam avisos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, use mysql_error() to retrieve the error text.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés, use mysql_error() para obter o texto do erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this function only returns the error text from the most recently executed MySQL function (not including mysql_error() and mysql_errno()), so if you want to use it, make sure you check the value before calling another MySQL function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que esta função somente retorna o texto de erro da ultima função do MySQL que foi executada( não incluindo mysql_error() e mysql_errno()), assim se você quer usa-la, tenha certeza de utiliza-la antes de chamar outra função do MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_error Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional argument is specified the given link is used to retrieve the error message.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o argumento opcional é especificado, a conexão indicada é usada para obter o código de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_errno()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_errno()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will escape the unescaped_string, so that it is safe to place it in a mysql_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função irá escapar o unescaped_string, assim será seguro coloca-la na função mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is identical to mysql_real_escape_string() except that mysql_real_escape_string() takes a connection handler and escapes the string according to the current character set. mysql_escape_string() does not take a connection argument and does not respect the current charset setting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é identica a mysql_real_escape_string() exceto que mysql_real_escape_string() precisa de um identificador de conexão e escapa a string de acordo com o conjunto atual de caracteres atual. mysql_escape_string() não precisa de um identificador de conexão e não respeita o conjunto atual de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_escape_string() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_escape_string()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $item = &quot;Zak&apos;s Laptop&quot;; $escaped_item = mysql_escape_string($item); printf (&quot;Escaped string: %s\n&quot;, $escaped_item);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $item = &quot;Zak&apos;s Laptop&quot;; $escaped_item = mysql_escape_string($item); printf (&quot;String escapada: %s\n&quot;, $escaped_item);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_real_escape_string(), addslashes(), and the magic_quotes_gpc directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_real_escape_string(), addslashes(), e a diretiva magic_quotes_gpc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma matriz que corresponde a linha buscada, ou FALSE se não houverem mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_array() is an extended version of mysql_fetch_row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_fetch_array() é uma versão estendida de mysql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além de guardar os dados em um índice numérico na matriz, também guarda os dados em índices associativos, usando o nome do campo como chave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If two or more columns of the result have the same field names, the last column will take precedence.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se duas ou mais colunas do resultado tiverem o mesmo nome do campo, a ultima coluna terá precedência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To access the other column( s) of the same name, you must use the numeric index of the column or make an alias for the column.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para acessar as outras coluna( s) com o mesmo nome, você deve usar o índice numérico da coluna ou fazer um apelido para a coluna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For aliased columns, you cannot access the contents with the original column name (by using&apos;field &apos;in this example).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para colunas com apelido, você não pode acessar os conteúdos com o nome original da coluna (usando &apos;field &apos;neste exemplo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Query with duplicate field names</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Query com nomes de campo duplicados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An important thing to note is that using mysql_fetch_array() is not significantly slower than using mysql_fetch_row(), while it provides a significant added value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma coisa importante para notar é que usar mysql_fetch_array() não é significativamente mais lenta do que usar mysql_fetch_row(), enquanto que produz um resultado melhor de se usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional second argument result_type in mysql_fetch_array() is a constant and can take the following values:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo argumento, que é opcional, result_type em mysql_fetch_array() é uma constante que pode ter os seguintes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MYSQL_ASSOC, MYSQL_NUM, and MYSQL_BOTH.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>MYSQL_ASSOC, MYSQL_NUM, e MYSQL_BOTH.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This feature was added in PHP 3.0.7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto foi adicionado no PHP 3.0.7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MYSQL_BOTH is the default for this argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>MYSQL_BOTH é o padrão para este argumento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By using MYSQL_BOTH, you &apos;ll get an array with both associative and number indices.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando MYSQL_BOTH, você terá uma matriz com os índices associativos e numéricos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using MYSQL_ASSOC, you only get associative indices (as mysql_fetch_assoc() works), using MYSQL_NUM, you only get number indices (as mysql_fetch_row() works).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando MYSQL_ASSOC, você terá apenas os índices associativos (como funciona mysql_fetch_assoc()), usando MYSQL_NUM, você terá apenas os índices numéricos (como funciona mysql_fetch_row()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. mysql_fetch_array with MYSQL_NUM</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. mysql_fetch_array com MYSQL_NUM</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); mysql_select_db(&quot;mydb&quot;); $result = mysql_query(&quot;SELECT id, name FROM mytable&quot;); while ($row = mysql_fetch_array($result, MYSQL_NUM)) {printf (&quot;ID: %s Name: %s&quot;, $row[0], $row[1]);} mysql_free_result($result);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); mysql_select_db(&quot;mydb&quot;); $result = mysql_query(&quot;SELECT id, name FROM mytable&quot;); while ($row = mysql_fetch_array($result, MYSQL_NUM)) {printf (&quot;ID: %s Name: %s&quot;, $row[0], $row[1]);} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. mysql_fetch_array with MYSQL_ASSOC</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. mysql_fetch_array com MYSQL_ASSOC</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); mysql_select_db(&quot;mydb&quot;); $result = mysql_query(&quot;SELECT id, name FROM mytable&quot;); while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {printf (&quot;ID: %s Name: %s&quot;, $row[&quot;id&quot;], $row[&quot;name&quot;]);} mysql_free_result($result);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); mysql_select_db(&quot;mydb&quot;); $result = mysql_query(&quot;SELECT id, name FROM mytable&quot;); while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {printf (&quot;ID: %s Name: %s&quot;, $row[&quot;id&quot;], $row[&quot;name&quot;]);} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. mysql_fetch_array with MYSQL_BOTH</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4. mysql_fetch_array com MYSQL_BOTH</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); mysql_select_db(&quot;mydb&quot;); $result = mysql_query(&quot;SELECT id, name FROM mytable&quot;); while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {printf (&quot;ID: %s Name: %s&quot;, $row[0], $row[&quot;name&quot;]);} mysql_free_result($result);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); mysql_select_db(&quot;mydb&quot;); $result = mysql_query(&quot;SELECT id, name FROM mytable&quot;); while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {printf (&quot;ID: %s Name: %s&quot;, $row[0], $row[&quot;name&quot;]);} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For further details, see also mysql_fetch_row() and mysql_fetch_assoc().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores detalhes, veja também mysql_fetch_row() e mysql_fetch_assoc().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma matriz associativa que corresponde a linha ou FALSE se não houverem mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_assoc() is equivalent to calling mysql_fetch_array() with MYSQL_ASSOC for the optional second parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_fetch_assoc() é equivalente a chamar mysql_fetch_array() com MYSQL_ASSOC para o segundo parâmetro, que é opcional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It only returns an associative array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente retorna uma matriz associativa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the way mysql_fetch_array() originally worked.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este é o jeito que mysql_fetch_array() funcionava originalmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need the numeric indices as well as the associative, use mysql_fetch_array().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você precisa dos índices numéricos assim como o associativo, use mysql_fetch_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To access the other column( s) of the same name, you either need to access the result with numeric indices by using mysql_fetch_row() or add alias names.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para acessar as outras coluna( s) com o mesmo nome, você deve usar o índice numérico da coluna usando mysql_fetch_row() ou fazer um apelido para a coluna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the example at the mysql_fetch_array() description about aliases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja o exemplo em mysql_fetch_array() uma descrição para apelidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma coisa importante para notar é que usar mysql_fetch_assoc() não é significativamente mais lenta do que usar mysql_fetch_row(), enquanto produz um resultado melhor de usar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An expanded mysql_fetch_assoc() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mysql_fetch_assoc()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;); if (!$conn) {echo &quot;Unable to connect to DB: &quot;. mysql_error(); exit;} if (!mysql_select_db(&quot;mydbname&quot;)) {echo &quot;Unable to select mydbname:&quot;. mysql_error(); exit;} $sql = &quot;SELECT id as userid, fullname, userstatus FROM sometable WHERE userstatus = 1&quot;; $result = mysql_query($sql); if (!$result) {echo &quot;Could not successfully run query ($sql) from DB: &quot;. mysql_error(); exit;} if (mysql_num_rows($result) == 0) {echo &quot;No rows found, nothing to print so am exiting&quot;; exit;} / / While a row of data exists, put that row in $row as an associative array / / Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $conn = mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;); if (!$conn) {echo &quot;Não foi possível conectar: &quot;. mysql_error(); exit;} if (!mysql_select_db(&quot;mydbname&quot;)) {echo &quot;Não foi possível selecionar mydbname:&quot;. mysql_error(); exit;} $sql = &quot;SELECT id as userid, fullname, userstatus FROM sometable WHERE userstatus = 1&quot;; $result = mysql_query($sql); if (!$result) {echo &quot;Não foi possível executar a query ($sql): &quot;. mysql_error(); exit;} if (mysql_num_rows($result) == 0) {echo &quot;Nenhuma linha encontrada, nada para mostrar, então estou saindo&quot;; exit;} / / Enquanto uma linha com dados existir, coloca esta linha em $row como uma matriz associativa / / Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you &apos;re expecting just one row, no need to use a loop / / Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você esta esperando somente uma linha, não é necessário usar o loop / / Note:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you put extract( $row); inside the following loop, you&apos;ll / / then create $userid, $fullname, and $userstatus while ($row = mysql_fetch_assoc($result)) {echo $row[&quot;userid&quot;]; echo $row[&quot;fullname&quot;]; echo $row[&quot;userstatus&quot;];} mysql_free_result($result);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você colocar extract( $row); dentro o loop a seguir, / / então você irá criar $userid, $fullname, and $userstatus while ($row = mysql_fetch_assoc($result)) {echo $row[&quot;userid&quot;]; echo $row[&quot;fullname&quot;]; echo $row[&quot;userstatus&quot;];} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_fetch_row(), mysql_fetch_array(), mysql_query(), and mysql_error().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores detalhes, veja também mysql_fetch_row(), mysql_fetch_array() e mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_fetch_field</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_field() can be used in order to obtain information about fields in a certain query result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_fetch_field() pode ser usado para obter informações sobre os campos num certo resultado de uma query.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the field offset isn&apos; t specified, the next field that wasn&apos;t yet retrieved by mysql_fetch_field() is retrieved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o índice do campo não é especificado, o próximo campo que não foi ainda retornado por mysql_fetch_field() é retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>name - column name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>name - nome da coluna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>table - name of the table the column belongs to</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>table - nome da tabela onde esta o campo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>max_length - maximum length of the column</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>max_length - o limite de tamanho para a coluna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>not_null - 1 if the column cannot be NULL</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>not_null - 1 se a coluna não pode ser NULL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>primary_key - 1 if the column is a primary key</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>primary_key - 1 se a coluna é a chave primária</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unique_key - 1 if the column is a unique key</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>unique_key - 1 se a coluna é a chave única</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>multiple_key - 1 if the column is a non-unique key</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>multiple_key - 1 se a coluna é uma chave não única</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>blob - 1 if the column is a BLOB</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>blob - 1 se a coluna é BLOB</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>type - the type of the column</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>type - o tipo da coluna</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unsigned - 1 if the column is unsigned</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>unsigned - 1 se a coluna é unsigned( sem sinal)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>zerofill - 1 if the column is zero-filled</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>zerofill - 1 se a coluna é preenchida com zero</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_fetch_field()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mysql_fetch_field()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &apos;localhost:3306&apos;, $user, $password) or die(&quot;Could not connect: &quot;. mysql_error()); mysql_select_db(&quot;database&quot;); $result = mysql_query(&quot;select * from table&quot;) or die(&quot;Query failed:&quot;. mysql_error()); / * get column metadata * / $i = 0; while ($i mysql_num_fields($result)) {echo &quot;Information for column $i: br / \n&quot;; $meta = mysql_fetch_field($result); if (!$meta) {echo &quot;No information available br / \n&quot;;} echo &quot;pre blob: $meta - blob max_length: $meta - max_length multiple_key: $meta - multiple_key name: $meta - name not_null: $meta - not_null numeric: $meta - numeric primary_key: $meta - primary_key table: $meta - table type: $meta - type unique_key: $meta - unique_key unsigned: $meta - unsigned zerofill: $meta - zerofill / pre&quot;; $i++;} mysql_free_result($result);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &apos;localhost:3306&apos;, $user, $password) or die (&quot;Não pude conectar: &quot;. mysql_error()); mysql_select_db(&quot;database&quot;); $result = mysql_query(&quot;select * from table&quot;) or die(&quot;A query falhou:&quot;. mysql_error()); / * get column metadata * / $i = 0; while ($i mysql_num_fields($result)) {echo &quot;Informação para a coluna $i: br / \n&quot;; $meta = mysql_fetch_field($result); if (!$meta) {echo &quot;Informação não disponivel br / \n&quot;;} echo &quot;pre blob: $meta - blob max_length: $meta - max_length multiple_key: $meta - multiple_key name: $meta - name not_null: $meta - not_null numeric: $meta - numeric primary_key: $meta - primary_key table: $meta - table type: $meta - type unique_key: $meta - unique_key unsigned: $meta - unsigned zerofill: $meta - zerofill / pre&quot;; $i++;} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_field_seek().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mysql_field_seek().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array that corresponds to the lengths of each field in the last row fetched by mysql_fetch_row(), or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma matriz que corresponte ao tamanho de cada campo na ultima coluna retornada por mysql_fetch_row(), ou FALSE se houver erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_lengths() stores the lengths of each result column in the last row returned by mysql_fetch_row(), mysql_fetch_array(), and mysql_fetch_object() in an array, starting at offset 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_fetch_lengths() guarda o tamanho de cada coluna do resultado retornado por mysql_fetch_row(), mysql_fetch_array(), e mysql_fetch_object() numa matriz, com o índice começando em 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_fetch_row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um objeto com propriedades que correspondem a linha, ou FALSE se não houverem mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_object() is similar to mysql_fetch_array(), with one difference - an object is returned, instead of an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_fetch_object() é similar a mysql_fetch_array(), com uma diferença - um objeto é retornado ao invés de uma matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Indiretamente, isto indica que você só pode acessar os dados pelo nome do campo, e não pelos seus índices (números como nomes de propriedades são inválidos).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * this is valid * / echo $row - field; / * this is invalid * / echo $row - 0;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Isto é válido * / echo $row - field; / * Isto é inválido * / echo $row - 0;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Speed-wise, the function is identical to mysql_fetch_array(), and almost as quick as mysql_fetch_row() (the difference is insignificant).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em velocidade, a função é identica a mysql_fetch_array(), e quase tão rapida quanto mysql_fetch_row() (a diferença é insignificante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_fetch_object() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_fetch_object()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_fetch_array() and mysql_fetch_row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_fetch_array() e mysql_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma matriz numérica que corresponde a linha, ou FALSE se não houverem mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_fetch_row() fetches one row of data from the result associated with the specified result identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_fetch_row() retorna os dados de uma linha do resultado identificado por result(resultado de uma query).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada coluna é um índice da matriz, começando em 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subsequent call to mysql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A próxima chamada a mysql_fetch_row() irá retornar a próxima linha do conjunto de resultados, ou FALSE se não houverem mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_fetch_array(), mysql_fetch_object(), mysql_data_seek(), mysql_fetch_lengths(), and mysql_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_fetch_array(), mysql_fetch_object(), mysql_data_seek(), mysql_fetch_lengths(), e mysql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_field_flags() returns the field flags of the specified field.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_field_flags() retorna as flags do campo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The flags are reported as a single word per flag separated by a single space, so that you can split the returned value using explode().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As flags são retornadas como uma única palavra separadas por um único espaço, assim você pode separar o valor retornado com explode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following flags are reported, if your version of MySQL is current enough to support them: &quot;not_null&quot;, &quot;primary_key&quot;, &quot;unique_key&quot;, &quot;multiple_key&quot;, &quot;blob&quot;, &quot;unsigned&quot;, &quot;zerofill&quot;, &quot;binary&quot;, &quot;enum&quot;, &quot;auto_increment&quot;, &quot;timestamp&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As seguintes flags são retornadas, se a sua versão do MySQL é atual o suficiente para reporta-las: &quot;not_null&quot;, &quot;primary_key&quot;, &quot;unique_key&quot;, &quot;multiple_key&quot;, &quot;blob&quot;, &quot;unsigned&quot;, &quot;zerofill&quot;, &quot;binary&quot;, &quot;enum&quot;, &quot;auto_increment&quot;, &quot;timestamp&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_fieldflags() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com as versões anteriores mysql_fieldflags() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função esta depreciada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_field_len() returns the length of the specified field.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_field_len() retorna o tamanho do campo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_fieldlen() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_fieldlen() pode também ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated, however.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função está depreciada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_field_name() returns the name of the specified field index. result must be a valid result identifier and field_index is the numerical offset of the field.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_field_name() retorna o nome do campo do índice especificado. result deve ser um identificador de resultado(de uma query) valido e field_index é o índice do campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>e.g.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dica.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The index of the third field would actually be 2, the index of the fourth field would be 3 and so on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O índice do terceiro campo deve ser 2, o índice do quarto campo deve ser 3 e assim em diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_field_name() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_field_name()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/* The users table consists of three fields: * user_id * username * password. * / $link = mysql_connect( &apos;localhost&apos;, &quot;mysql_user&quot;, &quot;mysql_password&quot;); mysql_select_db($dbname, $link) or die(&quot;Could not set $dbname: &quot;. mysql_error()); $res = mysql_query(&quot;select * from users&quot;, $link); echo mysql_field_name($res, 0). &quot;\n&quot;; echo mysql_field_name($res, 2);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/* A tabela users consiste de três campos: * user_id * username * password. * / $link = mysql_connect( &apos;localhost&apos;, &quot;mysql_user&quot;, &quot;mysql_password&quot;); mysql_select_db($dbname, $link) or die(&quot;Could not set $dbname: &quot;. mysql_error()); $res = mysql_query(&quot;select * from users&quot;, $link); echo mysql_field_name($res, 0). &quot;\n&quot;; echo mysql_field_name($res, 2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downwards compatibility mysql_fieldname() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_fieldname() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_field_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the next call to mysql_fetch_field() doesn&apos;t include a field offset, the field offset specified in mysql_field_seek() will be returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a próxima chamada a mysql_fetch_field() não incluir um índice do campo, o índice especificado em mysql_field_seek() será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_fetch_field().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_fetch_field().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the name of the table that the specifed field is in.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o nome da tabela onde esta o campo especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_fieldtable() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_fieldtable() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_field_type() is similar to the mysql_field_name() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_field_type() é similar a mysql_field_name().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arguments are identical, but the field type is returned instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os argumentos são identicos, mas ao invés é retornado o tipo do campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field type will be one of &quot;int&quot;, &quot;real&quot;, &quot;string&quot;, &quot;blob&quot;, and others as detailed in the MySQL documentation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tipo do campo será um de &quot;int&quot;, &quot;real&quot;, &quot;string&quot;, &quot;blob&quot;, e outros detalhados na documentação do MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL field types</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos de campo do MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would produce the following output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A tabela acima irá produzir a seguinte saída:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_fieldtype() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_fieldtype() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_free_result() will free all memory associated with the result identifier result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_free_result() irá liberar toda a memória usada com o identificador de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_free_result() only needs to be called if you are concerned about how much memory is being used for queries that return large result sets.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_free_result() somente precisa ser chamado se você esta preocupado em quanta memória esta sendo usada para query num grande conjunto de resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All associated result memory is automatically freed at the end of the script &apos;s execution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Toda a memória usada do resultado é liberada automaticamente ao final da execução do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_freeresult() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_freeresult() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_get_client_info() returns a string that represents the client library version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_get_client_info() retorna uma string que representa a versão da biblioteca do cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_get_client_info Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_get_client_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_get_host_info(), mysql_get_proto_info() and mysql_get_server_info().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_get_host_info(), mysql_get_proto_info() e mysql_get_server_info().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_get_host_info() returns a string describing the type of connection in use for the connection link_identifier, including the server host name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_get_host_info() retorna uma string descrevendo o tipo de conexão em uso para a conexão link_identifier, incluindo o nome de host do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If link_identifier is omitted, the last opened connection will be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro link_identifier é omitido, a ultima conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_get_host_info Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_get_host_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); printf (&quot;MySQL host info: %s\n&quot;, mysql_get_host_info());?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); printf (&quot;MySQL host info: %s\n&quot;, mysql_get_host_info());?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_get_client_info(), mysql_get_proto_info() and mysql_get_server_info().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_get_client_info(), mysql_get_proto_info() e mysql_get_server_info().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_get_proto_info() returns the protocol version used by connection link_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_get_proto_info() retorna a versão do protocolo usada pela conexão link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If link_identifier is omitted, the last opened connection will be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se link_identifier é omitido, a última conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_get_proto_info Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_get_proto_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); printf (&quot;MySQL protocol version: %s\n&quot;, mysql_get_proto_info());?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); printf (&quot;MySQL protocol version: %s\n&quot;, mysql_get_proto_info());?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_get_client_info(), mysql_get_host_info() and mysql_get_server_info().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_get_client_info(), mysql_get_host_info() and mysql_get_server_info().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_get_server_info() returns the server version used by connection link_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_get_server_info() retorna a versão do servidor usado para a conexão link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_get_server_info Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_get_server_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); printf (&quot;MySQL server version: %s\n&quot;, mysql_get_server_info());?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); printf (&quot;MySQL server version: %s\n&quot;, mysql_get_server_info());?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_get_client_info(), mysql_get_host_info() and mysql_get_proto_info().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_get_client_info(), mysql_get_host_info() e mysql_get_proto_info().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_info() returns detailed information about the last query using the given link_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_info() retorna informação detalhada sobre a última query usando o link_identifier dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If link_identifier isn &apos;t specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se link_identifier não é especificado, a última conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_info() returns a string for all statements listed below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_info() retorna uma string para todos os itens listados abaixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For all other FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para todos os outros FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The string format depends on the given statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O formato da string depende do comando dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Relevant MySQL Statements</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Comandos Importantes do MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>VALUES statement only if multiple value lists are specified in the statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>VALUES somente se multiplas listas de valores são especificadas no comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_affected_rows()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_affected_rows()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_insert_id() returns the ID generated for an AUTO_INCREMENT column by the previous INSERT query using the given link_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_insert_id() returna o ID gerado para um campo AUTO_INCREMENT pela ultima query INSERT usando o link_identifier mysql_insert_id() returna o ID gerado para um campo AUTO_INCREMENT pela ultima query INSERT usando o link_identifier dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If link_identifier isn &apos;t specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se link_identifier não é especificado, a ultima conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_insert_id() returns 0 if the previous query does not generate an AUTO_INCREMENT value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_insert_id() retorna 0 se a query anterior não gerou um valor AUTO_INCREMENT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to save the value for later, be sure to call mysql_insert_id() immediately after the query that generates the value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você precisa salvar o valor para depois, tenha certeza de chamar mysql_insert_id() imediatamente depois da query que gerou o valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of the MySQL SQL function LAST_INSERT_ID() always contains the most recently generated AUTO_INCREMENT value, and is not reset between queries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor da função SQL do MySQL LAST_INSERT_ID() sempre contém o mais recente valor AUTO_INCREMENT gerado, e não é reiniciado entre as query.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_insert_id() converts the return type of the native MySQL C API function mysql_insert_id() to a type of long (named int in PHP).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_insert_id() converte o tipo de retorno nativo do MySQL C API mysql_insert_id() para o tipo long (nomeado int no PHP).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your AUTO_INCREMENT column has a column type of BIGINT, the value returned by mysql_insert_id() will be incorrect.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a sua coluna AUTO_INCREMENT tem um tipo BIGINT, o valor retornado por mysql_insert_id() será incorreto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, use the internal MySQL SQL function LAST_INSERT_ID() in an SQL query.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés, use a função interna SQL do MySQL LAST_INSERT_ID() numa query SQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_insert_id Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_insert_id</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect: &quot;. mysql_error()); mysql_select_db(&quot;mydb&quot;); mysql_query(&quot;INSERT INTO mytable (product) values (&apos;kossu&apos;)&quot;); printf (&quot;Last inserted record has id %d\n&quot;, mysql_insert_id());?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php mysql_connect( &quot;localhost&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar: &quot;. mysql_error()); mysql_select_db(&quot;mydb&quot;); mysql_query(&quot;INSERT INTO mytable (product) values (&apos;kossu&apos;)&quot;); printf (&quot;O ultimo registro incluído tem id %d\n&quot;, mysql_insert_id());?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_list_dbs() will return a result pointer containing the databases available from the current mysql daemon.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_list_dbs() irá retorna um ponteiro de resultado contendo os bancos de dados disponiveis do servidor MySQL atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the mysql_tablename() function to traverse this result pointer, or any function for result tables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use a função mysql_tablename() para atravessar este ponteiro de resultado, ou qualquer função para o resultado das tabelas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_list_dbs() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_list_dbs()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above code would just as easily work with mysql_fetch_row() or other similar functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O codigo acima trabalha facil com mysql_fetch_row() ou outras funções similares.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_listdbs() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com as versões anteriores mysql_listdbs() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated however.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função esta depreciada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_db_name().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mysql_db_name().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_list_fields() retrieves information about the given table name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_list_fields() retorna informação sobre a tabela dada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguments are the database name and the table name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os argumentos são o nome do banco de dados e da tabela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A result pointer is returned which can be used with mysql_field_flags(), mysql_field_len(), mysql_field_name(), and mysql_field_type().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um ponteiro de resultado é retornado o qual pode ser usado com mysql_field_flags(), mysql_field_len(), mysql_field_name(), e mysql_field_type().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_list_fields() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_list_fields()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_listfields() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_listfields() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_list_processes() returns a result pointer describing the current server threads.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_list_processes() retorna um ponteiro de resultado descrevendo as threads atuais do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_list_processes() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_list_processes()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_thread_id()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_thread_id()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_list_tables() takes a database name and returns a result pointer much like the mysql_query() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_list_tables() leva o nome de um banco de dados e retorna um ponteiro de resultado muito parecido com a função mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the mysql_tablename() function to extract the actual table names from the result pointer, or any other result table function such as mysql_fetch_assoc().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar a função mysql_tablename() para extrair os nomes atuais das tabela do ponteiro do resultado, ou qualquer outra função com o resultado de tabela como mysql_fetch_assoc().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The database parameter is the name of the database to retrieve the list of tables from.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro database é o nome do banco de dados de onde obter a lista de tabelas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon failure, mysql_list_tables() returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a função mysql_list_tables() falhar, retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility, the function alias named mysql_listtables() can be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores, o apelido chamado mysql_listtables() pode ser usado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated however and is not recommended.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta depreciada e seu uso não é recomendado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_list_tables Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_list_tables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $dbname = &apos;mysql_dbname&apos;; if (!mysql_connect(&apos;mysql_host&apos;, &apos;mysql_user&apos;, &apos;mysql_password&apos;)) {print&apos;Could not connect to mysql&apos;; exit;} $result = mysql_list_tables($dbname); if (!$result) {print &quot;DB Error, could not list tables\n&quot;; print&apos;MySQL Error:&apos;. mysql_error(); exit;} while ($row = mysql_fetch_row($result)) {print &quot;Table: $row[0]\n&quot;;} mysql_free_result($result);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $dbname = &apos;mysql_dbname&apos;; if (!mysql_connect(&apos;mysql_host&apos;, &apos;mysql_user&apos;, &apos;mysql_password&apos;)) {print &apos;Não pude conectar com o MySQL&apos;; exit;} $result = mysql_list_tables($dbname); if (!$result) {print &quot;DB Error, não pude listar as tabelas\n&quot;; print &apos;MySQL Error:&apos;. mysql_error(); exit;} while ($row = mysql_fetch_row($result)) {print &quot;Table: $row[0]\n&quot;;} mysql_free_result($result);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_list_dbs(), and mysql_tablename().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_list_dbs(), e mysql_tablename().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_num_fields() returns the number of fields in a result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_num_fields() retorna o número de campos em um conjunto de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_select_db(), mysql_query(), mysql_fetch_field(), mysql_num_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_select_db(), mysql_query(), mysql_fetch_field(), mysql_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_numfields() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_numfields() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is deprecated however.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função está depreciada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_num_rows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_num_rows() returns the number of rows in a result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This command is only valid for SELECT statements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_num_rows() retorna o número de linhas em um resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To retrieve the number of rows affected by a INSERT, UPDATE or DELETE query, use mysql_affected_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para obter o número de linhas afetadas por INSERT, UPDATE ou DELETE, use mysql_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_num_rows() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_num_rows()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use mysql_unbuffered_query(), mysql_num_rows() will not return the correct value until all the rows in the result set have been retrieved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você usar mysql_unbuffered_query(), mysql_num_rows() não irá retornar o valor correto até que todas as linhas do resultado sejam obtidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_affected_rows(), mysql_connect(), mysql_data_seek(), mysql_select_db(), and mysql_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_affected_rows(), mysql_connect(), mysql_data_seek(), mysql_select_db(), e mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_numrows() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_numrows() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive MySQL persistent link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um identificador de link persistente ao MySQL em caso de sucesso, ou FALSE se houver erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_pconnect() establishes a connection to a MySQL server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_pconnect() estabelece uma conexão com o servidor MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following defaults are assumed for missing optional parameters: server = &apos;localhost:3306&apos;, username = name of the user that owns the server process and password = empty password.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os seguintes padrões são assumidos para os parametros opcionais que estiverem faltando: server = &apos;localhost:3306&apos;, username = nome do usuário que for dono do processo do servidor e password = password vazio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The client_flags parameter can be a combination of the constants MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE or MYSQL_CLIENT_INTERACTIVE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro client_flags pode ser uma combinação das constantes MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE ou MYSQL_CLIENT_INTERACTIVE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The server parameter can also include a port number. eg. &quot;hostname:port&quot; or a path to a socket eg. &quot;: / path / to / socket&quot; for the localhost.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ex: &quot;hostname:port&quot; ou um caminho para um socket ex: &quot;: / path / to / socket&quot; para o localhost.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for &quot;:port&quot; was added in 3.0B4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte a &quot;:port&quot; foi adicionado em 3.0B4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for the &quot;: / path / to / socket&quot; was added in 3.0.10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte a &quot;: / path / to / socket&quot; foi adicionado em 3.0.10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_pconnect() acts very much like mysql_connect() with two major differences.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_pconnect() aje muito parecido com mysql_connect() com duas maiores diferenças.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, when connecting, the function would first try to find a (persistent) link that&apos;s already open with the same host, username and password.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Primeira,ao conectar, a função primeiro irá tentar encontrar um conexão persistente que já esteja aberta com o mesmo servidor, nome de usuário e senha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, the connection to the SQL server will not be closed when the execution of the script ends.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Segundo, a conexão com o servidor SQL não será fechada quando termina a execução do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, the link will remain open for future use (mysql_close() will not close links established by mysql_pconnect()).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés, a conexão continuará aberta para uso futuro( mysql_close() não irá fechar conexões abertas por mysql_pconnect()).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional client_flags parameter became available in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional client_flags tornou-se disponivel no PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type of link is therefore called &apos;persistent&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este tipo de conexão é portanto chamada &apos;persistente&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note, that these kind of links only work if you are using a module version of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que este tipo de conexão funciona somente se você esta usando o PHP como módulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Persistent Database Connections section for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a seção Persistent Database Connections para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using persistent connections can require a bit of tuning of your Apache and MySQL configurations to ensure that you do not exceed the number of connections allowed by MySQL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usar conexões persistentes pode requerer alguns ajustes na sua configuração do Apache e MySQL para assegurar que você não ultrapasse o limite de conexões permitidos pelo MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_ping</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_ping() checks whether or not the connection to the server is working.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it has gone down, an automatic reconnection is attempted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_ping() confere se uma conexão com o servidor esta ou não funcionando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function can be used by scripts that remain idle for a long while, to check whether or not the server has closed the connection and reconnect if necessary. mysql_ping() returns TRUE if the connection to the server is working, otherwise FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função pode ser usada por scripts que permanecem ociosos por um grande tempo, para conferir uqando o servidor fechou ou não a conexão e reconectar se necessário. mysql_ping() returna TRUE se a conexão com o servidor esta funcionando, em outro caso FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_thread_id(), mysql_list_processes().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_thread_id(), mysql_list_processes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_query() sends a query to the currently active database on the server that&apos;s associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_query() envia uma query para o banco de dados ativo no servidor da conexão informada em link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If link_identifier isn &apos;t specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro link_identifier não é especificado, a ultima conexão aberta é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function tries to establish a link as if mysql_connect() was called with no arguments, and use it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhuma conexão esta aberta, a função tenta estabelecer uma conexão como mysql_connect() seja chamada sem argumentos e usa-a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional result_mode parameter can be MYSQL_USE_RESULT and MYSQL_STORE_RESULT.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro opcional result_mode pode ser MYSQL_USE_RESULT e MYSQL_STORE_RESULT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It defaults to MYSQL_STORE_RESULT, so the result is buffered.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O seu padrão MYSQL_STORE_RESULT, assim seu resultado é colocado no buffer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_unbuffered_query() for the counterpart of this behaviour.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mysql_unbuffered_query() para a sua contrapartida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The query string should not end with a semicolon.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string da query não deve terminar com ponto e virgula(;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only for SELECT,SHOW,EXPLAIN or DESCRIBE statements mysql_query() returns a resource identifier or FALSE if the query was not executed correctly.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente para os comandos SELECT, SHOW, EXPLAIN ou DESCRIBE mysql_query() retorna um identificador de recurso ou FALSE se a query não foi executada corretamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For other type of SQL statements, mysql_query() returns TRUE on success and FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para outros tipos de comandos SQL, mysql_query() retorna TRUE em caso de sucesso e FALSE em erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A non - FALSE return value means that the query was legal and could be executed by the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um valor não FALSE indica que a query foi legal e pode ser executada pelo servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It does not indicate anything about the number of rows affected or returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não indica nada sobre o número de linhas afetadas ou retornadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is perfectly possible for a query to succeed but affect no rows or return no rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É perfeitamente possível para uma query ser bem sucedida, mas não afetar linhas ou retornar linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following query is syntactically invalid, so mysql_query() fails and returns FALSE:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A seguinte query é sintaticamente invalida, assim mysql_query() falha e retorna FALSE:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_query()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. mysql_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php $result = mysql_query( &quot;SELECT * WHERE 1=1&quot;) or die(&quot;Invalid query: &quot;. mysql_error());?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>php $result = mysql_query( &quot;SELECT * WHERE 1=1&quot;) or die(&quot;Query invalida: &quot;. mysql_error());?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following query is semantically invalid if my_col is not a column in the table my_tbl, so mysql_query() fails and returns FALSE:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A seguinte query é semanticamente invalida se my_col não é uma coluna da tabela my_tbl, assim mysql_query() falha e retorna FALSE:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. mysql_query()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. mysql_query()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $result = mysql_query( &quot;SELECT my_col FROM my_tbl&quot;) or die(&quot;Invalid query: &quot;. mysql_error());?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $result = mysql_query( &quot;SELECT my_col FROM my_tbl&quot;) or die (&quot;Query invalida: &quot;. mysql_error());?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_query() will also fail and return FALSE if you don&apos;t have permission to access the table(s) referenced by the query.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_query() irá também falhar e retornar FALSE se você não tiver permissão para acessar a tabela(s) referida(s) pela query.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assuming the query succeeds, you can call mysql_num_rows() to find out how many rows were returned for a SELECT statment or mysql_affected_rows() to find out how many rows were affected by a DELETE, INSERT, REPLACE, or UPDATE statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assumindo que a query seja bem sucedida, você pode chamar mysql_num_rows() para achar quantas linhas foram retornadas para um comando SELECT ou mysql_affected_rows() para achar quantas linhas foram afetadas por um comando DELETE, INSERT, REPLACE, ou UPDATE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only for SELECT,SHOW,DESCRIBE or EXPLAIN statements, mysql_query() returns a new result identifier that you can pass to mysql_fetch_array() and other functions dealing with result tables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente para os comandos SELECT,SHOW,DESCRIBE ou EXPLAIN, mysql_query() retorna um novo identificador de resultado que você pode passar para mysql_fetch_array() e outras funções que lidam com resultados de tabelas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you are done with the result set, you can free the resources associated with it by calling mysql_free_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você terminou de usar o resultado você pode liberar os recursos usados chamando mysql_free_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although, the memory will automatically be freed at the end of the script &apos;s execution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Embora a memória será automaticamente liberada ao final da execução do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_num_rows(), mysql_affected_rows(), mysql_unbuffered_query(), mysql_free_result(), mysql_fetch_array(), mysql_fetch_row(), mysql_fetch_assoc(), mysql_result(), mysql_select_db(), and mysql_connect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_num_rows(), mysql_affected_rows(), mysql_unbuffered_query(), mysql_free_result(), mysql_fetch_array(), mysql_fetch_row(), mysql_fetch_assoc(), mysql_result(), mysql_select_db(), and mysql_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will escape special characters in the unescaped_string, taking into account the current charset of the connection so that it is safe to place it in a mysql_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função irá escapar os caracteres especiais em unescaped_string, levando em conta o atual conjunto de caracteres da conexão, assim é seguro coloca-la em mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_real_escape_string() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_real_escape_string()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_escape_string(), mysql_character_set_name().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_escape_string(), mysql_character_set_name().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_result() returns the contents of one cell from a MySQL result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_result() retorna o conteúdo de uma célula do resultado MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The field argument can be the field&apos; s offset, or the field&apos;s name, or the field&apos;s table dot field name (tablename.fieldname).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento field( campo) pode ser o índice do campo, o nome do campo, o a tabela ponto o nome do campo(tabela.campo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the column name has been aliased (&apos;select foo as bar from.. .&apos;), use the alias instead of the column name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o nome da coluna usa apelido (&apos;select foo as bar from.. .&apos;), use o apelido ao invés do nome da coluna.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando trabalhando com um grande conjunto de resultado, você deve considerar o uso de uma das funções que retornam toda a linha( especificadas abaixo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As these functions return the contents of multiple cells in one function call, they&apos; re MUCH quicker than mysql_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas funções retornam o conteúdo de multiplas células em uma chamada de função, elas são MUITO mais rapidas do que mysql_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Também note que especificar um índice do campo é muito mais rapido do que especificar o nome do campo ou tabela.campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calls to mysql_result() should not be mixed with calls to other functions that deal with the result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Chamadas a mysql_result() não devem ser misturadas com chamadas a outras funções que lidam com o conjunto de resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recommended high-performance alternatives: mysql_fetch_row(), mysql_fetch_array(), and mysql_fetch_object().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alternativas de alta performance recomendadas: mysql_fetch_row(), mysql_fetch_array(), e mysql_fetch_object().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_select_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_select_db() sets the current active database on the server that&apos;s associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_select_db() define o banco de dados ativo no servidor que é associado ao identificador de conexão(link_identifier) especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link identifier is specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum identificador de conexão é especificado, a ultima conexão aberta é assumida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no link is open, the function will try to establish a link as if mysql_connect() was called without arguments, and use it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhuma conexão esta aberta, a função irá tentar abrir uma conexão como se mysql_connect() fosse chamada sem argumentos e usa-la.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Every subsequent call to mysql_query() will be made on the active database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>todas as próximas chamadas a mysql_query() serão feitas no banco de dados ativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_connect(), mysql_pconnect(), and mysql_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_connect(), mysql_pconnect(), e mysql_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For downward compatibility mysql_selectdb() can also be used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para compatibilidade com versões anteriores mysql_selectdb() também pode ser usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_stat</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_stat() returns the current server status.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a complete list of other status variables you have to use the SHOW STATUS SQL command.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma lista completa de outras variáveis de staus você tem que usar o comando SQL SHOW STATUS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_stat() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_stat()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $link = mysql_connect( &apos;localhost&apos;, &quot;mysql_user&quot;, &quot;mysql_password&quot;); $status = explode( &apos;&apos;, mysql_stat($link)); print_r($status);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $link = mysql_connect( &apos;localhost&apos;, &quot;mysql_user&quot;, &quot;mysql_password&quot;); $status = explode( &apos;&apos;,mysql_stat($link)); print_r($status);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mysql_num_rows() function may be used to determine the number of tables in the result pointer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_tablename() usa um ponteiro de resultado retornado por mysql_list_tables() ou um índice inteiro e retorna o nome da tabela A função mysql_num_rows() pode ser usada para determinar o número de tabelas no ponteiro do resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_tablename() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_tablename()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_list_tables().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_list_tables().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_thread_id</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_thread_id() returns the current thread ID.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the connection is lost and you reconnect with mysql_ping(), the thread ID will change.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a conexão for perdida e você reconectar com mysql_ping(), o ID da thread irá muda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means you should not get the thread ID and store it for later.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto indica que você não deve guardar o pegar ID e guarda-lo para depois.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should get it when you need it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve pega-lo quando você precisar dele.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. mysql_thread_id() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo mysql_thread_id()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: mysql_ping(), mysql_list_processes().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: mysql_ping(), mysql_list_processes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_unbuffered_query</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mysql_unbuffered_query() sends a SQL query query to MySQL, without fetching and buffering the result rows automatically, as mysql_query() does.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On the other hand, you can start working on the result set immediately after the first row has been retrieved: you don &apos;t have to wait until the complete SQL query has been performed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mysql_unbuffered_query() envia uma query SQL para MySQL, sem retornar e colocar em buffer as linhas do resultado automaticamente, como mysql_query() faz. por um lado, isto salva uma quantidade considerável de memória em query que produzem um resultado grandes. por outro lado, você pode começãr a trbalhar com o resultado imediatamente após a primeira linha ser retornada: você não tem que esperar que toda a query SQL seja realizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using multiple DB-connects, you have to specify the optional parameter link_identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando usar multiplas conexões com o banco de dados, você deve especificar o parametro opcional link_identifier.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional result_mode parameter can be MYSQL_USE_RESULT and MYSQL_STORE_RESULT.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parametro opcional result_mode pode ser MYSQL_USE_RESULT e MYSQL_STORE_RESULT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It defaults to MYSQL_USE_RESULT, so the result is not buffered.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão é MYSQL_USE_RESULT, assim o resultado não é colocado no buffer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mysql_query() for the counterpart of this behaviour.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mysql_query() para a contraparte desta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot use mysql_num_rows() on a result set returned from mysql_unbuffered_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os beneficios de mysql_unbuffered_query() vem com um custo: você não pode usar mysql_num_rows() no resultado retornado por mysql_unbuffered_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You also have to fetch all result rows from an unbuffered SQL query, before you can send a new SQL query to MySQL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você tmbém tem que pegar todas as linhas de uma query SQL sem buffer antes de poder enviar uma nova query SQL para o MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function implements a sort algorithm that orders alphanumeric strings in the way a human being would.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função implementa o algoritmo de ordenação que ordena strings alfanuméricas da forma que os humanos fariam.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is described as a &quot;natural ordering&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa forma de ordenação é denominada &quot;ordenação natural&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>natcasesort() is a case insensitive version of natsort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>natcasesort() é uma versão de natsort() que não diferencia letras maiúsculas e minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See natsort() for an example of the difference between this algorithm and the regular computer string sorting algorithms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja natsort() para saber a diferença entre esse algoritmo e os algoritmos utlizados normalmente para ordenação de strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information see:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para mais informações veja:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sort(), natsort(), strnatcmp(), and strnatcasecmp().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também sort(), natsort(), strnatcmp() e strnatcasecmp().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function implements a sort algorithm that orders alphanumeric strings in the way a human being would.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função é um implementação do algoritmo que ordena strings alfanuméricas da forma como um ser humano faria.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is described as a &quot;natural ordering&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso é chamado de &quot;ordenação natural&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example of the difference between this algorithm and the regular computer string sorting algorithms (used in sort()) can be seen below:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo da diferença entre esse algoritmo e o algoritmo com o qual o computador classifica strings (usado em sort()) pode ser visto abaixo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. natsort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de natsort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $array1 = $array2 = array (&quot;img12.png&quot;, &quot;img10.png&quot;, &quot;img2.png&quot;, &quot;img1.png&quot;); sort($array1); echo &quot;Standard sorting\n&quot;; print_r($array1); natsort($array2); echo &quot;\nNatural order sorting\n&quot;; print_r($array2);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$array1 = $array2 = array (&quot;img12.png&quot;, &quot;img10.png&quot;, &quot;img2.png&quot;, &quot;img1.png&quot;); sort($array1); echo &quot;Classificação normal\n&quot;; print_r($array1); natsort($array2); echo &quot;\nClassificação da \&quot;ordem natural\&quot;\n&quot;; print_r($array2);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The code above will generate the following output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O código acima geraria a seguinte saída:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Standard sorting Array ([0] = img1.png [1] = img10.png [2] = img12.png [3] = img2.png) Natural order sorting Array ([3] = img1.png [2] = img2.png [1] = img10.png [0] = img12.png)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classificação normal Array ([0] = img1.png [1] = img10.png [2] = img12.png [3] = img2.png) Classificação da &quot;ordem natural &quot;Array ([3] = img1.png [2] = img2.png [1] = img10.png [0] = img12.png)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you&apos; re wanting to maintain index / value associations, consider using usort($arr, &apos;strnatcmp&apos;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se quiser manter a correlação entre chaves e valores, considere a possibilidade de utilizar usort( $arr, &apos;strnatcmp&apos;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also natcasesort(), strnatcmp(), and strnatcasecmp().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também natcasesort(), strnatcmp() e strnatcasecmp().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_addch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_addchnstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_addchstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_addnstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_addstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_assume_default_colors</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_attroff</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_attron</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_attrset</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_baudrate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_beep</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_bkgd</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_bkgdset</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_border</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_can_change_color</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_cbreak</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_clear</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_clrtobot</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_clrtoeol</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_color_set</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_curs_set</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_define_key</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_def_prog_mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_def_shell_mode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_delay_output</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_delch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_deleteln</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_delwin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_doupdate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_echochar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_echo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_end</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_erasechar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_erase</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_filter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_flash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_flushinp</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_getch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_getmouse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ncurses_getmouse() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ncurses_getmouse() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_halfdelay</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_has_colors</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_has_ic</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_has_il</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_has_key</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_hline</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_inch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_init_color</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_init</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_init_pair</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_insch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_insdelln</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_insertln</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_insstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_instr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_isendwin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_keyok</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_killchar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_longname</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mouseinterval</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mousemask</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ncurses_mousemask() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ncurses_mousemask() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_move</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvaddch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvaddchnstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvaddchstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvaddnstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvaddstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvcur</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvdelch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvgetch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvhline</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvinch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is EXPERIMENTAL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é EXPERIMENTAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_mvwaddstr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_napms</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_newwin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_nl</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_nocbreak</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_noecho</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_nonl</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_noqiflush</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_noraw</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_putp</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_qiflush</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_raw</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_refresh</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_resetty</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_savetty</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_scr_dump</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_scr_init</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_scrl</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_scr_restore</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_scr_set</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_attr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_attroff</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_attron</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_attrset</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_clear</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_color</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_init</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_noutrefresh</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_refresh</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_restore</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_slk_touch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_standend</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_standout</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_start_color</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_termattrs</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_termname</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_timeout</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_typeahead</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_ungetch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_ungetmouse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_use_default_colors</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_use_env</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_use_extended_names</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_vidattr</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_vline</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ncurses_wrefresh</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the array element in the next place that &apos;s pointed by the internal array pointer, or FALSE if there are no more elements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o elemento do array que está na próxima posição que é apontada pelo ponteiro interno do array, ou FALSE caso não existam mais elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>next() behaves like current(), with one difference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>next() funciona de forma semelhante a current(), com uma diferença.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It advances the internal array pointer one place forward before returning the element.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele avança o ponteiro interno do array em uma posição antes de retornar o elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That means it returns the next array element and advances the internal array pointer by one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso significa que ela retorna o próximo elemento do array avançando o ponteiro interno em uma posição.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If advancing the internal array pointer results in going beyond the end of the element list, next() returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o ponteiro interno apontar para além do final da lista de elementos, next() retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array contains empty elements, or elements that have a key value of 0 then this function will return FALSE for these elements as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o array contiver elementos vazios, ou se elementos tiverem chaves com 0 como valor então essa função retorna FALSE Se o array contiver elementos vazios, ou se elementos tiverem chaves com 0 como valor então essa função retorna FALSE para esses elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To properly traverse an array which may contain empty elements or elements with key values of 0 see the each() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para percorrer um array que pode conter elementos vazios ou elementos que tenham chaves com 0 como valor veja a função each().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current(), end(), prev(), and reset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também current(), end(), prev() e reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns string with &apos;br /&apos; inserted before all newlines.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna string com &apos;br /&apos; inserido antes de todas as newlines.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 4.0.5, nl2br() is now XHTML compliant.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Começa no PHP 4.0.5, nl2br() está agora em XHTML complacente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All versions before 4.0.5 will return string with &apos;br&apos; inserted before newlines instead of &apos;br /&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as versões anteriores a 4.0.5 retornarão string com &apos;br&apos; inserido antes das newlines ao invés de &apos;br /&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also htmlspecialchars(), htmlentities(), wordwrap(), and str_replace().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também htmlspecialchars(), htmlentities() e wordwrap().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_body</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_copy_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_create_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_create_note</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_drop_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_find_note</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_header_info</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_list_msgs</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_mark_read</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_mark_unread</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_nav_create</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_search</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_unread</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>notes_version</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>number_format</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number_format() returns a formatted version of number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function accepts either one, two or four parameters (not three):</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>number_format() retorna uma versão formatada de number.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If only one parameter is given, number will be formatted without decimals, but with a comma (&quot;,&quot;) between every group of thousands.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se apenas um parâmetro é dado, number será formatado sem decimais, mas com uma virgula (&quot;,&quot;) entre cada grupo de milhar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If two parameters are given, number will be formatted with decimals decimals with a dot (&quot;.&quot;) in front, and a comma (&quot; ,&quot;) between every group of thousands.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se dois parâmetros são dados, number será formatado com o número de casas decimais especificadas em decimals com um ponto (&quot;.&quot;) na frente, e uma vírgula (&quot; ,&quot;) entre cada grupo de milhar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If all four parameters are given, number will be formatted with decimals decimals, dec_point instead of a dot (&quot;.&quot;) before the decimals and thousands_sep instead of a comma (&quot; ,&quot;) between every group of thousands.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se todos os quatro parâmetros forem dados, number será formatado com o número de casas decimais em decimals, dec_point ao invés do ponto (&quot;.&quot;) antes das casas decimais e thousands_sep ao invés de uma vírgula (&quot; ,&quot;) entre os grupos de milhares.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only the first character of thousands_sep is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente o primeiro caractere de thousands_sep é usado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, if you use foo as thousands_sep on the number 1000, number_format() will return 1f000.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, se você usar foo como o parâmetro thousands_sep no número 1000, number_format() irá retornar 1f000.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. number_format() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo number_format()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, French notation usually use two decimals, comma (&apos;,&apos;) as decimal separator, and space (&apos; &apos;) as thousand separator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, a notação Francesa usa duas casas decimais, vírgula (&apos;,&apos;) como separador decimal, e espaço (&apos; &apos;) como separador de milhar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is achieved with this line:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é feito com a linha:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $number = 1234.56; / / english notation (default) $english_format_number = number_format($number); / / 1,234 / / French notation $nombre_format_francais = number_format($number, 2, &apos;,&apos;,&apos; &apos;); / / 1 234,56 $number = 1234.5678; / / english notation without thousands seperator $english_format_number = number_format($number, 2, &apos;.&apos;, &apos;&apos;); / / 1234.57?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $number = 1234.56; / / Notação Inglesa (padrão) $english_format_number = number_format($number); / / 1,234 / / Notação Francesa $nombre_format_francais = number_format($number, 2, &apos;,&apos;,&apos; &apos;); / / 1 234,56 $number = 1234.5678; / / Notação Inglesa com separador de milhar $english_format_number = number_format($number, 2, &apos;.&apos;, &apos;&apos;); / / 1234.57?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sprintf(), printf() and sscanf().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: sprintf(), printf() e sscanf().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ob_get_status</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ob_gzhandler() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ob_gzhandler() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ob_iconv_handler() example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ob_iconv_handler() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ob_start</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will turn output buffering on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Object property and method call overloading</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sobrecarga de propriedades e métodos de objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCICollAssignElem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCIColumnPrecision</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCIColumnScale</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCIColumnTypeRaw</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIDefineByName() binds PHP variables for fetches of SQL-Columns.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.7, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCIError</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIError() returns the last error found.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCIFreeCollection</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCIInternalDebug</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIInternalDebug() enables internal debug output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCILoadLob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCILogOff</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCILogOff() closes an Oracle connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCINewCollection</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.4, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCIParse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIParse() parses the query using conn.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCISaveLobFile</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCISaveLob</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OCIServerVersion</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OCIWriteLobToFile</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the decimal equivalent of the octal number represented by the octal_string argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retornar o decimal equivalente do número octal representado pelo argumento octal_string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The largest number that can be converted is 17777777777 or 2147483647 in decimal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O maior número que pode ser convertido é 17777777777 ou 2147483647 em decimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also decoct().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também decoct().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_binmode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(ODBC SQL types affected:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_columns</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Lists all columns in the requested range.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE on success, FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_commit() commits all pending transactions on the connection_id connexion.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All pending transactions on connection_id are committed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an ODBC connection id or 0 (FALSE) on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_data_source</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error, and an array upon success.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_exec</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Executes a statement prepared with odbc_prepare() .Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Executes a statement prepared with odbc_prepare() .Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_fetch_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. odbc_fetch_into() pre 4.0.6 example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. odbc_fetch_into() pre 4.0.6 example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. odbc_fetch_into() 4.0.6 example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. odbc_fetch_into() 4.0.6 example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. odbc_fetch_into() 4.2.0 example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. odbc_fetch_into() 4.2.0 example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_fetch_object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_free_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Always returns TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_longreadlen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_next_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_pconnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_prepare</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_procedures</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Lists all procedures in the requested range.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_result_all</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of rows in the result or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the contents of the field.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.17, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>odbc_tables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Lists all tables in the requested range.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>opendir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a directory handle to be used in subsequent closedir(), readdir(), and rewinddir() calls.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can suppress the error output of opendir() by prepending `@ &apos;to the front of the function name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um handle de diretório para ser usado em chamadas subsequentes a closedir(), readdir(), e rewinddir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. opendir() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode suprimir o erro na saída de opendir() no seu script ao se inserir `@ &apos;na frente do nome da função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_dir().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo de opendir()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>getcwd</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>readdir</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Acima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. openlog() Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. openlog() Options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2. openlog() Facilities</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 2. openlog() Facilities</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_csr_new() example - creating a self-signed-certificate</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_csr_new() example - creating a self-signed-certificate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_csr_sign() example - signing a CSR (how to implement your own CA)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_csr_sign() example - signing a CSR (how to implement your own CA)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_error_string() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_error_string() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>openssl_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If successful the opened data is returned in open_data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_open() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_open() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_pkcs7_decrypt() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_pkcs7_decrypt() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_pkcs7_encrypt() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_pkcs7_encrypt() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_pkcs7_sign() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_pkcs7_sign() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>openssl_private_encrypt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>openssl_public_decrypt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>openssl_public_encrypt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_seal() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_seal() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>openssl_sign</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_sign() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_sign() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>openssl_verify</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. openssl_verify() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. openssl_verify() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. openssl_x509_checkpurpose() purposes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. openssl_x509_checkpurpose() purposes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>openssl_x509_parse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_Bind</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the bind succeeds, otherwise FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_Close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE if the close succeeds, otherwise FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_Commit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Details about the error can be retrieved using the ora_error() and ora_errorcode() functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_CommitOff</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PrÃ³xima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_Exec</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_Fetch_Into</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Fetches a row of data into an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ora_fetch_into()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ora_fetch_into()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_GetColumn</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the column data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_Logoff</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ora_Open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens an Oracle cursor associated with connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the ASCII value of the first character of string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o valor ASCII do primeiro caractere de string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function complements chr().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função complementa chr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ord() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo ord()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (ord($str) == 10) {echo &quot;The first character of \$str is a line feed.\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if (ord($str) == 10) {echo &quot;O primeiro caractere de \$str é uma nova linha.\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find an ASCII-table over here: http: / /www.asciitable.com.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode achar a tabela ASCII aqui: http: / /www.asciitable.com.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also chr().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também chr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The overload() function will enable property and method call overloading for a class identified by class_name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função overload() ativa a chamada sobrecarregada de propriedades e métodos para a classe identificada por class_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See an example in the introductory section of this part.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja o exemplo na seção introdutória desse módulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ovrimos_connect() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ovrimos_connect() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ovrimos_exec</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_exec() is used to execute an SQL statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ovrimos_execute</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_execute() is used to execute an SQL statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ovrimos_fetch_row</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_fetch_row() is used to fetch a row from the result set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A fetch row example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ovrimos_free_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_free_result() is used to free the result_id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ovrimos_num_fields</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_num_fields() is used to get the number of columns.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ovrimos_prepare</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_prepare() is used to prepare an SQL statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. ovrimos_result_all example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. ovrimos_result_all example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ovrimos_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ovrimos_result() is used to retrieve the output column.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pack() format string</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pack() format string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>parse_ini_file() loads in the ini file specified in filename, and returns the settings in it in an associative array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>parse_ini_file() carrega o arquivo INI informado no nomedoarquivo, e retorna as configurações dele em um array associativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By setting the last process_sections parameter to TRUE, you get a multidimensional array, with the section names and settings included.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao usar processar_secoes como TRUE, você receberá um array multidimensional, com os nomes das seções e os parametros incluidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default for process_sections is FALSE</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O padrão (default) para processar_secoes é FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function has nothing to do with the php.ini file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não tem nada a ver com o arquivo php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is already processed, the time you run your script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este já é processado na hora que você executa o script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function can be used to read in your own application &apos;s configuration files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função pode ser usada para ler os arquivos de configuração de sua própria aplicação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a value in the ini file contains any non-alphanumeric characters it needs to be enclosed in double-quotes (&quot;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo INI tem qualquer caracter não alfanumérico, eles precisam estar delimitados por aspas (&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.2.1 this function is also affected by safe_mode and open_basedir.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.1, esta função é afetada por safe_mode e open_basedir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The structure of the ini file is similar to that of the php.ini &apos;s.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A estrutura do arquivo ini é similar a do php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may also be parsed in the ini file so if you define a constant as an ini value before running parse_ini_file(), it will be integrated into the results.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo INI que você está tentando interpretar estiver mal formado, o PHP pára.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only ini values are evaluated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Conteúdo de exemplo.ini</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>; This is a sample configuration file; Comments start with &apos;;&apos;, as in php.ini [first_section] one = 1 five = 5 animal = BIRD [second_section] path = / usr / local / bin URL = &quot;http: / /www.example.com / ~username &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>; Este é um arquivo de configuração de exemplo; Comentário começam com &apos;;&apos;, como no php.ini [primeira_secao] um = 1 cinco = 5 [segunda_secao] path = / usr / local / bin URL = &quot;http: / /www.example.com / ~username &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. parse_ini_file() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. exemplo de parse_ini_file()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php define (&apos;BIRD&apos;, &apos;Dodo bird&apos;); / / Parse without sections $ini_array = parse_ini_file(&quot;sample.ini&quot;); print_r($ini_array); / / Parse with sections $ini_array = parse_ini_file(&quot;sample.ini&quot;, TRUE); print_r($ini_array);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Parse sem as seções $ini_array = parse_ini_file( &quot;exemplo.ini&quot;); print_r($ini_array); / / Parse com as seções $ini_array = parse_ini_file(&quot;exemplo.ini&quot;, TRUE); print_r($ini_array);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Would produce:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Irá produzir:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([one] = 1 [five] = 5 [animal] = Dodo bird [path] = / usr / local / bin [URL] = http: / /www.example.com / ~username) Array ([first_section] = Array ([one] = 1 [five] = 5 [animal] = Dodo bird) [second_section] = Array ([path] = / usr / local / bin [URL] = http: / /www.example.com / ~username))</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([um] = 1 [cinco] = 5 [path] = / usr / local / bin [URL] = http: / /www.example.com / ~username) Array ([primeira_secao] = Array ([um] = 1 [cinco] = 5) [segunda_secao] = Array ([path] = / usr / local / bin [URL] = http: / /www.example.com / ~username))</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parses str as if it were the query string passed via an URL and sets variables in the current scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Converte str como se ela tivesse sido passada via URL e define o valor das variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the second parameter arr is present, variables are stored in this variable as an array elements instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o segundo parâmetro arr estiver presente, as variáveis são colocadas nesta variável como uma matriz de elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for the optional second parameter was added in PHP 4.0.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte para o segundo parâmetro, que é opcional, foi adicionado no PHP 4.0.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, you may want to read the section on variables from outside of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para pegar a QUERY_STRING atual, você deve usar a variável $_SERVER[ &apos;QUERY_STRING&apos;]. também você deve querer ler a seção sobre variáveis de fora do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using parse_str()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando parse_str()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also parse_url(), pathinfo(), set_magic_quotes_runtime(), and urldecode().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também parse_url(), pathinfo(), set_magic_quotes_runtime(), e urldecode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an associative array returning any of the various components of the URL that are present.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>parse_url</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>query - after the question mark?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is not meant to validate the given URL, it only breaks it up into the above listed parts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna um array associativo qualquer um dos vários componentes de uma URL que estão presentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto inclui &quot;scheme&quot;, &quot;host&quot;, &quot;port&quot;, &quot;user&quot;, &quot;pass&quot;, &quot;path&quot;, &quot;query&quot;, e &quot;fragment&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pathinfo() returns an associative array containing information about path.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pathinfo() retorna um array associatico contendo informações sobre o path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following array elements are returned: dirname, basename and extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O seguinte elementos do array são retornados: dirname, basename e extension.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pathinfo() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de pathinfo()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $path_parts = pathinfo( &quot;/ www / htdocs / index.html&quot;); echo $path_parts[&quot;dirname&quot;]. &quot;\n&quot;; echo $path_parts[&quot;basename&quot;]. &quot;\n&quot;; echo $path_parts[&quot;extension&quot;]. &quot;\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $partes_do_path = pathinfo( &quot;/ www / htdocs / index.html&quot;); echo $partes_do_path[&quot;dirname&quot;]. &quot;\n&quot;; echo $partes_do_path[&quot;basename&quot;]. &quot;\n&quot;; echo $partes_do_path[&quot;extension&quot;]. &quot;\n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Would produce:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Produzirá:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For information on retrieving the current path info, read the section on predefined reserved variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para informações na recuperação da informação do diretório atual, leia a seção variáveis predefinidas reservadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also dirname(), basename(), parse_url() and realpath().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também dirname(), basename(), parse_url() e realpath().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes a file pointer to a pipe opened by popen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fecha um ponteiro de arquivo a uma pipe aberta por popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must have been returned by a successful call to popen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro de arquivo tem que ser válido e tem que ser retornado por uma chamada bem sucedida a função popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the termination status of the process that was run.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o status da finalização do processo que estava rodando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also popen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também popen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pcntl_fork() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pcntl_fork() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pcntl_signal() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pcntl_signal() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. possible values for pid</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. possible values for pid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2. possible values for options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 2. possible values for options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pcntl_wexitstatus</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the return code of a terminated child.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_add_outline() is replaced by pdf_add_note()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_add_annotation - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_add_outline - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_add_bookmark().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_begin_page</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Add a new page to the document.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_continue_text</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Print text at the next line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_findfont</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prepare a font for later use with pdf_setfont().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pdf_findfont() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pdf_findfont() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_get_buffer</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Get the contents of the PDF output buffer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_get_font - - Deprecated: font handling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_get_fontname - - Deprecated: font handling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_get_fontsize - - Deprecated: font handling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_moveto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current point.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current point for graphics and the current text output position are maintained separately.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_open_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Create a new PDF file using the supplied file name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_open_gif - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_open() is deprecated, use pdf_new() plus pdf_open_file() instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Open a new pdf object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_open_image_file</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Open an image file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_open_image</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use image data from a variety of data sources.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_open_jpeg - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_open_png - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_open_tiff</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_char_spacing - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_setcolor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the current color space and color.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_duration - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_set_value().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_font - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should use pdf_findfont() plus pdf_setfont() instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_horiz_scaling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_leading - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pdf_set_value(),</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_set_paramter().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_text_matrix - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_text_rendering - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See pdf_set_value(),</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_text_rise - - Deprecated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pdf_set_word_spacing - - Depriciated:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pfpro_init</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pfpro_init() is used to initialise the Payflow Pro library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pfpro_process</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pfpro_process_raw</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_affected_rows() returns the number of tuples (instances / records / rows) affected by INSERT, UPDATE, and DELETE queries executed by pg_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_affected_rows() retorna o número de linhas (instâncias / registros / linhas) afetados por consultas (queries) INSERT, UPDATE e DELETE executados por pg_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no tuple is affected by this function, it will return 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhuma linha foi afetada, ela retornará 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_affected_rows()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pg_affected_rows()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $result = pg_query ($conn, &quot;INSERT INTO publisher VALUES (&apos;Author&apos;)&quot;); $cmdtuples = pg_affected_rows ($result); echo $cmdtuples. &quot;tuples are affected .&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $result = pg_query ($conn, &quot;INSERT INTO publisher VALUES (&apos;Author&apos;)&quot;); $cmdtuples = pg_affected_rows ($result); echo $cmdtuples. &quot;linhas foram afetadas .&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_cmdtuples().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função costumava ser chamada de pg_cmdtuples().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_query() and pg_num_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_query() e pg_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções para PostgreSQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_cancel_query() cancel asynchronous query sent by pg_send_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_cancel_query() cancela uma consulta (query) assíncrona enviada por pg_send_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot cancel query executed by pg_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode cancelar uma consulta executada por pg_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_send_query() and pg_connection_busy()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_send_query() e pg_connection_busy()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only, PHP 4 = 4.0.3)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_client_encoding</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_client_encoding() returns the client encoding as the string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned string should be either:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_client_encoding() retorna a codificação do cliente como uma string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SQL_ASCII, EUC_JP, EUC_CN, EUC_KR, EUC_TW, UNICODE, MULE_INTERNAL, LATINX (X=1...9), KOI8, WIN, ALT, SJIS, BIG5, WIN1250.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string de retorno pode ser SQL_ASCII, EUC_JP, EUC_CN, EUC_KR, EUC_TW, UNICODE, MULE_INTERNAL, LATINX (X=1...9), KOI8, WIN, ALT, SJIS, BIG5, WIN1250.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If libpq is compiled without multibyte encoding support, pg_set_client_encoding() always return &quot;SQL_ASCII &quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função requer PHP 4.0.3 ou maior e PostgreSQL 7.0 ou maior Se a libpq foi compilada sem suporte a codificação multibyte, pg_set_client_encoding() sempre retornará &quot;SQL_ASCII &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Supported encoding depends on PostgreSQL version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As codificações suportadas dependem da versão do PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Refer to PostgreSQL manual for details to enable multibyte support and encoding supported.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vide o manual do PostgreSQL para mais detalhes sobre como habilitar o suporte a multibyte e outras codificações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function used to be called pg_clientencoding().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função costumava ser chamada pg_clientencoding().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_set_client_encoding().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_set_client_encoding().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_close() closes the non-persistent connection to a PostgreSQL database associated with the given connection pg_close() closes the non-persistent connection to a PostgreSQL database associated with the given connection resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_close() fecha a conexão não persistente com servidor de banco de dados PostgreSQL associado ao recurso (resource) connection dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using pg_close() is not usually necessary, as non-persistent open connections are automatically closed at the end of the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Normalmente, o uso de pg_close() não é necessário já que conexões não persistentes abertas são automaticamente fechadas ao final do processamento do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is open large object resource on the connection, do not close the connection before closing all large object resources.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se existem recursos (resource) de objetos grandes (large objects) abertos na conexão, não feche a conexão antes de fechar todos os recursos relacionados com estes objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_connect() returns a connection resource that is needed by other PostgreSQL functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_connect() retorna um recurso (resource) de conexão que é necessário para outras funções para PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_connect() opens a connection to a PostgreSQL database specified by the connection_string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_connect() abre uma conexão com um servidor de banco de dados PostgreSQL especificado por connection_string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns a connection resource on success.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um recurso (resource) de conexão em caso de sucesso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if the connection could not be made. connection_string should be a quoted string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se a conexão não pôde ser estabelecida. connection_string deve ser uma string entre aspas duplas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using pg_connect</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando pg_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $dbconn = pg_connect (&quot;dbname=mary&quot;); / /connect to a database named &quot;mary &quot;$dbconn2 = pg_connect (&quot;host=localhost port=5432 dbname=mary&quot;); / / connect to a database named &quot;mary&quot; on &quot;localhost &quot;at port &quot;5432&quot; $dbconn3 = pg_connect (&quot;host=sheep port=5432 dbname=mary user=lamb password=foo&quot;); / /connect to a database named &quot;mary &quot;on the host &quot;sheep&quot; with a username and password $conn_string = &quot;host=sheep port=5432 dbname=test user=lamb password=bar&quot;; $dbconn4 = pg_connect ($conn_string); / /connect to a database named &quot;test &quot;on the host &quot;sheep&quot; with a username and password?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $bdcon = pg_connect (&quot;dbname=flavia&quot;); / /conecta a um banco de dados chamado &quot;flavia &quot;$bdcon2 = pg_connect (&quot;host=localhost port=5432 dbname=flavia&quot;); / / conecta a um banco de dados chamado &quot;flavia&quot; em &quot;localhost &quot;na porta &quot;5432&quot; $bdcon3 = pg_connect (&quot;host=ovelha port=5432 dbname=flavia user=ze password=buu&quot;); / /conecta a um banco de dados chamado &quot;flavia &quot;na máquina &quot;ovelha&quot; com um usuário e senha $con_string = &quot;host=ovelha port=5432 dbname=flavia user=ze password=buu&quot;; $bdcon4 = pg_connect ($con_string); / /coneta a um banco de dados chamado &quot;flavia &quot;na máquina &quot;ovelha&quot; com um usuário e senha?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a second call is made to pg_connect() with the same connection_string, no new connection will be established, but instead, the connection resource of the already opened connection will be returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se uma segunda chamada é feita para pg_connect() com a mesma connection_string, nenhuma nova conexão será estabelecida, ao invés disso, o recurso (resource) de conexão da conexão que já está aberta será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can have multiple connections to the same database if you use different connection string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode ter multiplas conexões para o mesmo banco de dados se você usar diferentes strings de conexão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The old syntax with multiple parameters $conn = pg_connect (&quot;host&quot;, &quot;port&quot;, &quot;options&quot;, &quot;tty&quot;, &quot;dbname&quot;) has been deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe antiga com parâmetros múltiplos $con = pg_connect (&quot;host&quot;, &quot;port&quot;, &quot;options&quot;, &quot;tty&quot;, &quot;dbname&quot;) se tornou obsoleta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_pconnect(), pg_close(), pg_host(), pg_port(), pg_tty(), pg_options() and pg_dbname().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_pconnect(), pg_close(), pg_host(), pg_port(), pg_tty(), pg_options() e pg_dbname().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_connection_busy() returns TRUE if the connection is busy.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_connection_busy() retorna TRUE se a conexão está ocupada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is busy, a previous query is still executing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se estiver ocupada, significa que uma consulta (query) anterior ainda está sendo executada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If pg_get_result() is called, it will be blocked.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se pg_get_result() for chamada, será bloqueada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connection_status() and pg_get_result()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_connection_status() e pg_get_result()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_connection_reset</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_connection_reset() resets the connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is useful for error recovery.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_connection_reset() reinicia uma conexão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connect(), pg_pconnect() and pg_connection_status()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_connect(), pg_pconnect() e pg_connection_status()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_connection_status</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_connection_status() returns a connection status.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possible statuses are PGSQL_CONNECTION_OK and PGSQL_CONNECTION_BAD.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os status possíveis são PGSQL_CONNECTION_OK e PGSQL_CONNECTION_BAD.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connection_busy().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_connection_busy().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_convert() check and convert assoc_array suitable for SQL statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_convert() checa e converte assoc_array em uma declaração SQL apropriada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is experimental.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é experimental.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_metadata()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_metadata()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_copy_from</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_copy_from() insert records into a table from rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It issues COPY FROM SQL command internally to insert records.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usa o comando interno COPY FROM para inserir registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_copy_to()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_copy_to()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_copy_to</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_copy_to() copies a table to an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It issues COPY TO SQL command internally to insert records.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utiliza internamente o comando SQL COPY TO para inserir os registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resulting array is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Seu retorno é o array resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Caso haja falhas, FALSE é retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_copy_from()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_copy_from()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_dbname() returns the name of the database that the given PostgreSQL connection resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_dbname() retorna o nome do banco de dados para um dado recurso (resource) de conexão connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE, if connection is not a valid PostgreSQL connection resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE, se connection não é um recurso de conexão PostgreSQL válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_delete() deletes record condition specified by assoc_array which has field= value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_delete() remove registros que seguem a condição especificada por assoc_array que tem o formato campo = valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If option is specified, pg_convert() is applied to assoc_array with specified option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se options for especificado, pg_convert() é aplicada a assoc_array com a opção especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_delete</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pg_delete</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $db = pg_connect (&apos;dbname=foo&apos;); / / This is safe, since $_POST is converted automatically $res = pg_delete($db, &apos;post_log&apos;, $_POST); if ($res) {echo &quot;POST data is deleted: $res\n&quot;;} else {echo &quot;User must have sent wrong inputs\n&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $db = pg_connect (&apos;dbname=flavia&apos;); / / Isto é seguro, já que $_POST é convertido automaticamente $res = pg_delete($db, &apos;post_log&apos;, $_POST); if ($res) {echo &quot;Dados de POST foram removidos: $res\n&quot;;} else {echo &quot;O usuário deve ter enviado parâmetros inválidos\n&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_convert()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_convert()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_end_copy() syncs the PostgreSQL frontend (usually a web server process) with the PostgreSQL server after doing a copy operation performed by pg_put_line(). pg_end_copy() pg_end_copy() syncs the PostgreSQL frontend (usually a web server process) with the PostgreSQL server after doing a copy operation performed by pg_put_line(). pg_end_copy() must be issued, otherwise the PostgreSQL server may get out of sync with the frontend and will report an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_end_copy() sincroniza o frontend PostgreSQL (geralmente um processo de servidor HTTP) com o servidor PostgreSQL depois de fazer uma operação de cópia usando pg_put_line(). pg_end_copy() deve ser chamada, caso contrário o servidor PostgreSQL pode perder a sincronia com o frontend fazendo com que o servidor gere um erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For further details and an example, see also pg_put_line().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores detalhes e um exemplo, veja também pg_put_line().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_escape_bytea() escapes string for bytea datatype.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_escape_bytea() gera uma string do tipo bytea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns escaped string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string com escapes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you SELECT bytea type, PostgreSQL returns octal byte value prefixed by\ (e.g. \032).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você usa SELECT bytea type, o PostgreSQL retorna valores de byte octais prefixados por\ (ex.: \032).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users are supposed to convert back to binary format by yourself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usuários devem converter de volta para binários por si mesmos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function requires PostgreSQL 7.2 or later.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função exige PostgreSQL 7.2 ou superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With PostgreSQL 7.2.0 and 7.2.1, bytea type must be casted when you enable multi-byte support. i.e.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com PostgreSQL 7.2.0 e 7.2.1, o tipo de dados bytea deve ser criado quando você habilita o suporte a multi-byte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>INSERT INTO test_table (image) VALUES (&apos;$image_escaped&apos;::bytea); PostgreSQL 7.2.2 or later does not need cast.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, INSERT INTO tabela_teste (imagem) VALUES (&apos;$imagem_escaped&apos;::bytea); Por exemplo, INSERT INTO tabela_teste (imagem) VALUES (&apos;$imagem_escaped&apos;::bytea); PostgreSQL 7.2.2 ou superior não precisa de coerção (cast).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Exception is when client and backend character encoding does not match, there may be multi-byte stream error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A exceção é quando a codificação de caracteres do cliente e do backend não combinam, então pode haver erro de fluxo de multi-byte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>User must cast to bytea to avoid this error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O usuário deve fazer a coerção (cast) para bytea para evitar este erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Newer PostgreSQL will support unescape function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Versões do PostgreSQL mais novas suportarão a função unescape.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for built-in unescape function will be added when it &apos;s available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte para a função interna unescape será adicionada assim que estiver disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_escape_string()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_escape_string()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_escape_string() escapes string for text / char datatype.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_escape_string() gera strings do tipo text / chat.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns escaped string for PostgreSQL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string com escapes para PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of this function is recommended instead of addslashes().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O uso desta função é recomendado no lugar de addslashes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_escape_bytea()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_escape_bytea()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_all() returns an array that contains all row (tuples / records) in result resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_all() retorna uma array que contém todas as linhas (registros) do recurso (resourse) de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE, if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE, se não existem mais registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_fetch_row(), pg_fetch_array(), pg_fetch_object() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_fetch_row(), pg_fetch_array(), pg_fetch_object() e pg_fetch_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL fetch array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retornando linhas (registros) no PostgreSQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = pg_pconnect (&quot;dbname=publisher&quot;); if (!$conn) {echo &quot;An error occured.\n&quot;; exit;} $result = pg_query ($conn, &quot;SELECT * FROM authors&quot;); if (!$result) {echo &quot;An error occured.\n&quot;; exit;} $arr = pg_fetch_all ($result, 0, PGSQL_NUM); var_dump($arr);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $conn = pg_pconnect (&quot;dbname=escritor&quot;); if (!$conn) {echo &quot;Ocorreu um erro!\n&quot;; exit;} $result = pg_query ($conn, &quot;SELECT * FROM authors&quot;); if (!$result) {echo &quot;Ocorreu um erro!\n&quot;; exit;} $arr = pg_fetch_all ($result, 0, PGSQL_NUM); var_dump($arr);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_array() returns an array that corresponds to the fetched row (tuples / records).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_array() retorna um array que corresponde à linha (registro).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE, if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se não existem mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_array() is an extended version of pg_fetch_row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_array() é uma versão extendida de pg_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to storing the data in the numeric indices (field index) to the result array, it also stores the data in associative indices (field name) by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além de armazenar os dados em índices numéricos (índice) no array resultante, também armazena os dados em chaves associativas (nome do campo) por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>row is row (record) number to be retrieved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>row é o número da linha (registro) a ser recuperado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First row is 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A primeira linha é 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result_type is optional parameter controls how return value is initialized. result_type is a constant and can take the following values:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>result_type é um parâmetro opcional que controla como o valor de retorno é iniciado. result_type é uma constante e pode ter os seguintes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PGSQL_ASSOC, PGSQL_NUM, and PGSQL_BOTH. pg_fetch_array() PGSQL_ASSOC, PGSQL_NUM, and PGSQL_BOTH. pg_fetch_array() returns associative array that has field name as key for PGSQL_ASSOC. field index as key with PGSQL_NUM and both field name / index as key with PGSQL_BOTH.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Índice de campo como chave com PGSQL_NUM e ambos nome / índice numérico como chave com PGSQL_BOTH.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default is PGSQL_BOTH.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_array() is NOT significantly slower than using pg_fetch_row(), while it provides a significant ease of use.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_array() NÃO é significativamente mais lenta que pg_fetch_row(), e ainda fornece uma significativa facilidade de uso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_fetch_row() and pg_fetch_object() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_fetch_row(), pg_fetch_object() e pg_fetch_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = pg_pconnect (&quot;dbname=publisher&quot;); if (!$conn) {echo &quot;An error occured.\n&quot;; exit;} $result = pg_query ($conn, &quot;SELECT * FROM authors&quot;); if (!$result) {echo &quot;An error occured.\n&quot;; exit;} $arr = pg_fetch_array ($result, 0, PGSQL_NUM); echo $arr[0]. &quot;- array\n&quot;; $arr = pg_fetch_array ($result, 1, PGSQL_ASSOC); echo $arr[&quot;author&quot;].&quot; - array\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $conn = pg_pconnect (&quot;dbname=publicar&quot;); if (!$conn) {echo &quot;Um erro ocorreu.\n&quot;; exit;} $result = pg_query ($conn, &quot;SELECT * FROM autores&quot;); if (!$result) {echo &quot;Um erro ororreu.\n&quot;; exit;} $arr = pg_fetch_array ($result, 0, PGSQL_NUM); echo $arr[0]. &quot;- array\n&quot;; $arr = pg_fetch_array ($result, 1, PGSQL_ASSOC); echo $arr[&quot;autor&quot;].&quot; - array\n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>From 4.1.0, row became optional.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.1.0, row tornou-se opcional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calling pg_fetch_array() will increment internal row counter by 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A chamada pg_fetch_array() irá incrementar o contador de linha interno em 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_assoc() returns an associative array that corresponds to the fetched row (tuples / records).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_assoc() retorna um array associativo que corresponde à linha (registro) recuperado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE, if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE, se não houver mais registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_assoc() is an extended version of pg_fetch_row().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_assoc() é uma versão extendida de pg_fetch_row().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to storing the data in the numeric indices (field index) to the result array, it also stores the data in associative indices (field name) by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além de guardar em índices numéricos, no array resultante, também guarda dados em arrays com chaves associativas (nome do campo) por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_assoc() is NOT significantly slower than using pg_fetch_row(), while it provides a significant ease of use.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_assoc() NÃO é significativamente mais lenta que pg_fetch_row(), e ainda fornece uma significativa facilidade de uso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_fetch_row(), pg_fetch_array(), pg_fetch_assoc(), pg_fetch_object() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_fetch_row(), pg_fetch_array(), pg_fetch_object() e pg_fetch_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = pg_pconnect (&quot;dbname=publisher&quot;); if (!$conn) {echo &quot;An error occured.\n&quot;; exit;} $result = pg_query ($conn, &quot;SELECT * FROM authors&quot;); if (!$result) {echo &quot;An error occured.\n&quot;; exit;} $arr = pg_fetch_assoc ($result, 1, PGSQL_ASSOC); echo $arr[&quot;author&quot;]. &quot;- array\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $conn = pg_pconnect (&quot;dbname=revista&quot;); if (!$conn) {echo &quot;Ocorreu um erro.\n&quot;; exit;} $result = pg_query ($conn, &quot;SELECT * FROM authors&quot;); if (!$result) {echo &quot;Ocorreu um erro.\n&quot;; exit;} $arr = pg_fetch_assoc ($result, 1, PGSQL_ASSOC); echo $arr[&quot;author&quot;]. &quot;- array\n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_object() returns an object with properties that correspond to the fetched row.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_object() retorna um objeto com propriedades que correspondem à linha recuperada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if there are no more rows or error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se não existem mais linhas ou no caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_object() is similar to pg_fetch_array(), with one difference - an object is returned, instead of an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_object() é similar a pg_fetch_array(), com uma diferença - um objeto é retornado, ao invés de um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Indiretamente, isto significa que você pode acessar os dados somente através dos nomes de campos, e não por seus índices (números são nomes inválidos de propriedades).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>row is row (record) number to be retrieved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>row é o número da linha (registro) a ser recuperada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Speed-wise, the function is identical to pg_fetch_array(), and almost as quick as pg_fetch_row() (the difference is insignificant).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em termos de performance, a função é idêntica a pg_fetch_array(), e quase tão rápida quanto pg_fetch_row() (a diferença é insignificante).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>From 4.1.0, row is optional.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.1.0, row é opcional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>From 4.3.0, result_type is default to PGSQL_ASSOC while older versions&apos; default was PGSQL_BOTH.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PHP 4.3.0, result_type tem PGSQL_ASSOC como valor padrão, enquanto em outras versões mais antigas o padrão é PGSQL_BOTH.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no use for numeric property, since numeric property name is invalid in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há utilidade para a propriedade numérica, já que nomes de propriedades numéricas são inválidas em PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result_type may be deleted in future versions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro result_type deverá ser removido em versões futuras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_query(), pg_fetch_array(), pg_fetch_row() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_query(), pg_fetch_array(), pg_fetch_row() e pg_fetch_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>H1 Failed connecting to postgres database ?php echo $database? / H1 ?php exit; endif; $qu = pg_query ($db_conn, &quot;SELECT * FROM verlag ORDER BY autor&quot;); $row = 0; / / postgres needs a row counter other dbs might not while ($data = pg_fetch_object ($qu, $row)) {echo $data - autor. &quot;(&quot;; echo $data - jahr .&quot;):&quot;; echo $data - titel. &quot;BR&quot;; $row++;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>H1 Falha ao conectar com o banco de dados PostgreSQL ?php echo $database? / H1 ?php exit; endif; $qu = pg_query ($db_conn, &quot;SELECT * FROM verlag ORDER BY autor&quot;); $row = 0; / / postgresql precisa de um contador de linha, outros dbs talvez não precisem while ($data = pg_fetch_object ($qu, $row)) {echo $data - autor. &quot;(&quot;; echo $data - jahr .&quot;):&quot;; echo $data - titel. &quot;BR&quot;; $row++;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PRE ?php $fields[] = Array (&quot;autor&quot;, &quot;Author&quot;); $fields[] = Array (&quot;jahr&quot;, &quot;Year&quot;); $fields[] = Array (&quot;titel&quot;,&quot; Title&quot;); $row= 0; / / postgres needs a row counter other dbs might not while ($data = pg_fetch_object ($qu, $row)) {echo &quot;----------\n&quot;; reset ($fields); while (list (,$item) = each ($fields)): echo $item[1] .&quot;: &quot;.$data - $item[0] .&quot;\n&quot;; endwhile; $row++;} echo &quot;----------\n&quot;;? / PRE ?php pg_free_result ($qu); pg_close ($db_conn);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PRE ?php $fields[] = Array (&quot;autor&quot;, &quot;Autor&quot;); $fields[] = Array (&quot;jahr&quot;, &quot;Ano&quot;); $fields[] = Array (&quot;titel&quot;,&quot; Título&quot;); $row= 0; while ($data = pg_fetch_object ($qu, $row)) {echo &quot;----------\n&quot;; reset ($fields); while (list (,$item) = each ($fields)): echo $item[1] .&quot;: &quot;.$data - $item[0] .&quot;\n&quot;; endwhile; $row++;} echo &quot;----------\n&quot;;? / PRE ?php pg_free_result ($qu); pg_close ($db_conn);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calling pg_fetch_object() will increment internal row counter counter by 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao chamar pg_fetch_object() o contador de linhas interno será acrescentado de 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row and field specify what cell in the table of results to return.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_result() retorna valores a partir de um recurso (resource) de resultado result criado por pg_query(). row é um inteiro. field é um nome de campo (string) ou um índice de campo (inteiro). row e field especificam que célula da tabela deve ser recuperada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Row numbering starts from 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A numeração de linhas começa de 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of naming the field, you may use the field index as an unquoted number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés de nomear o campo, você pode usar o índice numérico de campo sem aspas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Field indices start from 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Índices de campo iniciam-se em 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL has many built in types and only the basic ones are directly supported here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PostgreSQL tem muitos tipos internos mas apenas os tipos básicos são suportados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All forms of integer types are returned as integer values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as formas de tipo integer são retornadas como valores integer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All forms of float, and real types are returned as float All forms of float, and real types are returned as float values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as formas de tipos reais (ponto flutuante) são retornados como valores float.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Boolean is returned as &quot;t&quot; or &quot;f &quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Boolean é retornado como &quot;t&quot; ou &quot;f &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All other types, including arrays are returned as strings formatted in the same default PostgreSQL manner that you would see in the psql program.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todos os outros tipos, incluindo arrays, são retornados como strings formatadas na mesma maneira padrão que o PostgreSQL retornaria com o programa psql.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_fetch_row() fetches one row of data from the result associated with the specified result resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_fetch_row() retorna uma linha de dados a partir do resultado associado com o recurso (resource) de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The row (record) is returned as an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A linha (registro) é recuperada como um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each result column is stored in an array offset, starting at offset 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada coluna do resultado é armazenada em um índice do array, iniciando-se no índice 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns an array that corresponds to the fetched row, or FALSE if there are no more rows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um array que corresponde à linha carregada, ou FALSE se não existem mais linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: pg_query(), pg_fetch_array(), pg_fetch_object() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_query(), pg_fetch_array(), pg_fetch_object() e pg_fetch_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Postgres fetch row</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retornando linhas (registros) no PostgreSQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = pg_pconnect (&quot;dbname=publisher&quot;); if (!$conn) {echo &quot;An error occured.\n&quot;; exit;} $result = pg_query ($conn, &quot;SELECT * FROM authors&quot;); if (!$result) {echo &quot;An error occured.\n&quot;; exit;} while ($row = pg_fetch_row($result, $i)) {for ($j=0; $j count($row); $j++) {echo &quot;$row[$j] nbsp ;&quot;;} echo &quot;BR&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $conn = pg_pconnect (&quot;dbname=editora&quot;); if (!$conn) {echo &quot;Um erro ocorreu.\n&quot;; exit;} $result = pg_query ($conn, &quot;SELECT * FROM autores&quot;); if (!$result) {echo &quot;Um erro ocorreu.\n&quot;; exit;} $num = pg_num_rows($result); for ($i=0; $i $num; $i++) {$r = pg_fetch_row($result, $i); for ($j=0; $j count($r); $j++) {echo &quot;$r[$j] nbsp ;&quot;;} echo &quot;BR&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calling pg_fetch_row() will increment internal row counter by 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao chamar pg_fetch_row(), o contador de linha interno será incrementado em 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_field_is_null</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_field_is_null() test if a field is NULL or not.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns 1 if the field in the given row is NULL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_field_is_null() testa se um campo é NULL ou não.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns 0 if the field in the given row is NOT NULL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna 0 se o campo na linha dada NÃO é NULL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Field can be specified as column index (number) or fieldname (string).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O campo pode ser especificado como um índice de coluna (número) ou como o nome de um campo (string).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Row numbering starts at 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A numeração de linhas inicia-se em 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_fieldisnull().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_fieldisnull().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_field_name() returns the name of the field occupying the given field_number in the given PostgreSQL result resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_field_name() retorna o nome do campo ocupando o campo de número igual a field_number no recurso (resource) de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Field numbering starts from 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A numeração de campo inicia-se em 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_fieldname().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_fieldname().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_field_num().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_field_num().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_field_num() will return the number of the column (field) slot that corresponds to the field_name in the given PostgreSQL result resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_field_num() irá retornar o número da vaga (slot) da coluna (campo) que corresponde a field_name no recurso (resource) de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Field numbering starts at 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A numeração de campo inicia-se em 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return -1 on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retornará -1 em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_fieldnum().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_fieldnum().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_field_name().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_field_name().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_field_prtlen() returns the actual printed length (number of characters) of a specific value in a PostgreSQL result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_field_prtlen() retorna o comprimento atual impresso (número de caracteres) de um valor especificado em um recurso (resource) de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Row numbering starts at 0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A numeração de linha inicia-se em 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return -1 on an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retornará -1 em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_field_prtlen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_field_prtlen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_field_size().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_field_size().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_field_size() returns the internal storage size (in bytes) of the field number in the given PostgreSQL result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_field_size() retorna o tamanho de armazenamento interno (em bytes) do número de campo do recurso (resource) de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A field size of -1 indicates a variable length field.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um campo de tamanho -1 indica um campo de tamanho variável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retornará FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_fieldsize().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_fieldsize().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_field_prtlen() and pg_field_type().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_field_len() e pg_field_type().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_field_type() returns a string containing the type name of the given field_number in the given PostgreSQL result resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_field_type() retorna uma string contendo o nome do tipo do campo de número field_number dado no recurso (resource) de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_fieldtype().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_fieldtype().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_field_len() and pg_field_name().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_field_len() e pg_field_name().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_free_result() only needs to be called if you are worried about using too much memory while your script is running.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_free_result() precisa ser usada apenas se você está preocupado em usar muita memória enquanto seu script está rodando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All result memory will automatically be freed when the script is finished.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todos os resultados serão liberados da memória automaticamente assim que o script terminar de executar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But, if you are sure you are not going to need the result data anymore in a script, you may call pg_free_result() with the result resource as an argument and the associated result memory will be freed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas, se você tem certeza que não precisará mais dos dados do resultado em um script, você pode chamar pg_free_result() com o recurso (resource) de resultado result como argumento e a memória ocupada pelo resultado associado será liberada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_freeresult().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_field_len().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_get_result() get result resource from async query executed by pg_send_query(). pg_send_query() can send multiple queries to PostgreSQL server and pg_get_result() pg_get_result() get result resource from async query executed by pg_send_query(). pg_send_query() can send multiple queries to PostgreSQL server and pg_get_result() is used to get query result one by one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_get_result() retorna o recurso (resource) de resultado de uma consulta (query) executada por ps_send_query(). pg_send_query() pode enviar múltiplas consultas (queries) ao servidor PostgreSQL e pg_get_result() é usada para carregar os resultados das consultas, um por um.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns result resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o recurso (resource) de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is no more results, it returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se não houverem mais resultados, retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_host() returns the host name of the given PostgreSQL connection resource is connected to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_host() retorna o nome da máquina com a qual o recurso (resource) de conexão connection está conectado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connect() and pg_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_connect() e pg_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_insert() inserts assoc_array which has field= value into table specified as table_name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_insert() insere o array assoc_array, que contém os pares campo = valor, na tabela especificada pelo parâmetro table_name.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If options is specified, pg_convert() is applied to assoc_array with specified option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se options for especificado, pg_convert() será aplicada à assoc_array com a opção especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_insert</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pg_insert</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $db = pg_connect (&apos;dbname=foo&apos;); / / This is safe, since $_POST is converted automatically $res = pg_insert($db, &apos;post_log&apos;, $_POST); if ($res) {echo &quot;POST data is succesfully logged\n&quot;;} else {echo &quot;User must have sent wrong inputs\n&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $db = pg_connect (&apos;dbname=meubanco&apos;); / / Isto é seguro uma vez que $_POST é convertido automaticamente $res = pg_insert($db, &apos;post_log&apos;, $_POST); if ($res) {echo &quot;Dados POST arquivados com sucesso\n&quot;;} else {echo &quot;O usuário deve ter inserido entradas inválidas\n&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_last_error() returns the last error message for given connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_last_error() retorna a última mensagem de erro para a conexão representada por connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Error messages may be overwritten by internal PostgreSQL( libpq) function calls.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As mensagens de erro podem ser sobrescritas por chamadas internas ao PostgreSQL( libpq).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It may not return appropriate error message, if multiple errors are occured inside a PostgreSQL module function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se múltiplos erros ocorrerem dentro de um módulo de função do PostgreSQL, pode não retornar a mensagem de erro correta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use pg_result_error(), pg_result_status() and pg_connection_status() for better error handling.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use pg_result_error(), pg_result_status() e pg_connection_status() para um melhor tratamento de erros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_errormessage().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_errormessage().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_result_error().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_result_error().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_last_notice() returns the last notice message from the PostgreSQL server specified by connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_last_notice() retorna a última notificação do servidor PostgreSQL especificada por connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PostgreSQL server sends notice messages in several cases, e.g. if the transactions can &apos;t be continued.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O servidor PostgreSQL envia notificações em diversas situações, por exemplo, se as transações não puderem continuar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With pg_last_notice(), you can avoid issuing useless queries, by checking whether the notice is related to the transaction or not.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com pg_last_notice() você pode evitar a chamada de consultas (queries) inúteis, checando quando a notificação está relacionada ou não com a transação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is EXPERIMENTAL and it is not fully implemented yet. pg_last_notice() was added in PHP 4.0.6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é EXPERIMENTAL e ainda não está completamente implementada. pg_last_notice() foi adicionada no PHP 4.0.6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, PHP 4.0.6 has problem with notice message handling.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto o PHP 4.0.6 tem problemas com a manipulação de mensagens.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of the PostgreSQL module with PHP 4.0.6 is not recommended even if you are not using pg_last_notice().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O uso do módulo PostgreSQL com o PHP 4.0.6 não é recomendada, mesmo se você não estiver usando pg_last_notice().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is fully implemented in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função está totalmente implementada no PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP earlier than PHP 4.3.0 ignores database connection parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Versões do PHP mais recentes que a 4.3.0 ignoram o parâmetro de conexão com o banco de dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice message tracking can be set to optional by setting 1 for pgsql.ignore_notice ini from PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O rastreamento de notificações pode ser definido como opcional definindo 1 para a diretiva pgsql.ignore_notice do PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice message logging can be set to optional by setting 0 for pgsql.log_notice ini from PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivamento (log) de mensagems pode ser pode ser definido como opcional mudando para 0 a diretiva pgsql.log_notice no PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unless pgsql.ignore_notice is set to 0, notice message cannot be logged.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A não ser que pgsql.ignore_notice estiver definida para 0, notificações não podem ser arquivadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_query() and pg_last_error().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_query() e pg_last_error().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_last_oid() is used to retrieve the oid assigned to an inserted tuple (record) if the result resource is used from the last command sent via pg_query() and was an SQL INSERT.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_last_oid() é usado para recuperar o oid designado a uma linha (registro) se o recurso (resource) de resultado é usado a partir do último comando enviado através de pq_query() se este comando era um INSERT do SQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a positive integer if there was a valid oid.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um inteiro positivo se havia um oid válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if an error occurs or the last command sent via pg_query() was not an INSERT or INSERT is failed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se um erro ocorrer ou o último comando enviado através de pg_query() não foi INSERT ou se o INSERT falhou.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>OID field became an optional field from PostgreSQL 7.2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O campo OID tornou-se opcional a partir do PostgreSQL 7.2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When OID field is not defined in a table, programmer must use pg_result_status() to check if record is is inserted successfully or not.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando um campo OID não é definido em uma tabela, o programador deve usar pg_result_status() para checar se o registro foi inserido com sucesso ou não.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_getlastoid().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_getlastoid().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_query() and pg_result_status()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_query() e pg_result_status()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_close() closes a Large Object. large_object is a resource for the large object from pg_lo_open().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_close() fecha um Objeto Grande (Large Object, daí vem o &quot;lo &quot;que integra o nome da função). large_object é um recurso (resource) para o objeto grande gerado a partir de pg_lo_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use the large object (lo) interface, it is necessary to enclose it within a transaction block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para usar a interface de objetos grandes (lo), é necessário encapsulá-lo em um bloco de transação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_loclose().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_loclose().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_open(), pg_lo_create() and pg_lo_import().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_open(), pg_lo_create() e pg_lo_import().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_create() creates a Large Object and returns the oid of the large object. connection specifies a valid database connection opened by pg_connect() or pg_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_create() cria um Objeto Grande (Large Object) e retorna o seu oid. connection especifica uma conexão a um banco de dados válida aberta por pg_connect() ou pg_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL access modes INV_READ, INV_WRITE, and INV_ARCHIVE are not supported, the object is created always with both read and write access.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os modos de acesso INV_READ, INV_WRITE e INV_ARCHIVE não são suportados, o objeto é criado sempre com acesso a leitura e escrita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>INV_ARCHIVE has been removed from PostgreSQL itself (version 6.3 and above).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>INV_ARCHIVE foi removido do próprio PostgreSQL (a partir da 6.3).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns large object oid, otherwise it returns FALSE if an error occurred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se um erro ocorrer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_locreate().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_locreate().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The oid argument specifies oid of the large object to export and the pathname argument specifies the pathname of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento oid especifica o oid do objeto grande (large object) a exportar e o argumento pathname O argumento oid especifica o oid do objeto grande (large object) a exportar e o argumento pathname especifica o caminho até o arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if an error occurred, TRUE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se um erro ocorrer, caso contrário retorna TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_loexport().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_loexport().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_import().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_import().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In versions before PHP 4.2.0 the syntax of this function was different, see the following definition:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores a 4.2.0, a sintaxe desta função é diferente, veja a seguinte definição:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The pathname argument specifies the pathname of the file to be imported as a large object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento pathname O argumento pathname especifica o caminho do arquivo a ser importado como um objeto grande (large object).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if an error occurred, oid of the just created large object otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se um erro ocorrer, caso contrário, retorna o oid do objeto recém criado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use the large object (lo) interface, it is necessary to enclose it within a transaction block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para usar a interface de objetos grandes (lo) é necessário encapsulá-lo em um bloco de transação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_loimport().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_loimport().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_export() and pg_lo_open().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_export() e pg_lo_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_open() opens a Large Object and returns large object resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_open() abre um Objeto Grande (Large Object em inglês, daí o &quot;lo&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resource encapsulates information about the connection. oid specifies a valid large object oid and mode can be either &quot;r&quot;, &quot;w&quot;, or &quot;rw&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O recurso (resource) encapsula informações sobre a conexão. oid especifica um oid de objeto grande válido e o parâmetro mode pode ser &quot;r&quot;, &quot;w &quot;ou &quot;rw&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if there is an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função retorna FALSE se houver algum erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do not close the database connection before closing the large object resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não feche a conexão com o banco de dados sem antes fechar a conexão com o objeto grande.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_loopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_loopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_close() and pg_lo_create().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_close() e pg_lo_create().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_read_all() reads a large object and passes it straight through to the browser after sending all pending headers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_read_all() lê um objeto grande (large object) e passa-o diretamente para o navegador depois de enviar todos os cabeçalhos pendentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mainly intended for sending binary data like images or sound.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A intenção principal é enviar dados binários como imagens ou som.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE, if an error occurred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o número de bytes lidos ou FALSE se ocorrer algum erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_loreadall().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_loreadall().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_read().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_read().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_read() reads at most len bytes from a large object and returns it as a string. large_object specifies a valid large object resource and len specifies the maximum allowable size of the large object segment.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_read() lê o número de bytes equivalente ao valor de len de um objeto grande (large object) e retorna-o como uma string. large_object especifica um recurso (resource) válido de objeto e len especifica o tamanho máximo permitido do segmento do objeto grande.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE if there is an error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE se algum erro acontecer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_loread().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_loread().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_read_all().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_read_all().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_seek() seeks position of large object resource. whence is PGSQL_SEEK_SET, PGSQL_SEEK_CUR or PGSQL_SEEK_END.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_seek() procura uma posição em um recurso (resource) de um objeto grande (large objet). whence pode ser PGSQL_SEEK_SET, PGSQL_SSEK_CUR ou PGSQL_SEEK_END.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_tell().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_tell().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_tell() returns current position (offset from the beginning of large object).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_tell() retorna a posição atual (deslocamento a partir do início do objeto grande).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_seek().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_seek().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_unlink</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_unlink() deletes a large object with the oid.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_unlink() remove um objeto grande (large object) com um determinado oid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_lo_unlink().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_lo_unlink().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_create() and pg_lo_import().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_create() e pg_lo_import().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_lo_write() writes at most to a large object from a variable data and returns the number of bytes actually written, or FALSE in the case of an error. large_object is a large object resource from pg_lo_open().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_lo_write() escreve em um objeto grande (large object) a partir de uma variável data e retorna o número de bytes escritos, ou FALSE em caso de erro. large_object é um recurso (resource) de objeto grande criado a partir de pg_lo_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_lo_write().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_lo_write().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_lo_create() and pg_lo_open().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_lo_create() e pg_lo_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_meta_data</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_metadata</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_num_fields() returns the number of fields (columns) in a PostgreSQL result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_num_fields() retorna o número de campos (colunas) do recurso (resource) de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The argument is a result resource returned by pg_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento é um recurso (resource) de resultado criado a partir de pg_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will return -1 on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função irá retornar -1 em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_numfields().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_numfields().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_num_rows() and pg_affected_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_num_rows() e pg_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_num_rows() will return the number of rows in a PostgreSQL result resource. result is a query result resource returned by pg_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_num_rows() irá retornar o número de linhas do recurso de resultado result. result é um recurso (resource) de resultado de consulta (query) feito por pg_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use pg_affected_rows() to get number of rows affected by INSERT, UPDATE and DELETE query.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use pg_affected_rows() para obter o número de linhas afetadas por consultas do tipo INSERT, UPDATE e DELETE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_numrows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_numrows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_num_fields() and pg_affected_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_num_fields() e pg_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_options() will return a string containing the options specified on the given PostgreSQL connection resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_options() retornará uma string contendo as opções especificadas no recurso (resource) de conexão PostgreSQL connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_pconnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_pconnect() opens a connection to a PostgreSQL database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns a connection resource that is needed by other PostgreSQL functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_pconnect() abre uma conexão a um banco de dados PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a description of the connection_string parameter, see pg_connect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna um recurso (resource) de conexão que é necessário para outras funções PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable persistent connection, the pgsql.allow_persistent php.ini To enable persistent connection, the pgsql.allow_persistent php.ini directive must be set to &quot;On&quot; (which is the default).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para habilitar uma conexão persistente, a diretiva pgsql.allow_persistent do php.ini deve ser definida como &quot;On&quot; (que é o padrão).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of persistent connection can be defined with the pgsql.max_persistent php.ini The maximum number of persistent connection can be defined with the pgsql.max_persistent php.ini directive (defaults to -1 for no limit).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número máximo de conexões persistentes pode ser definida com a diretiva pgsql.max_persistent do php.ini O número máximo de conexões persistentes pode ser definida com a diretiva pgsql.max_persistent do php.ini (o padrão é -1 para sem limite).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The total number of connections can be set with the pgsql.max_links php.ini directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número total de conexões pode ser definido com a diretiva pgsql.max_links do php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_close() will not close persistent links generated by pg_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_close() não fechará links persistentes gerados por pg_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connect(), and the section Persistent Database Connections for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_ping() ping database connection, try to reconnect if it is broken.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_ping() faz um ping na conexão com o banco de dados, tenta reconectar se a conexão foi quebrada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns TRUE if connection is alive, otherwise FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se a conexão está ativa, do contrário, retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connection_status() and pg_connection_reset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_connection_status() e pg_connection_reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL fetch array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Testando uma conexão PostgreSQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = pg_pconnect (&quot;dbname=publisher&quot;); if (!$conn) {echo &quot;An error occured.\n&quot;; exit;} if (!pg_ping($conn)) die(&quot;Connection is broken\n&quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $conn = pg_pconnect (&quot;dbname=publicacao&quot;); if (!$conn) {echo &quot;Ocorreu um erro.\n&quot;; exit;} if (!pg_ping($conn)) die(&quot;Conexão quebrada\n&quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_port() returns the port number that the given PostgreSQL connection resource is connected to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_port() retorna o número da porta a qual o recurso de conexão PostgreSQL connection está conectado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_put_line() sends a NULL-terminated string to the PostgreSQL backend server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_put_line() envia uma string terminada em NULL para o servidor backend PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is useful for example for very high-speed inserting of data into a table, initiated by starting a PostgreSQL copy-operation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso é útil, por exemplo, para a inserção de dados em uma tabela em alta velocidade, iniciada através de uma operação de cópia PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That final NULL-character is added automatically.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O caractere NULL final é adicionado automaticamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The application must explicitly send the two characters &quot;\.&quot; on the last line to indicate to the backend that it has finished sending its data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A aplicação deve enviar os dois caracteres &quot;\.&quot; explicitamente na última linha para indicar ao backend que ela terminou de enviar seus dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_end_copy().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_end_copy().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>High-speed insertion of data into a table</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Inserção de dados na tabela em alta velocidade</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $conn = pg_pconnect (&quot;dbname=foo&quot;); pg_query($conn, &quot;create table bar (a int4, b char(16), d float8)&quot;); pg_query($conn, &quot;copy bar from stdin&quot;); pg_put_line($conn, &quot;3\thello world\t4.5\n&quot;); pg_put_line($conn, &quot;4\tgoodbye world\t7.11\n&quot;); pg_put_line($conn, &quot;\\.\n&quot;); pg_end_copy($conn);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $conn = pg_pconnect (&quot;nomebd=meubanco&quot;); pg_query($conn, &quot;create table bar (a int4, b char(16), d float8)&quot;); pg_query($conn, &quot;copy bar from stdin&quot;); pg_put_line($conn, &quot;3\tola mundo\t4.5\n&quot;); pg_put_line($conn, &quot;4\ttchau mundo\t7.11\n&quot;); pg_put_line($conn, &quot;\\.\n&quot;); pg_end_copy($conn);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_query</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_query() returns a query result resource if query could be executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE on failure or if connection is not a valid connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_query() retorna um recurso (resource) de resultado da consulta (query) se a consulta pôde ser executada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The connection must be a valid connection that was returned by pg_connect() or pg_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Detalhes sobre os erros podem ser recuperados usando a função pg_last_error() se a conexão é válida. pg_last_error() envia uma declaração SQL para o banco de dados PostgreSQL especificado pelo recurso de conexão connection. connection deve ser uma conexão válida que foi criado por pg_connect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The return value of this function is an query result resource to be used to access the results from other PostgreSQL functions such as pg_fetch_array().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor de retorno dessa função é um recurso (resource) de resultado de consulta (query) para ser usado para acessar os resultados de outras funções PostgreSQL como pg_fetch_array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If connection is not set, default connection is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se connection não for definido, a conexão padrão será usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default connection is the last connection made by pg_connect() or pg_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A conexão padrão é a última conexão feita por pg_connect() ou pg_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although connection can be omitted, it is not recommended, since it could be a cause of hard to find bug in script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apesar de connection poder ser omitido, isso não é recomendado já que pode ser uma causa de erros difíceis de encontrar no seu script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function used to be called pg_exec(). pg_exec() is still available for compatibility reasons but users are encouraged to use the newer name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_exec(). pg_exec() ainda está disponível por razões de compatibilidade, mas os usuários são encorajados a usar o novo nome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connect(), pg_pconnect(), pg_fetch_array(), pg_fetch_object(), pg_num_rows(), and pg_affected_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_connect(), pg_pconnect(), pg_fetch_array(), pg_fetch_object(), pg_num_rows(), e pg_affected_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_result_error() returns error message associated with result resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_result_error() retorna a mensagem de erro associada ao recurso (resource) de resultado result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore, user has better chance to get better error message than pg_last_error().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Deste modo, o usuário tem melhores chances de ter uma mensagem de erro melhor que a retornada por pg_last_error().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_query(), pg_send_query(), pg_get_result(), pg_last_error() and pg_last_notice()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_query(), pg_send_query(), pg_get_result(), pg_last_error() e pg_last_notice()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_result_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_result_seek() set internal row offset in reuslt resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns FALSE, if there is error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_result_seek() altera a posição do ponteiro interno de um recurso (resource) de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_fetch_row(), pg_fetch_assoc(), pg_fetch_array(), pg_fetch_object() and pg_fetch_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_fetch_row(), pg_fetch_assoc(), pg_fetch_array(), pg_fetch_object() e pg_fetch_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_result_status() returns status of result resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_result_status() retorna o status do recurso (resource) de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Possible retun values are PGSQL_EMPTY_QUERY, PGSQL_COMMAND_OK, PGSQL_TUPLES_OK, PGSQL_COPY_TO, PGSQL_COPY_FROM, PGSQL_BAD_RESPONSE, PGSQL_NONFATAL_ERROR and PGSQL_FATAL_ERROR.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PGSQL_EMPTY_QUERY, PGSQL_COMMAND_OK, PGSQL_TUPLES_OK, PGSQL_COPY_TO, PGSQL_COPY_FROM, PGSQL_BAD_RESPONSE, PGSQL_NONFATAL_ERROR e PGSQL_FATAL_ERROR.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_connection_status().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_connection_status().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_select() selects records specified by assoc_array which has field= value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_select() seleciona registros especificados por assoc_array, que contém pares do tipo campo= valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For successful query, it returns array contains all records and fields that match the condition specified by assoc_array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma consulta (query) válida, retorna um array que contém todos os registros e campos que combinam com a condição especificada por assoc_array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If options is specified, pg_convert() is applied to assoc_array with specified option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se options for especificado, pg_convert() será aplicada à assoc_array com as opções especificadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_select</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pg_select</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $db = pg_connect (&apos;dbname=foo&apos;); / / This is safe, since $_POST is converted automatically $rec = pg_select($db, &apos;post_log&apos;, $_POST); if ($rec) {echo &quot;Records selected\n&quot;; var_dump($rec);} else {echo &quot;User must have sent wrong inputs\n&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $db = pg_connect (&apos;nomebd=meubanco&apos;); / / Isto é seguro já que $_POST é convertida automaticamente $rec = pg_select($bd, &apos;post_log&apos;, $_POST); if ($rec) {echo &quot;Registros selecionados\n&quot;; var_dump($rec);} else {echo &quot;O usuário deve ter inserido dados errados\n&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_send_query() send asynchronous query to the connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_send_query() envia uma consulta (query) assíncrona para connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike pg_query(), it can send multiple query to PostgreSQL and get the result one by one using pg_get_result().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diferente de pg_query(), ela pode enviar consultas múltiplas para o PostgreSQL e carregar os resultados, um por um, usando pg_get_result().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Script execution is not blocked while query is executing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A execução do script não é bloqueada enquanto as consultas estão sendo executadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use pg_connection_busy() to check connection is busy (i.e. query is executing).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use pg_connection_busy() para checar se a conexão está ocupada. (por exemplo, se uma consulta está sendo executada).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Query may be canceled by calling pg_cancel_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A consulta pode ser cancelada chamando pg_cancel_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although user can send multiple query at once, user cannot send multiple query over busy connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apesar de ser possível enviar multiplas consultas de uma vez, você não pode enviar múltiplas consultas para uma conexão ocupada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If query is sent while connection is busy, it waits until last query is finished and discards all result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a consulta é enviada enquando a conexão está ocupada ela espera até que a última cosulta seja finalizada e descarta todos os resultados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_query(), pg_cancel_query(), pg_get_result() and pg_connection_busy()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_query(), pg_cancel_query(), pg_get_result() e pg_connection_busy()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_set_client_encoding() sets the client encoding and returns 0 if success or -1 if error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_set_client_encoding() define a codificação do cliente e retorna 0 caso haja sucesso e -1 se houver erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>encoding is the client encoding and can be either:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>encoding é a codificação do cliente e pode ter os valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Available encoding depends on your PostgreSQL and libpq version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As codificações disponíveis dependem da versão do PostgreSQL e libpq.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Refer to PostgreSQL manual for supported encodings for your PostgreSQL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vide o manual PostgreSQL para saber das codificações disponíveis para o seu PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function requires PHP-4.0.3 or higher and PostgreSQL-7.0 or higher.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função exige o PHP 4.0.3 ou maior e PostgreSQL 7.0 ou maior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Refer to PostgreSQL manual for details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vide o manual PostgreSQL para detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function used to be called pg_setclientencoding().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função era chamada pg_setclientencoding().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_client_encoding().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_client_encoding().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_trace() enables tracing of the PostgreSQL frontend / backend communication to a debugging file specified as pathname.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_trace() habilita o rastreamento da comunicação frontend / backend do PostgreSQL para um arquivo de depuração especificado pelo parâmetro pathname.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To fully understand the results, one needs to be familiar with the internals of PostgreSQL communication protocol.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para entender completamente estes resultados, você deve estar familiarizado com o protocolo de comunicação interno do PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For those who are not, it can still be useful for tracing errors in queries sent to the server, you could do for example grep &apos;^To backend&apos; trace.log and see what query actually were sent to the PostgreSQL server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para aqueles que não estão, isso ainda pode ser útil para rastrear erros em consultas (queries) enviadas ao servidor, você poderia fazer por exemplo grep &apos;^Para backend &apos;rastro.log.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information, refer to PostgreSQL manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações vide o manual PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pathname and mode are the same as in fopen() (mode defaults to&apos;w&apos;), connection specifies the connection to trace and defaults to the last one opened.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pathname e mode são os mesmos que na função fopen() (o mode padrão é &apos;w&apos;), connection especifica a conexão a ser rastreada e seu padrão é a última conexão aberta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns TRUE if pathname could be opened for logging, FALSE otherwise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE se o pathname pode ser aberto para escrita, FALSE caso contrário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fopen() and pg_untrace().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fopen() e pg_untrace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_tty() returns the tty name that server side debugging output is sent to on the given PostgreSQL connection resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_tty() retorna o nome da tty que a saída do lado do servidor é enviada no recurso (resource) de conexão connection.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_unescape_bytea() unescapes string from bytea datatype.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_unescape_bytea() faz uma versão binária da string do tipo bytea.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It returns unescaped string (binary).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a string em binário( binary).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you SELECT bytea type, PostgreSQL returns octal byte value prefixed by\ (e.g. \032).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você faz SELECT bytea type, PostgreSQL returna um valor em octal prefixado por\ (por exemplo: \032).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users are supposed to convert back to binary format by yourself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usuários devem fazer a transformação em binário por si próprios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_escape_bytea() and pg_escape_string()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_escape_bytea() e pg_escape_string()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Stop tracing started by pg_trace(). connection specifies the connection that was traced and defaults to the last one opened.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pára o rastreamento iniciado por pg_trace(). connection especifica a conexão que está sendo rastreada e seu padrão é a última conexão aberta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns always TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sempre retorna TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pg_trace().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pg_trace().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pg_update() updates records that matches condition with data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pg_update() atualiza registros que combinam com a condição especificada pelo argumento condition com os dados do parâmetro data.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If options is specified, pg_convert() is applied to data with specified options.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se options for especificado, pg_convert() será aplicada a data com as opções especificadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pg_update</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pg_update</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $db = pg_connect (&apos;dbname=foo&apos;); $data = array(&apos;field1&apos;= &apos;AA&apos;, &apos;field2&apos;= &apos;BB&apos;); / / This is safe, since $_POST is converted automatically $res = pg_update($db, &apos;post_log&apos;, $_POST, $data); if ($res) {echo &quot;Data is updated: $res\n&quot;;} else {echo &quot;User must have sent wrong inputs\n&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $bd = pg_connect (&apos;dbname=meubanco&apos;); $dados = array(&apos;campo1&apos;= &apos;AA&apos;, &apos;campo2&apos;= &apos;BB&apos;); / / Isto é seguro já que $_POST é convertido automaticamente $res = pg_update($bd, &apos;post_log&apos;, $_POST, $dados); if ($res) {echo &quot;Dados atualizados: $res\n&quot;;} else {echo &quot;Usuário deve ter enviado entradas inválidas\n&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>phpinfo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. phpinfo() options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. phpinfo() options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. phpinfo() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. phpinfo() examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>php_logo_guid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This functionality was added in PHP 4.0.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. php_sapi_name() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. php_sapi_name() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. php_uname() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. php_uname() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. phpversion() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. phpversion() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pi</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an approximation of pi.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The returned float has a precision based on the precision directive in php.ini, which defaults to 14.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor retornado float tem a precisão baseada na diretiva precision do php.ini, que tem por padrão 14.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, you can use the M_PI constant which yields identical results to pi().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Também é possivel usar a constante M_PI que terá resultados idênticos a pi().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>popen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a pipe to a process executed by forking the command given by command.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This pointer may be used with fgets(), fgetss(), and fputs().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Abre uma pipe para um processo executado ao se dar um fork para o comando dado por command.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este ponteiro pode ser usado com fgets(), fgetss() e fputs().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you&apos; re looking for bi-directional support (two-way), use proc_open().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Caso um erro ocorra retorna FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. popen() examole</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está procurando por suporte bidirecional (via dupla), utilize proc_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $handle = popen (&quot;/ bin / ls&quot;, &quot;r&quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $fp = popen (&quot;/ bin / ls&quot;, &quot;r&quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the command to be executed could not be found, a valid resource is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o commando a ser executado não for encontradom um recurso válido será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This may seem odd, but makes sense; it allows you to access any error message returned by the shell:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso pode parecer esquisito, mas tem sentido: permite que você acesse a mensagem de erro retornado pelo sistema operacional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php error_reporting( E_ALL); / * Add redirection so we can get stderr. * / $handle = popen(&apos; / path / to / spooge 2 1&apos;, &apos;r&apos;); echo &quot;&apos;$handle&apos;; &quot;. gettype($handle). &quot;\n&quot;; $read = fread($handle, 2096); echo $read; pclose($handle);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php error_reporting( E_ALL); / * Add redirection so we can get stderr. * / $fp = popen(&apos; / path / to / spooge 2 1&apos;, &apos;r&apos;); echo &quot;&apos;$fp&apos;; &quot;. gettype($fp). &quot;\n&quot;; $read = fread($fp, 2096); echo $read; pclose($fp);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pclose(), fopen(), and proc_open().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pclose(), fopen() e proc_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an alias for current().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função é um alias para current().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also end(), next(), prev(), and reset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também end(), next(), prev() e reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Needs to be written.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não está documentada, somente a lista de argumentos está disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Needs to be written ASAP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não está documentada, somente a lista de argumentos está disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.10, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_getegid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the numeric effective group ID of the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.10, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_geteuid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the numeric effective user ID of the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.10, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_getgid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the numeric real group ID of the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.10, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_getpgid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the process group identifier of the process pid.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.10, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_getpgrp</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the process group identifier of the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.10, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_getsid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the sid of the process pid.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.10, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_getuid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return the numeric real user ID of the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_kill</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Send the signal sig to the process with the process identifier pid.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When safe mode is enabled, PHP checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o safe-mode está ativo, o PHP verifica se o diretório que será afetado por essa operação tem o mesmo UID (proprietário) do script que está sendo executado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_setegid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the effective group ID of the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_seteuid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the real user ID of the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_setgid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the real group ID of the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_setpgid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Let the process pid join the process group pgid.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_setsid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make the current process a session leader.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.13, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>posix_setuid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns base raised to the power of exp.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a base elevada ao expoente exp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If possible, this function will return an integer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se possível, esta função retornará um integer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the power cannot be computed, a warning will be issued, and pow() will return FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a potência não puder ser calculada, um alerta será lançado, e pow() retornará FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples of pow()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alguns exemplos de pow()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php var_dump( pow(2,8)); / / int(256) echo pow(-1,20); / / 1 echo pow(0, 0); / / 1 echo pow(-1, 5.5); / / error?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php var_dump( pow(2,8)); / / int(256) echo pow(-1,20); / / 1 echo pow(0, 0); / / 1 echo pow(-1, 5.5); / / erro?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.0.6 and earlier pow() always returned a float, and did not issue warnings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4.0.6 e posteriores, pow() sempre retornará um float, e não gerará avisos de erros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also exp() and sqrt().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também exp() e sqrt().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. preg_grep() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. preg_grep() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.9, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>preg_match</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Searches subject for a match to the regular expression given in pattern.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. find the word &quot;web&quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. find the word &quot;web&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.9, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>preg_split</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Parameter flags was added in PHP 4 Beta 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. preg_split() Example 1. preg_split() example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. preg_split() Exemplo 1. preg_split() example:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the array element in the previous place that &apos;s pointed by the internal array pointer, or FALSE if there are no more elements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o elemento do array que está na posição anterior a posição apontada pelo ponteiro interno, ou FALSE se houver mais elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array contains empty elements then this function will return FALSE for these elements as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o array contiver elementos vazios então essa função retornará FALSE para esses elementos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To properly traverse an array which may contain empty elements see the each() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para percorrer corretamente arrays que podem conter elementos vazios veja a função each().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>prev() behaves just like next(), except it rewinds the internal array pointer one place instead of advancing it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>prev() funciona da mesma forma que next(), com a única diferença sendo de que a primeira retrocede o ponteiro interno em uma posição ao invés de avançá-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current(), end(), next(), and reset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também current(), end(), next() e reset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_abort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_abort() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_close() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_close() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_create_brush</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function creates a new brush and returns a handle to it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_create_dc() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_create_dc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_create_font</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function creates a new font and returns a handle to it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_create_pen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function creates a new pen and returns a handle to it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_delete_brush</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_delete_font</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_delete_pen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_bmp() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_draw_bmp() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_draw_chord</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function simply draws an chord. handle must be a valid handle to a printer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$handle = printer_open(); printer_start_doc($handle, &quot;My Document&quot;); printer_start_page($handle); $pen = printer_create_pen(PRINTER_PEN_SOLID, 2, &quot;000000&quot;); printer_select_pen($handle, $pen); $brush = printer_create_brush(PRINTER_BRUSH_SOLID, &quot;2222FF&quot;); printer_select_brush($handle, $brush); printer_draw_chord($handle, 1, 1, 500, 500, 1, 1, 500, 1); printer_delete_brush($brush); printer_delete_pen($pen); printer_end_page($handle); printer_end_doc($handle); printer_close($handle);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_draw_chord() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_draw_elipse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function simply draws an ellipse. handle must be a valid handle to a printer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$handle = printer_open(); printer_start_doc($handle, &quot;My Document&quot;); printer_start_page($handle); $pen = printer_create_pen(PRINTER_PEN_SOLID, 2, &quot;000000&quot;); printer_select_pen($handle, $pen); $brush = printer_create_brush(PRINTER_BRUSH_SOLID, &quot;2222FF&quot;); printer_select_brush($handle, $brush); printer_draw_elipse($handle, 1, 1, 500, 500); printer_delete_brush($brush); printer_delete_pen($pen); printer_end_page($handle); printer_end_doc($handle); printer_close($handle);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_draw_elipse() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_line() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_draw_line() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_draw_pie</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function simply draws an pie. handle must be a valid handle to a printer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$handle = printer_open(); printer_start_doc($handle, &quot;My Document&quot;); printer_start_page($handle); $pen = printer_create_pen(PRINTER_PEN_SOLID, 2, &quot;000000&quot;); printer_select_pen($handle, $pen); $brush = printer_create_brush(PRINTER_BRUSH_SOLID, &quot;2222FF&quot;); printer_select_brush($handle, $brush); printer_draw_pie($handle, 1, 1, 500, 500, 1, 1, 500, 1); printer_delete_brush($brush); printer_delete_pen($pen); printer_end_page($handle); printer_end_doc($handle); printer_close($handle);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_draw_pie() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_draw_rectangle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$handle = printer_open(); printer_start_doc($handle, &quot;My Document&quot;); printer_start_page($handle); $pen = printer_create_pen(PRINTER_PEN_SOLID, 2, &quot;000000&quot;); printer_select_pen($handle, $pen); $brush = printer_create_brush(PRINTER_BRUSH_SOLID, &quot;2222FF&quot;); printer_select_brush($handle, $brush); printer_draw_rectangle($handle, 1, 1, 500, 500); printer_delete_brush($brush); printer_delete_pen($pen); printer_end_page($handle); printer_end_doc($handle); printer_close($handle);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_draw_rectangle() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_draw_roundrect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function simply draws a rectangle with rounded corners.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$handle = printer_open(); printer_start_doc($handle, &quot;My Document&quot;); printer_start_page($handle); $pen = printer_create_pen(PRINTER_PEN_SOLID, 2, &quot;000000&quot;); printer_select_pen($handle, $pen); $brush = printer_create_brush(PRINTER_BRUSH_SOLID, &quot;2222FF&quot;); printer_select_brush($handle, $brush); printer_draw_roundrect($handle, 1, 1, 500, 500, 200, 200); printer_delete_brush($brush); printer_delete_pen($pen); printer_end_page($handle); printer_end_doc($handle); printer_close($handle);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_draw_roundrect() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_draw_text() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_draw_text() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_get_option() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_get_option() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_list() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_list() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_logical_fontheight() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_logical_fontheight() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_open() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_open() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_select_brush() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_select_brush() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_select_font() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_select_font() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_select_pen() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_select_pen() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_set_option() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_set_option() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>printer_start_doc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function creates a new document in the printer spooler.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_start_doc() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_start_doc() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. printer_write() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. printer_write() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Produces output according to format, which is described in the documentation for sprintf().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Produz uma saída de acordo com format, o qual é descrito na documentação para sprintf().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also print(), sprintf(), sscanf(), fscanf(), and flush().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também print(), sprintf(), sscanf(), fscanf(), e flush().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>print</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mostra arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>print() is not actually a real function (it is a language construct) so you are not required to use parentheses with it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>print() não é atualmente uma função real (é uma construção da linguagem) então você não precisa usar parêntesis com ela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. print() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos print()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php print( &quot;Hello World&quot;); print &quot;print() also works without parentheses .&quot;; print &quot;This spans multiple lines.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php print( &quot;Alô Mundo&quot;); print &quot;print() também funciona sem parênteses .&quot;; print &quot;Isto divide em múltiplas linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The newlines will be output as well&quot;; print &quot;This spans\nmultiple lines.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As quebras de linha serão mostradas também&quot;; print &quot;Isto divide\nem múltiplas linhas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The newlines will be\noutput as well .&quot;; print &quot;escaping characters is done \&quot;Like this\&quot; .&quot;; / / You can use variables inside of an print statement $foo = &quot;foobar&quot;; $bar = &quot;barbaz&quot;; print &quot;foo is $foo&quot;; / / foo is foobar / / Using single quotes will print the variable name, not the value print&apos;foo is $foo&apos;; / / foo is $foo / / If you are not using any other characters, you can just print variables print $foo; / / foobar print END This uses the &quot;here document &quot;syntax to output multiple lines with $variable interpolation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As quebras de linha serão\nmostradas também&quot;; print &quot;escapar caracteres é feito \&quot;como isto\&quot; .&quot;; / / Você pode usar variáveis dentro do $foo = &quot;foobar&quot;; $bar = &quot;barbaz&quot;; print &quot;foo is $foo&quot;; / / foo is foobar / / Usando apóstrofos irá exibir o nome da variável, não o valor print &apos;foo is $foo&apos;; / / foo is $foo / / Se você não estiver usando outros caracteres, somente mostre a variável print $foo; / / foobar print END Isto usa a sintaxe &quot;aqui documento &quot;para mostrar múltiplas linhas com interpolação de $variable interpolation.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the here document terminator must appear on a line with just a semicolon no extra whitespace!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que o terminador de aqui documento deve aparecer em uma linha terminada em ponto e vírgula(;) sem nenhum espaço extra!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also echo(), printf(), and flush().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também echo(), printf(), e flush().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As with anything that outputs its result directly to the browser, you can use the output-control functions to capture the output of this function, and save it in a string (for example).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como toda saída é normalmente enviada direto para o browser, você pode usar as Funções de Controle de Output para capturar o resultado e guardá-lo em uma string (por exemplo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pspell_add_to_personal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pspell_add_to_personal() adds a word to the personal wordlist.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_add_to_personal()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_add_to_personal()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_check()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_check()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>pspell_clear_session</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pspell_clear_session() clears the current session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_create()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_config_create()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_ignore()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_config_ignore()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_mode()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_config_mode()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_personal()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_config_personal()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_repl()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_config_repl()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_config_runtogether()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_config_runtogether()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_new_config()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_new_config()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_new()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_new()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_new_personal()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_new_personal()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_store_replacement()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_store_replacement()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. pspell_suggest()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. pspell_suggest()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>putenv</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adds setting to the server environment.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>qdom_error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>qdom_tree</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns an 8-bit binary string corresponding to the decoded quoted printable string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna uma string de 8-bit correspondendo a string quoted-printable decodificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is similar to imap_qprint(), except this one does not require the IMAP module to work.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é similar a imap_qprint(), com a exceção de não requerer o módulo IMAP para funcionar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a version of str with a backslash character (\) before every character that is among these:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma versão de str com uma barra invertida (\) entes de cada um destes caracteres:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also addslashes(), htmlentities(), htmlspecialchars(), nl2br(), and stripslashes().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também addslashes(), htmlentities(), htmlspecialchars(), nl2br(), and stripslashes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function converts number from radian to degrees.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função converte number de radianos para graus.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also deg2rad().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também deg2rad().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called without the optional min, max arguments rand() returns a pseudo-random value between 0 and RAND_MAX.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se chamado sem os parâmetros opcionais min e max, rand() retornará um pseudo valor randômico entre 0 e RAND_MAX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want a random number between 5 and 15 (inclusive), for example, use rand (5, 15).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você precisa de um número aleatório entre 5 e 15 (inclusive), por exemplo, utilize rand (5, 15).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In older versions of PHP, you had to seed the random number generator before use with srand().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores do PHP, você precisa semear o gerador de números aletórios primeiro com srand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since 4.2.0 this is no longer necessary.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.0, isto não é mais necesário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get the same results in these versions the short example should be rand (5, 11) to get a random number between 5 and 15.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, para obter os mesmos resultados do exemplo acima, você precisaria utilizar rand (5, 11) para obter um número aleatório entre 5 e 15.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also srand(), getrandmax(), and mt_rand().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também srand(), getrandmax() e mt_rand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>range</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>range() returns an array of elements from low to high, inclusive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>New parameter:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>range() retorna um array com elementos de low até high, com intervalo fechado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional step parameter was added in 5.0.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se low high, será de high até low.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a step value is given, it will be used as the increment between elements in the sequence. step should be given as a positive number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro step for especificado, será usado como o incremento entre os elementos da sequência. step deve ser um inteiro positivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If not specified, step will default to 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se não for especificado, step terá valor igual a 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. range() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos de range()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / array( 0,1,2,3,4,5,6,7,8,9) foreach(range(0, 9) as $number) {echo $number;} / / The step parameter was introduced in 5.0.0 / / array(0,10,20,30,40,50,60,70,80,90,100) foreach(range(0, 100, 10) as $number) {echo $number;} / / Use of characters introduced in 4.1.0 / / array(&apos;a&apos; ,&apos;b&apos; ,&apos;c&apos; ,&apos;d&apos; ,&apos;e&apos; ,&apos;f&apos; ,&apos;g&apos; ,&apos;h&apos; ,&apos;i&apos;); foreach(range(&apos;a&apos;, &apos;i&apos;) as $letter) {echo $letter;} / / array(&apos;c&apos; ,&apos;b&apos; ,&apos;a&apos;); foreach(range(&apos;c&apos;, &apos;a&apos;) as $letter) {echo $letter;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Até a versão 4.1.0, a função range() só gerava arrays de inteiros em ordem crescente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to version 4.1.0 the range() function only generated incrementing integer arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro step foi adicionado na versão 5.0.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for character sequences and decrementing arrays was added in 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Simulando faixas decrescentes e sequências de caracteres</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also shuffle() and foreach.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja shuffle() para outro exemplo de utilização dessa função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. rawurlencode() example 1</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. rawurlencode() example 1</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. rawurlencode() example 2</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. rawurlencode() example 2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the filename of the next file from the directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o nome de arquivo do próximo arquivo do diretório.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The filenames are returned in the order in which they are stored by the filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os nomes de arquivos ão retornados na ordem informada pelo sistema de arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note the fashion in which readdir() &apos;s return value is checked in the examples below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifique cuidadosamente o estilo de checagem dos valores retornados por readdir() nos exemplos abaixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We are explicitly testing whether the return value is identical to (equal to and of the same type as--see Comparison Operators for more information) FALSE since otherwise, any directory entry whose name evaluates to FALSE will stop the loop (e.g. a directory named &quot;0&quot;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De outra forma, qualquer entrada de diretório que seja avaliada para FALSE irá parar o loop (por exemplo, um diretório nomeado &quot;0&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List all files in a directory</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lista todos os arquivos em um diretório</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / Note that !== did not exist until 4.0.0-RC2 ?php if ($handle = opendir(&apos; / path / to / files&apos;)) {echo &quot;Directory handle: $handle\n&quot;; echo &quot;Files:\n&quot;; / * This is the correct way to loop over the directory. * / while (false !== ($file = readdir($handle))) {echo &quot;$file\n&quot;;} / * This is the WRONG way to loop over the directory. * / while ($file = readdir($handle)) {echo &quot;$file\n&quot;;} closedir($handle);}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / Note que !== não existia antes do PHP 4.0.0-RC2 ?php if ($handle = opendir(&apos; / path / to / files&apos;)) {echo &quot;Manipulador de diretório: $handle\n&quot;; echo &quot;Arquivos:\n&quot;; / * Esta é a forma correta de varrer o diretório * / while (false !== ($file = readdir($handle))) {echo &quot;$file\n&quot;;} / * Esta é a forma INCORRETA de varrer o diretório * / while ($file = readdir($handle)) {echo &quot;$file\n&quot;;} closedir($handle);}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that readdir() will return the. and.. entries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que readdir() irá retornar o. e...</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don &apos;t want these, simply strip them out:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você não quer estes simplesmente os retire:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List all files in the current directory and strip out. and..</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Listar todos os arquivos no diretório atual e retirar. e..</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_dir().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_dir().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The read_exif_data() function is an alias for exif_read_data().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>readfile</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reads a file and writes it to the output buffer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the number of bytes read from the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lê um arquivo e escreve o seu conteúdo para o buffer de saída( output buffer).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, FALSE is returned and unless the function was called as @readfile, an error message is printed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um error ocorrer, retorna FALSE e ao menos que a função seja chamada como @readfile, uma mensagem de erro será impressa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional second parameter and set it to &quot;1&quot;, if you want to search for the file in the include_path, too.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar o segundo parametro opcional e o setar para &quot;1&quot;, se você quiser procurar o arquivo no include_path, também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fpassthru(), file(), fopen(), include(), require(), virtual() and Appendix I.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fpassthru(), file(), fopen(), include(), require(), virtual() e Apêndice I.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>readgzfile</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reads a file, decompresses it and writes it to standard output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>readline_completion_function</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function registers a completion function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. readline()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. readline()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>readlink() does the same as the readlink C function and returns the contents of the symbolic link path or 0 in case of error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>readlink() faz o mesmo que a função do C readlink e retorna os conteúdos do path do link simbólico ou 0 em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_link(), symlink(), and linkinfo().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também symlink(), readlink() e linkinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>realpath() expands all symbolic links and resolves references to &apos;/. /&apos;, &apos;/.. /&apos; and extra &apos;/&apos; characters in the input path and return the canonicalized absolute pathname.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>realpath() expande todos os links simbólicos e resolve referencias para &apos;/. /&apos;, &apos;/.. /&apos; e extra caracteres &apos;/&apos; na entrada pelo path e retorna o path absoluto canonicalizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resulting path will have no symbolic link, &apos;/. /&apos; or &apos;/.. /&apos; components.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O path resultante não conterá nenhum link simbólico ou componentes &apos;/. /&apos; e &apos;/.. /&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>realpath() returns FALSE on failure, e.g. if the file does not exists.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>realpath() retorna FALSE em caso de falha, por exemplo, se o caminho não existir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. realpath() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo de realpath()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: basename(), dirname(), and pathinfo().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: basename(), dirname() e pathinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an alias for recode_string().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to rename oldname to newname.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenta renomear nomeantigo para novonome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example with rename()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de rename()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>require()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The require() statement includes and evaluates the specific file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A instrução require() inclui a avalia um arquivo específico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Detailed information on how this inclusion works is described in the documentation for include().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Informações detalhadas de como essa inclusão funciona está descrita na documentação do include().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>require() and include() are identical in every way except how they handle failure. include() produces a Warning while require() results in a Fatal Error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>require() e include() são idênticos em todas as formas exceto pela manipulação de erros. include() produz um Warning enquanto require() produzirá um Fatal Error.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, don&apos; t hesitate to use require() if you want a missing file to halt processing of the page. include() does not behave this way, the script will continue regardless.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outras palavras, não hesite em utilizar require() se na falta de um arquivo quiser parar o processamento da página. include() não se comporta da mesma maneira, e o script poderá continuar nessa situação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 12-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic require() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos de require() s simples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the include() documentation for more examples.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vaja a documentação de include() para mais exemplos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.0.2, the following applies: require() will always attempt to read the target file, even if the line it&apos;s on never executes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Até o PHP 4.0.2, havia o seguinte comportamento: require() mesmo que a linha onde ele está nunca seja executada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The conditional statement won&apos; t affect require().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É por isso que instruções condicionais não afetam require().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, if the line on which the require() occurs is not executed, neither will any of the code in the target file be executed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, se a linha onde ocorre o require() não for executada, nada do código incluído do arquivo também será.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similarly, looping structures do not affect the behaviour of require().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Similarmente, estruturas de loop não afetam o funcionamento do require().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although the code contained in the target file is still subject to the loop, the require() itself happens only once.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A instrução require() apenas ocorre uma vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also include(), require_once(), include_once(), eval(), file(), readfile(), virtual() and include_path.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: include(), require_once(), include_once(), eval(), file(), readfile(), virtual() e include_path.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>require_once()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The require_once() statement includes and evaluates the specified file during the execution of the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A instrução require_once() incluí e avalia o arquivo especificado durante a execução do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a behavior similar to the require() This is a behavior similar to the require() statement, with the only difference being that if the code from a file has already been included, it will not be included again.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Seu comportamento é similar ao da instrução require(), a não ser que o arquivo informado já tenha sido incluído, não refazendo a operação novamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the documentation for require() for more information on how this statement works.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a documentação de require() para maiores informações sobre como essa instrução funciona.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>require_once() should be used in cases where the same file might be included and evaluated more than once during a particular execution of a script, and you want to be sure that it is included exactly once to avoid problems with function redefinitions, variable value reassignments, etc.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>require_once() pode ser utilizado nos casos em que o mesmo arquivo pode acabar sendo incluído mais de uma vez durante a execução de um script em particular, quando na verdade ele só pode ser incluído apenas uma, para evitar problemas com redefinições de funções, alterações nos valores de variáveis, etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For examples on using require_once() and include_once(), look at the PEAR code included in the latest PHP source code distributions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para exemplos de utilização de require_once() e include_once(), veja o código do PEAR incluído nas últimas distribuições do código fonte do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be aware, that the behaviour of require_once() and include_once() may not be what you expect on a non case sensitive operating system (such as Windows).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esteja avisado que o comportamento de require_once() e include_once() pode não ser o que você espera em um sistema operacional insensitivo ao caso (como o Windows).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 12-8. require_once() is case sensitive</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 12-8. require_once() é sensitivo ao caso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>require_once( &quot;a.php&quot;); / / this will include a.php require_once(&quot;A.php&quot;); / / this will include a.php again on Windows!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>require_once( &quot;a.php&quot;); / / isto irá incluir a.php require_once(&quot;A.php&quot;); / / isto irá incluir a.php de novo no Windows!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: require(), include(), include_once(), get_required_files(), get_included_files(), readfile(), and virtual().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: require(), include(), include_once(), get_required_files(), get_included_files(), readfile() e virtual().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>reset() rewinds array&apos;s internal pointer to the first element.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>reset() retrocede o ponteiro interno de array para o primeiro elemento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>reset() returns the value of the first array element.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>reset() retorna o valor do primeiro elemento do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also current(), each(), next(), and prev().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também current(), each(), next(), e prev().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>return</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called from within a function, the return() statement immediately ends execution of the current function, and returns its argument as the value of the function call. return() will also end the execution of an eval() statement or script file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se chamada em uma função, a instrução return() termina imediatamente a execução da função atual e retorna seu argumento como o valor da função. return() também termina a execução de uma instrução eval() ou de um script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If called from the global scope, then execution of the current script file is ended.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se chamada no escopo global, a execução do script atual será terminada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the current script file was include() ed or require() ed, then control is passed back to the calling file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo do script atual foi incluído com include() ou require(), então a execução é devolvida para o arquivo chamador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Furthermore, if the current script file was include() ed, then the value given to return() will be returned as the value of the include() Furthermore, if the current script file was include() ed, then the value given to return() will be returned as the value of the include() call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Especificamente para arquivos de script incluídos com include(), o valor fornecido para return() será devolvido como o valor da chamada include().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If return() is called from within the main script file, then script execution ends.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se return() for chamado do arquivo de script principal, então o programa pára.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the current script file was named by the auto_prepend_file or auto_append_file configuration options in the configuration file, then that script file &apos;s execution is ended.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo de script atual é o configurado em auto_prepend_file ou auto_append_file do arquivo de configuração, então a execução desses scripts é finalizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information, see Returning values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja Retornando Valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that since return() is a language construct and not a function, the parentheses surrounding its arguments are not required--in fact, it is more common to leave them out than to use them, although it doesn&apos;t matter one way or the other.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que return() é um construtor de linguagem e não uma função, e parênteses em volta do seus argumentos não são necessários - - de fato, é mais comum não colocá-los que usá-los, sem, entretanto, haver diferença de um jeito ou de outro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Resets the directory stream indicated by dir_handle to the beginning of the directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Reinicia o stream do diretório indicado por dir_handle para o início do diretório.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the file position indicator for handle to the beginning of the file stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Muda o indicador de ponteiro de arquivo fp para o início do stream do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If an error occurs, returns 0, otherwise it returns 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em sucesso, retorna 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file pointer must be valid, and must point to a file successfully opened by fopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O ponteiro de arquivo tem que ser válido e tem que apontar para um arquivo aberto com sucesso por fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have opened the file in append (&quot;a&quot;) mode, any data you write to the file will always be appended, regardless of the file position.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se voc6e abriu um arquivo no modo acréscimo (append - &quot;a&quot;), qualque dado que escrever no arquivo será sempre anexado no final, não importando a posição do ponteiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also fseek() and ftell().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também fseek() e ftell().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to remove the directory named by dirname.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenta remover o diretório com o nome de nomedodir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The directory must be empty, and the relevant permissions must permit this.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O diretório tem que estar vazio e as permissões relevantes autorizarem a esta operação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also mkdir() and unlink().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também mkdir() e unlink().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the rounded value of val to specified precision (number of digits after the decimal point). precision can also be negative or zero (default).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retornar um valor arredondado de val em precision casas decimais. precision pode ser negativo ou zero (default).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP doesn&apos; t handle strings like &quot;12,300.2 &quot;correctly by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP não manipula strings como &quot;12,300.2&quot; corretamente por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See converting from strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja convertendo de strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The precision parameter is only available in PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro precision foi acrescentado no PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ceil() and floor().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também ceil() e floor().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sorts an array in reverse order (highest to lowest).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função ordena um array em ordem descrescente (do maior para o menor).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. rsort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de rsort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits = array (&quot;lemon&quot;, &quot;orange&quot;, &quot;banana&quot;, &quot;apple&quot;); rsort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo &quot;$key = $val\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$frutas = array (&quot;limao&quot;, &quot;laranja&quot;, &quot;banana&quot;, &quot;melancia&quot;); rsort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo &quot;$chave = $valor\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example would display:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse exemplo mostraria:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0 = orange 1 = lemon 2 = banana 3 = apple</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>0 = melancia 1 = limao 2 = laranja 3 = banana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fruits have been sorted in reverse alphabetical order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As frutas foram ordenadas em ordem alfabética decrescente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also arsort(), asort(), ksort(), sort(), and usort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também arsort(), asort(), ksort(), sort() e usort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>rtrim</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns a string with whitespace stripped from the end of str.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O Segundo parâmetro foi adicionado no PHP 4.1.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Without the second parameter, rtrim() will strip these characters:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna a string como os espaços em branco retirados do final de str.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;&quot; (ASCII 32 (0x20)), an ordinary space.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sem o segundo parâmetro, rtrim() irá retirar os seguintes caracteres:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;\t&quot; (ASCII 9 (0x09)), a tab.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;&quot; (ASCII 32 (0x20)), um espaço comum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;\n&quot; (ASCII 10 (0x0A)), a new line (line feed).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;\t&quot; (ASCII 9 (0x09)), uma tabulação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;\r&quot; (ASCII 13 (0x0D)), a carriage return.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;\n&quot; (ASCII 10 (0x0A)), uma nova linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;\0&quot; (ASCII 0 (0x00)), the NUL -byte.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;\r&quot; (ASCII 13 (0x0D)), um retorno de carro(ENTER).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;\x0B&quot; (ASCII 11 (0x0B)), a vertical tab.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;\0&quot; (ASCII 0 (0x00)), o byte NULL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also specify the characters you want to strip, by means of the charlist You can also specify the characters you want to strip, by means of the charlist parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode especificar os caracteres que você deseja retirar, pelo parâmetro charlist.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simply list all characters that you want to be stripped.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Simplesmente liste todos os caracteres que você quer ver retirados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With.. you can specify a range of characters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com.. você pode especificar um intervalo de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Usage example of rtrim()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de uso da função rtrim()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $text = &quot;\t\tThese are a few words:)...&quot;; $trimmed = rtrim($text); / / $trimmed = &quot;\t\tThese are a few words:)... &quot;$trimmed = rtrim($text,&quot; \t .&quot;); / / $trimmed = &quot;\t\tThese are a few words:) &quot;$clean = rtrim($binary ,&quot;\0x00..\0x1F&quot;); / / trim the ASCII control characters at the end of $binary / / (from 0 to 31 inclusive)?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $text = &quot;\t\tThese are a few words:)...&quot;; $trimmed = rtrim($text); / / $trimmed = &quot;\t\tThese are a few words:)... &quot;$trimmed = rtrim($text,&quot; \t .&quot;); / / $trimmed = &quot;\t\tThese are a few words:) &quot;$clean = rtrim($binary ,&quot;\0x00..\0x1F&quot;); / / retira os caracteres de controle ASCII ao final de $binary / / (de 0 até 31 inclusive)?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also trim() and ltrim().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também trim() e ltrim().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 13.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 13.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Argumentos de funções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Information may be passed to functions via the argument list, which is a comma-delimited list of variables and / or constants.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Informações podem ser passadas para funções através da lista de argumentos, que é uma lista de variáveis e / ou constantes delimitados por vírgulas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports passing arguments by value (the default), passing by reference, and default argument values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta a passagem de argumentos por valor (o padrão), passagem por referência e valores padrão de argumento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable-length argument lists are supported only in PHP 4 and later; see Variable-length argument lists and the function references for func_num_args(), func_get_arg(), and func_get_args() for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Listas de argumentos de comprimento variável são suportadas apenas no PHP4 e posterior; veja Número de argumentos variável e as referências das funções func_num_args(), func_get_arg() e func_get_args() para mais informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A similar effect can be achieved in PHP 3 by passing an array of arguments to a function:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um efeito similar pode ser atingido no PHP 3 pela passagem de um array de argumentos para uma função:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function takes_array( $input) {echo &quot;$input[0] + $input[1] = &quot;, $input[0]+$input[1];}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fazendo argumentos serem passados por referência</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, function arguments are passed by value (so that if you change the value of the argument within the function, it does not get changed outside of the function).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por padrão, argumentos de função são passados por valor (de forma que se você mudar o valor do parâmetro dentro da função, ele não é alterado fora da função).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you wish to allow a function to modify its arguments, you must pass them by reference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você deseja permitir que uma função modifique seus argumentos, você precisa passá-los por referência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want an argument to a function to always be passed by reference, you can prepend an ampersand () to the argument name in the function definition:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quer que um argumento para uma função sempre seja passado por referência, você pode preceder o nome do argumento com um &quot;e comercial&quot; () na definição da função:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function add_some_extra( $string) {$string .= &apos;and something extra .&apos;;} $str = &apos;This is a string, &apos;; add_some_extra($str); echo $str; / / outputs&apos;This is a string, and something extra.&apos;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Valores padrão de argumentos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A function may define C++-style default values for scalar arguments as follows:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma função pode definir valores padrão no estilo C+ + para argumentos escalares, como a seguir:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function makecoffee ($type = &quot;cappuccino&quot;) {return &quot;Making a cup of $type.\n&quot;;} echo makecoffee (); echo makecoffee (&quot;espresso&quot;);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function cafeteira ($tipo = &quot;cappuccino&quot;) {return &quot;Fazendo uma xícara de café $type.\n&quot;;} echo cafeteira (); echo cafeteira (&quot;expresso&quot;);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output from the above snippet is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída do código acima será:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Making a cup of cappuccino.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fazendo uma xícara de café cappucino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Making a cup of espresso.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fazendo uma xícara de café expresso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default value must be a constant expression, not (for example) a variable or class member.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor padrão precisa ser uma expressão constante, não (por exemplo) uma variável ou um membro de classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that when using default arguments, any defaults should be on the right side of any non-default arguments; otherwise, things will not work as expected.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que usando argumentos padrão, qualquer padrão deve vir após os argumentos sem padrão: caso contrário, as coisas não funcionarão como esperado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider the following code snippet:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Considere o seguinte trecho de código:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function makeyogurt ($type = &quot;acidophilus&quot;, $flavour) {return &quot;Making a bowl of $type $flavour.\n&quot;;} echo makeyogurt (&quot;raspberry&quot;); / / won&apos;t work as expected</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function iogurtera ($tipo = &quot;azeda&quot;, $sabor) {return &quot;Fazendo uma taça de $tipo $sabor.\n&quot;;} echo iogurtera (&quot;framboesa&quot;); / / não funciona como esperado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output of the above example is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída do exemplo acima é:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Missing argument 2 in call to makeyogurt() in / usr / local / etc / httpd / htdocs / php3test / functest.html on line 41 Making a bowl of raspberry.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Missing argument 2 in call to iogurtera() in / usr / local / etc / httpd / htdocs / php3test / functest.html on line 41 Fazendo uma taça de framboesa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Now, compare the above with this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Agora, compare o que está acima com este:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function makeyogurt ($flavour, $type = &quot;acidophilus&quot;) {return &quot;Making a bowl of $type $flavour.\n&quot;;} echo makeyogurt (&quot;raspberry&quot;); / / works as expected</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function iogurtera ($sabor, $tipo = &quot;azeda&quot;) {return &quot;Fazendo uma taça de $tipo $sabor.\n&quot;;} echo iogurtera (&quot;framboesa&quot;); / / funciona</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The output of this example is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A saída deste exemplo é:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Making a bowl of acidophilus raspberry.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Número variável de argumentos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 has support for variable-length argument lists in user-defined functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP4 tem suporte para um número variável de argumentos nas funções definidas pelo usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is really quite easy, using the func_num_args(), func_get_arg(), and func_get_args() functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é realmente bem fácil, usando as funções func_num_args(), func_get_arg() e func_get_args().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No special syntax is required, and argument lists may still be explicitly provided with function definitions and will behave as normal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma sintaxe especial é requerida, e a lista de argumentos ainda pode ser fornecida explicitamente com as definições de funções e se comportarão normalmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returning values</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retornando valores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sem_acquire</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sem_release</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sem_remove</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. serialize() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. serialize() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sesam_affected_rows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>result_id is a valid result id returned by sesam_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sesam_commit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sesam_disconnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sesam_execimm</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sesam_field_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sesam_rollback</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sesam_settransaction</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session handling functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Manejo de sessões</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_cache_expire</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If new_cache_expire is given, the current cache expire is replaced with new_cache_expire.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also see the session.cache_expire configuration directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se new_cache_expire for dado, o prazo do cache atual é substituído com new_cache_expire.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_cache_limiter</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If cache_limiter is specified, the name of the current cache limiter is changed to the new value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These headers determine the rules by which the page content may be cached by the client and intermediate proxies.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_cache_limiter() retorna o nome do atual limitador do cache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A value of public permits caching by proxies and the client, whereas private disallows caching by proxies and permits the client to cache the contents.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o cache_limiter está especificado, o nome do limitador do cache atual é mudado para o novo valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In private mode, the Expire header sent to the client may cause confusion for some browsers, including Mozilla.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estes headers determinam pelas quais o conteúdo da página pode ser guardado no cache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can avoid this problem by using private_no_expire mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Definindo o limitador do cache para nocache, por exemplo, rejeitaria qualquer armazenamento no cache do cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The expire header is never sent to the client in this mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele também poderia ser definido como private, que é um pouco mais restritivo do que public.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The cache limiter is reset to the default value stored in session.cache_limiter at request startup time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No modo private, Header expirado enviado para o cliente, pode provocar confusão para alguns para alguns navegadores incluindo o Mozilla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, you need to call session_cache_limiter() for every request (and before session_start() is called).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Header expirado nunca é enviado para o cliente nesse modo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. session_cache_limiter() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, você precisa chamar session_cache_limiter() para cada pedido (e antes session_start() é chamada).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also see the session.cache_limiter configuration directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. session_cache_limiter() exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php # Defini o limitador do cache para &apos;private&apos; session_cache_limiter(&apos;private&apos;); $cache_limiter = session_cache_limiter(); echo &quot;o limitador do cache est aacute; definido agora para $cache_limiter p &quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_cache_expire</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_decode</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Acima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_decode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_decode() decodes the session data in data, setting variables stored in the session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Voir aussi session_encode()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_decode() decifra dado de sessão em data, definindo variáveis guardadas na sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_destroy() destroys all of the data associated with the current session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_destroy() destrói tudo dos dados associados com a sessão corrente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It does not unset any of the global variables associated with the session, or unset the session cookie.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela não elimina nenhuma das variáveis globais associadas com a sessão, e nem o cookie de sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE on success and FALSE on failure to destroy the session data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna TRUE caso funcione e FALSE caso falhe para destruição dos dados da sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Destroying a session</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Destruindo uma sessão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Initialize the session. / / If you are using session_name( &quot;something&quot;), don&apos;t forget it now! session_start(); / / Unset all of the session variables. session_unset(); / / Finally, destroy the session. session_destroy();?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Inicializa uma sess atilde; o. / / Se voc ecirc; est aacute; usando session_name(&quot;something&quot;), n atilde;o esque ccedil;a! session_start(); / / Eliminar todas as vari aacute;veis de sess atilde;o. session_unset(); / / Finalmente, destrui ccedil; atilde;o da sess atilde;o. session_destroy();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Destroying a session with $_SESSION</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Destruindo uma sessão com $_SESSION</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Initialize the session. / / If you are using session_name( &quot;something&quot;), don&apos;t forget it now! session_start(); / / Unset all of the session variables. $_SESSION = array(); / / Finally, destroy the session. session_destroy();?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Inicializa uma sess atilde; o. / / Se voc ecirc; est aacute; usando session_name(&quot;something&quot;), n atilde;o esque ccedil;a! session_start(); / / Eliminar todas as vari aacute;veis de sess atilde;o. $_SESSION = array(); / / Finalmente, destrui ccedil; atilde;o da sess atilde;o. session_destroy();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_encode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_encode() returns a string with the contents of the current session encoded within.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_decode()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_encode() retorna uma string com o conteúdo da sessão corrente codificado em seu interior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_get_cookie_params</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session_get_cookie_params() function returns an array with the current session cookie information, the array contains the following items:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;lifetime&quot; - The lifetime of the cookie.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função session_get_cookie_params() retorna uma matriz com informação do cookie da sessão atual, a matriz contém os seguintes items:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;path&quot; - The path where information is stored.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;lifetime&quot; - A duração do cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;domain&quot; - The domain of the cookie.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;path&quot; - O caminho onde a informação está guardada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;secure&quot; - The cookie should only be sent over secure connections. (This item was added in PHP 4.0.4.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;domain&quot; - O domínio do cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the configuration directives session.cookie_lifetime, session.cookie_path, session.cookie_domain, session.cookie_secure, and session_set_cookie_params().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>&quot;secure&quot; - O cookie seria enviado apenas sobre conexões seguras. (Este item foi incluído no PHP 4.0.4.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_id() returns the session id for the current session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_id() retorna a id de sessão para a sessão atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If id is specified, it will replace the current session id. session_id() needs to be called before session_start() for that purpose.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se id está especificado, irá trocar a id da sessão atual. session_id() necessita ser chamada antes de session_start() para esse propósito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Depending on the session handler, not all characters are allowed within the session id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dependendo do session handler, nem todos os caracteres serão permitidos dentro da id de sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the file session handler only allows characters in the range a-z, A-Z and 0-9!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, o arquivo session handler permite apenas caracteres do intervalo a-z, A-Z e 0-9!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constant SID can also be used to retrieve the current name and session id as a string suitable for adding to URLs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A constante SID também pode ser usada para devolver o nome e a id de sessão atual como uma string combinada para adicionar nas URLs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that SID is only defined if the client didn &apos;t send the right cookie.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que SID está apenas definido se o cliente não enviou o cookie correto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also Session handling.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também Session handling.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_start(), session_set_save_handler(), and session.save_handler.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também session_start().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_is_registered() returns TRUE if there is a global variable with the name name registered in the current session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_is_registered() retorna TRUE se há uma variável com o nome name registrada na sessão atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If $_SESSION (or $HTTP_SESSION_VARS for PHP 4.0.6 or less) is used, use isset() to check a variable is registered in $_SESSION.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se $_SESSION (ou $HTTP_SESSION_VARS para PHP 4.0.6 ou inferior) é usada, use isset() para checar se uma variável está registrada em $_SESSION.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using $_SESSION (or $HTTP_SESSION_VARS), do not use session_register(), session_is_registered() and session_unregister().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está usando $_SESSION (ou $HTTP_SESSION_VARS), não utilize session_register(), session_is_registered() e session_unregister().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_module_name() returns the name of the current session module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_module_name() retorna o nome do módulo da sessão atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If module is specified, that module will be used instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se module está especificado, o nome será trocado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If name is specified, the name of the current session is changed to its value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It should contain only alphanumeric characters; it should be short and descriptive (i.e. for users with enabled cookie warnings).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_name() retorna o nome da sessão atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, you need to call session_name() for every request (and before session_start() or session_register() are called).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se name está especificado, o nome da sessão atual é mudado para esse valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. session_name() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome da sessão é retomado para o valor padrão guardado em session.name no pedido na hora de inicialização.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the session.name configuration directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. session_name() exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / defina o nome da sess atilde; o para WebsiteID $previous_name = session_name(&quot;WebsiteID&quot;); echo &quot;O nome da sess atilde;o anterior era $previous_name p &quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_module_name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read in session data without locking the session data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ler num dado de sessão sem fechar o dado da sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changing session data is not possible, but frameset performance will be improved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mudar o dado da sessão é impossível, mas a performance do frameset será melhorada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_register</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For each name, session_register() registers the global variable with that name in the current session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want your script to work regardless of register_globals, you need to use the $_SESSION array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_register() aceita um número de argumentos variáveis, algund deles podem ser ou uma string com o nome da variável ou uma matriz de nomes de variáveis ou outras matrizes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your script uses session_register(), it will not work in environments where register_globals is disabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para cada nome, session_register() registra a variável global com o nome na sessão atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This registers a global variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta registra uma variável global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to register a session variable from within a function, you need to make sure to make it global using the global keyword or the $GLOBALS[] array, or use the special session arrays as noted below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quer registrar uma variável de sessão de dentro de uma função, você precisa definir ela como global() ou usar as matrizes de sessão como mostradas abaixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function returns TRUE when all of the variables are successfully registered with the session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função retorna TRUE quando todas de suas variáveis são registradas sem erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If session_start() was not called before this function is called, an implicit call to session_start() with no parameters will be made. $_SESSION does not mimick this behavior and requires session_start() before use.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se session_start() não foi chamada antes desta função ser chamada, uma chamada implícita para session_start() sem parâmetros será feita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also create a session variable by simply setting the appropriate member of the $_SESSION or $HTTP_SESSION_VARS (PHP 4.1.0) array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode criar variáveis de sessão simplesmente definindo o membro apropriado de $_SESSION ou $HTTP_SESSION_VARS (PHP 4.1.0) matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$barney = &quot;A big purple dinosaur .&quot;; session_register(&quot;barney&quot;); $_SESSION[&quot;zim&quot;] = &quot;An invader from another planet .&quot;; # The old way was to use $HTTP_SESSION_VARS $HTTP_SESSION_VARS[&quot;spongebob&quot;] = &quot;He&apos;s got square pants .&quot;;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$barney = &quot;Um grande dinossauro p uacute;rpura .&quot;; session_register(&quot;barney&quot;); $_SESSION[&quot;zim&quot;] = &quot;Um invasor de outro planeta .&quot;; # The old way was to use $HTTP_SESSION_VARS $HTTP_SESSION_VARS[&quot;spongebob&quot;] = &quot;Ele conseguiu cal ccedil;as ajustadas .&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is currently impossible to register resource variables in a session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não é possível registrar correntemente variáveis resource numa sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, you cannot create a connection to a database and store the connection id as a session variable and expect the connection to still be valid the next time the session is restored.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, você não pode criar uma conexão para um banco de dados e guardar a id de conexão como uma variável de sessão e esperar que a conexão ainda esteja válida na próxima vez que a sessão estiver restaurada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP functions that return a resource are identified by having a return type of resource in their function definition.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções do PHP que retornam uma resource são identificadas por conterem um retorno do tipo resource em suas definições de função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A list of functions that return resources are available in the resource types appendix.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma lista de funções que retornam resources estão disponíveis em tipos resources appendix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example: $_SESSION[ &apos;var&apos;] = &apos;ABC&apos;;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se $_SESSION (ou $HTTP_SESSION_VARS para PHP 4.0.6 ou inferior) é usada, para variável definida variable com $_SESSION. i.e. $_SESSION[&apos;var&apos;] = &apos;ABC&apos;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_is_registered() and session_unregister().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também session_is_registered() eS session_unregister().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_save_path</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If path is specified, the path to which data is saved will be changed. session_save_path() needs to be called before session_start() for that purpose.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On some operating systems, you may want to specify a path on a filesystem that handles lots of small files efficiently.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_save_path() retorna o path do diretório atual usado para salvar os dados de sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, on Linux, reiserfs may provide better performance than ext2fs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se path está especificado, o path para aqueles dados que estão salvo será mudado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the session.save_path configuration directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, em Linux, reiserfs pode oferecer uma performance melhor do que ext2fs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_set_cookie_params</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The effect of this function only lasts for the duration of the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Define os parâmetros de cookie definidos no arquivo php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The secure parameter was added in PHP 4.0.4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O efeito desta função apenas continua até a duração do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the configuration directives session.cookie_lifetime, session.cookie_path, session.cookie_domain, session.cookie_secure, and session_get_cookie_params().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro secure foi adicionado no PHP 4.0.4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_set_save_handler() sets the user-level session storage functions which are used for storing and retrieving data associated with a session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_set_save_handler() session_set_save_handler() define a sequência de funções de armazenamento que é usada para guardar e devolver dados associados à sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is most useful when a storage method other than those supplied by PHP sessions is preferred. i.e.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é mais usual quando um quando um método de armazenamento, a não ser que aquele oferecido por sessões do PHP seja preferível. i.e.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Storing the session data in a local database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Guardar dados de sessão em um banco de dados local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The &quot;write&quot; handler is not executed until after the output stream is closed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve definir as opções de configuração session.save_handler para user em seu arquivo php.ini para session_set_save_handler() funcionar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, output from debugging statements in the &quot;write&quot; handler will never be seen in the browser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função &quot;write&quot; handler não é executada até depois que o fluxo de saída esteja fechado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If debugging output is necessary, it is suggested that the debug output be written to a file instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a saída debugging é necessária, ao invés disso é sugerido que a saída debug seja escrita para um arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The write handler is not executed if the session contains no data; this applies even if empty session variables are registered.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função &quot;write&quot; handler não é executada se a sessão não contém dados; isto se aplica sempre se variáveis de sessão vazias são registradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This differs to the default file-based session save handler, which creates empty session files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta difere à sessão padrão de save handler baseado em arquivos, que cria arquivos de sessão vazios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example provides file based session storage similar to the PHP sessions default save handler files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O seguinte exemplo oferece um aramzenamento de sessão baseado em arquivos similar a sessões de PHP padrões save handler files.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example could easily be extended to cover database storage using your favorite PHP supported database engine.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este exemplo poderia facilmente ser extendido para outras bases de dados usando seu gerente de banco de dados favorito suportado pelo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read function must return string value always to make save handler work as expected.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função &quot;Read&quot; deve retornar um valor string sempre que fizer o save handler trabalhar como o esperado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return empty string if there is no data to read.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string vazia se não existe dados para ler.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Return values from other handlers are converted to boolean expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna valores de outros handlers que estejam convertidos para expressões booleanas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE for success, FALSE for failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>TRUE em sucesso, FALSE em falha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. session_set_save_handler() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. session_set_save_handler() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the session.save_handler configuration directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function open ($save_path, $session_name) {global $sess_save_path, $sess_session_name; $sess_save_path = $save_path; $sess_session_name = $session_name; return(true);} function close() {return(true);} function read ($id) {global $sess_save_path, $sess_session_name; $sess_file = &quot;$sess_save_path / sess_$id&quot;; if ($fp = @fopen($sess_file, &quot;r&quot;)) {$sess_data = fread($fp, filesize($sess_file)); return($sess_data);} else {return(&quot;&quot;); / / Deve retornar &quot;&quot; aqui.}} function write ($id, $sess_data) {global $sess_save_path, $sess_session_name; $sess_file = &quot;$sess_save_path / sess_$id&quot;; if ($fp = @fopen($sess_file, &quot;w&quot;)) {return(fwrite($fp, $sess_data));} else {return(false);}} function destroy ($id) {global $sess_save_path, $sess_session_name; $sess_file = &quot;$sess_save_path / sess_$id&quot;; return(@unlink($sess_file));} / ************************************************ * AVISO - voc ecirc; precisa implementar alguns tipos* * de rotinas de garbage collection aqui. * ************************************************ / function gc ($maxlifetime) {return true;} session_set_save_handler (&quot;open&quot;, &quot;close&quot;, &quot;read&quot;, &quot;write&quot;, &quot;destroy&quot;, &quot;gc&quot;); session_start(); / / Use o resto da sess atilde ;o normalmente?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_start() creates a session or resumes the current one based on the current session id that&apos;s being passed via a request, such as GET, POST, or a cookie.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_start() cria uma sessão (ou resume a sessão atual baseada numa id de sessão sendo passada via uma variável GET ou um cookie).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to use a named session, you must call session_name() before calling session_start().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quer usar uma sessão nomeada, você deve chamar session_name() antes de chamar session_start().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function always returns TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função sempre retorna TRUE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using cookie-based sessions, you must call session_start() before anything is output to the browser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está usando sessões baseadas em cookie, você deve chamar session_start() antes de qualquer coisa ser exibida para o navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_start() will register internal output handler for URL rewriting when trans-sid is enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_start() irá registrar um handler de saída interno para URL reescrevendo quando trans-sid está habilitada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a user uses ob_gzhandler or like with ob_start(), the order of output handler is important for proper output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um usuário utiliza ob_gzhandler ou ob_start(), a ordem do handler de exibição é importante para a exibição apropriada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, user must register ob_gzhandler before session start.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, usuário deve registrar ob_gzhandler antes da sessão começar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of zlib.output_compression is recommended rather than ob_gzhandler()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uso de zlib.output_compression é mais recomendado do que ob_gzhandler</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_unregister</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session_unregister() unregisters the global variable named name from the current session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_unregister() desregistra (esquece) a variável global nomeada name da sessão atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If $_SESSION (or $HTTP_SESSION_VARS for PHP 4.0.6 or less) is used, use unset() to unregister a session variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not unset the corresponding global variable for name, it only prevents the variable from being saved as part of the session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não elimina a variável global correspondente por name, ela apenas evita que a variável faça parte da sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must call unset() to remove the corresponding global variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve chamar unset() para eliminar a variável global correspondente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using $_SESSION (or $HTTP_SESSION_VARS), do not use session_register(), session_is_registered() and session_unregister().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está usando $_SESSION (ou $HTTP_SESSION_VARS), não use session_register(), session_is_registered() e session_unregister().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If $_SESSION (or $HTTP_SESSION_VARS for PHP 4.0.6 or less) is used, use unset() to unregister session variable. i.e. $_SESSION = array();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session_write_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>End the current session and store session data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session data is usually stored after your script terminated without the need to call session_write_close(), but as session data is locked to prevent concurrent writes only one script may operate on a session at any time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os dados de sessão sã geralmente guardados depois que o script termina sem a necessidade de chamar session_write_close(), mas como dados de sessão são trancados para evitar escritas concorrentes, apenas um script pode operar em uma sessão de cada vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using framesets together with sessions you will experience the frames loading one by one due to this locking.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando usando framesets junto com sessões você irá experimentar os frames sendo lidos um a um devido a esta trava.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can reduce the time needed to load all the frames by ending the session as soon as all changes to session variables are done.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode reduzir o tempo necessário para ler todos os frames terminando a sessão tão logo todas as mudanças das variáveis de sessão estejam feitas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. setcookie() parameters explained</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. setcookie() parameters explained</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. setcookie() send examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. setcookie() send examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. setcookie() delete examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. setcookie() delete examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>set_error_handler</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets a user function (error_handler) to handle errors in a script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of stream_set_write_buffer().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>set_file_buffer - - Sinônimo de stream_set_write_buffer()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. setlocale() Examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. setlocale() Examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>set_time_limit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the number of seconds a script is allowed to run.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>settype</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the type of variable var to type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. settype() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. settype() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates the sha1 hash of filename using the US Secure Hash Algorithm 1, and returns that hash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Calcula a hash sha1 de nomedoarquivo usando US Secure Hash Algorithm 1, e retorna esta hash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The hash is a 40-character hexadecimal number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A hash é um número hexadecimal de 40 caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon failure, FALSE is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em caso de falha é retornado FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sha1(), crc32(), and md5_file()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também sha1(), crc32(), e md5_file()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates the sha1 hash of str using the US Secure Hash Algorithm 1, and returns that hash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Calcula a hash sha1 de str usando US Secure Hash Algorithm 1, e retorna esta hash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sha1_file(), crc32(), and md5()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também sha1_file(), crc32(), e md5()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>shmop_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>shmop_close() is used to close a shared memory block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>shmop_delete</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>shmop_delete() is used to delete a shared memory block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>shmop_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>shmop_open() can create or open a shared memory block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>shmop_read</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>shmop_read() will read a string from shared memory block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>shmop_write</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>shmop_write() will write a string into shared memory block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>shm_remove</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Removes shared memory from Unix systems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias to highlight_file().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é um apelido para highlight_file().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information see the documentation there.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações veja a documentação lá.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also highlight_string() and highlight_file().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também highlight_string() e highlight_file().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A function may be defined using syntax such as the following:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 13.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function foo ($arg_1, $arg_2,..., $arg_n) {echo &quot;Example function.\n&quot;; return $retval;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any valid PHP code may appear inside a function, even other functions and class definitions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções definidas pelo usuário</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, functions must be defined before they are referenced.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma função pode ser definida usando-se a sintaxe como a seguinte:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Except when a function is conditionally defined such as shown in the two examples below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function foo ($argumento_1, $argumento_2,..., $argumento_n) {echo &quot;Exemplo de função.\n&quot;; return $valor_retornado;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Its definition must be processed prior to being called.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer código PHP válido pode aparecer dentro de uma função, mesmo outras funções e definições de classes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Conditional functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP3, as funções precisam ser definidas antes de serem referenciadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 13-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse requisito não existe no PHP4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function foo() {function bar() {echo &quot;I don&apos;t exist until foo() is called.\n&quot;;}} / * We can&apos;t call bar() yet since it doesn&apos;t exist. * / foo(); / * Now we can call bar(), foo()&apos;s processesing has made it accessable. * / bar();?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP não suporta sobrecarga de funções, e também não é possível cancelar ou alterar a definição de funções previamente declaradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 does not support variable numbers of arguments to functions, although default arguments are supported (see Default argument values for more information).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP3 não suporta número variável de argumentos para funções, apesar de os argumentos padrões serem suportados (veja Valores padrão de argumentos para mais informações).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 supports both: see Variable-length argument lists and the function references for func_num_args(), func_get_arg(), and func_get_args() for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP4 suporta ambos: veja Número de argumentos variável e as referências das funções func_num_args(), func_get_arg() e func_get_args() para mais informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function arguments</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Argumentos de funções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function shuffles (randomizes the order of the elements in) an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função mistura de forma aleatória os elementos de um array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must use srand() to seed this function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve usar essa função em conjunto com srand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. shuffle() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de shuffle()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$numbers = range (1,20); srand ((float)microtime()*1000000); shuffle ($numbers); while (list (, $number) = each ($numbers)) {echo &quot;$number &quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$numeros = range (1,20); srand ((float)microtime()*1000000); shuffle ($numeros); while (list (, $numero) = each ($numeros)) {echo &quot;$numero &quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also arsort(), asort(), ksort(), rsort(), sort(), and usort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também arsort(), asort(), ksort(), rsort(), sort() e usort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the hyperbolic sine of arg, defined as (exp(arg) - exp(-arg)) / 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o seno hiperbólico de arg, definido como (exp(arg) - exp(-arg)) / 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sin(), asinh(), cos() and tan().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também sin(), asinh(), cos() e tan().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sin() returns the sine of the arg parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arg parameter is in radians.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sin() retorna o seno do parâmetro arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Precision depends on your precision directive print sin( deg2rad(60)); / / 0.866025403... print sin(60); / / -0.304810621...?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Precisão depende da diretiva precision print sin( deg2rad(60)); / / 0.866025403... print sin(60); / / -0.304810621...?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also asin(), cos(), tan() and deg2rad().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também asin(), cos(), tan() e deg2rad().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sizeof() function is an alias for count().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função sizeof() é um alias para count().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also count().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também count().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The sleep() function delays program execution for the given number of seconds.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função sleep() atrasa a execução do programa de acordo com a quantidade de segundos dados no parâmetro seconds.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also usleep() and set_time_limit()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também usleep() e set_time_limit()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.8, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>snmp_set_quick_print</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sets the value of quick_print within the UCD SNMP library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_accept</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_bind</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_clear_error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_create_listen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_create_pair</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_get_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_getpeername</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure. socket_getpeername() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas. socket_getpeername() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_getsockname</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns TRUE on success or FALSE on failure. socket_getsockname() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna TRUE em caso de sucesso ou FALSE em falhas. socket_getsockname() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias of stream_get_meta_data().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_get_status - - Alias of stream_get_meta_data().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_iovec_add</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_iovec_alloc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_iovec_delete</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_iovec_fetch</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_iovec_free</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_iovec_set</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_last_error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_listen</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_read</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_readv</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_recvfrom</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_recv</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_recvmsg</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_select</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_send</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_sendmsg</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_sendto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias for stream_set_blocking().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_set_blocking - - Alias for stream_set_blocking()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_set_nonblock</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_set_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an alias for stream_set_timeout().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_set_timeout - - Alias for stream_set_timeout()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_shutdown</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_strerror</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. socket_strerror() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. socket_strerror() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_write</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>socket_writev</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>old_function</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The old_function statement allows you to declare a function using a syntax identical to PHP / FI2 (except you must replace&apos;function &apos;with&apos;old_function&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comando old_function permite que você declare uma função usando uma sintaxe idêntica ao PHP / FI2 (exceto pelo fato de que você precisa substituir &apos;function &apos;com &apos;old_function&apos;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a deprecated feature, and should only be used by the PHP / FI2 - PHP 3 convertor.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma implementação obsoleta, e deve ser usada somente pelo conversor PHP / FI2 - PHP3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions declared as old_function cannot be called from PHP &apos;s internal code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções declaradas como old_function não podem ser chamadas a partir de código interno do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Among other things, this means you can&apos; t use them in functions such as usort(), array_walk(), and register_shutdown_function().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entre outras coisas, isso significa que você não pode usá-las em funções como usort(), array_walk() e register_shutdown_function().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can get around this limitation by writing a wrapper function (in normal PHP 3 form) to call the old_function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode contornar essa limitação escrevendo um invólucro de função (no formato PHP3 normal) para chamar o old_function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sort</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sorts an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Elements will be arranged from lowest to highest when this function has completed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os elementos serão ordenados do menor para o maior ao final da execução dessa função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. sort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de sort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $fruits = array (&quot;lemon&quot;, &quot;orange&quot;, &quot;banana&quot;, &quot;apple&quot;); sort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo &quot;fruits[&quot;.$key .&quot;] = &quot;.$val .&quot;\n&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $frutas = array (&quot;limao&quot;, &quot;laranja&quot;, &quot;banana&quot;, &quot;melancia&quot;); sort ($frutas); reset ($frutas); while (list ($chave, $valor) = each ($frutas)) {echo &quot;frutas[&quot;.$chave .&quot;] = &quot;.$valor .&quot;\n&quot;;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>fruits[ 0] = apple fruits[1] = banana fruits[2] = lemon fruits[3] = orange</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fruits[ 0] = banana fruits[1] = laranja fruits[2] = limao fruits[3] = melancia</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fruits have been sorted in alphabetical order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As frutas foram classificadas em ordem alfabética.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional second parameter sort_flags may be used to modify the sorting behavior using these values:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo argumento opcional sort_flags pode ser usado para modificar o comportamento da ordenação podendo receber os seguintes valores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting type flags:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sinais de tipo de ordenação:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_REGULAR - compare items normally</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_REGULAR - compara os itens normalmente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_NUMERIC - compare items numerically</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_NUMERIC - compara os itens como valores numéricos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_STRING - compare items as strings</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_STRING - compara os itens como strings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also arsort(), asort(), ksort(), natsort(), natcasesort(), rsort(), usort(), array_multisort(), and uksort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também arsort(), asort(), ksort(), natsort(), natcasesort(), rsort(), usort(), array_multisort() e uksort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>soundex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calculates the soundex key of str.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. split() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. split() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. split() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. split() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sprintf</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string produced according to the formatting string format.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also printf(), sscanf(), fscanf(), vsprintf(), and number_format().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Examples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5. sprintf(): zero-padded integers</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5. sprintf(): zero-padded integers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 6. sprintf(): formatting currency</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 6. sprintf(): formatting currency</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. sql_regcase() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. sql_regcase() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sqrt</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the square root of arg.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Precision depends on your precision directive echo sqrt( 9); / / 3 echo sqrt(10); / / 3.16227766...?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Precisão depende de sua diretiva precision echo sqrt( 9); / / 3 echo sqrt(10); / / 3.16227766...?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also pow().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também pow().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>srand</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Seeds the random number generator with seed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / seed with microseconds function make_seed() {list($usec, $sec) = explode( &apos;&apos;, microtime()); return (float) $sec + ((float) $usec * 100000);} srand(make_seed()); $randval = rand();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / semeira com microsegundos function make_seed() {list($usec, $sec) = explode( &apos;&apos;, microtime()); return (float) $sec + ((float) $usec * 100000);} srand(make_seed()); $randval = rand();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP 4.2.0 it &apos;s no longer necessary to seed the random number generator before using it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.2.0 não é mais necessário semear o gerador de números aleatórios antes de utilizá-lo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rand(), getrandmax() and mt_srand().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também rand(), getrandmax() e mt_srand().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retornando valores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Values are returned by using the optional return statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Valores podem ser retornados utilizando a instrução opcional return.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any type may be returned, including lists and objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer tipo pode ser retornado, incluindo arrays e objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This causes the function to end its execution immediately and pass control back to the line from which it was called.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto faz com que as função termine sua execução imediatamente e passa o controle de volta para a linha de onde ela foi chamada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See return() for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a documentação da função return() para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function square ($num) {return $num * $num;} echo square (4); / / outputs &apos;16 &apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function quadrado ($num) {return $num * $num;} echo quadrado (4); / / imprime &apos;16 &apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can &apos;t return multiple values from a function, but similar results can be obtained by returning a list.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode retornar múltiplos valores a partir de uma função, mas resultados similares podem ser devolvidos retornando por uma lista.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function small_numbers() {return array (0, 1, 2);} list ($zero, $one, $two) = small_numbers();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function numeros_pequenos() {return array (0, 1, 2);} list ($zero, $um, $dois) = numeros_pequenos();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To return a reference from a function, you have to use the reference operator in both the function declaration and when assigning the returned value to a variable:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para retornar uma referência de uma função, você precisa utilizar o operador de referência tanto na declaração da função como quando assimilando o valor retornado para a variável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function returns_reference() {return $someref;} $newref = returns_reference();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function retorna_referencia() {return $alguma_referencia;} $nova_referencia = retorna_referencia();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information on references, please check out References Explained.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para mais detalhes sobre referências, leia a seção Referências.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. sscanf() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. sscanf() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. sscanf() - using optional parameters</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. sscanf() - using optional parameters</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Gathers the statistics of the file named by filename.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pegar estatísticas sobre o arquivo com o nome de nomedoarquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number of links</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>número de links</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>user id of owner</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>user id owner</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>size in bytes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tamanho em bytes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns FALSE in case of error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna FALSE em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>stat() cannot be used on remote files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>stat() não pode ser utilizado em arquivos remotos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strcasecmp() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strcasecmp() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is an alias for strstr(), and is identical in every way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é um apelido para strstr(), e é idêndica de todos os meios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna 0 se str1 é menor do que str2; 0 se str1 é maior do que str2, e 0 se forem iguais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this comparison is case sensitive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que esta função diferencia maiúsculas e minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), strcasecmp(), substr(), stristr(), strncasecmp(), strncmp(), and strstr().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também ereg(), strcasecmp(), substr(), stristr(), strncasecmp(), strncmp(), e strstr().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal. strcoll() uses the current locale for doing the comparisons.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna 0 se str1 é menor do que str2; 0 se str1 é maior do que str2, e 0 se forem iguais. strcoll() usa o local atual para fazer as comparações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the current locale is C or POSIX, this function is equivalent to strcmp().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o local atual for C ou POSIX, esta função é equivalente à strcmp().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this comparison is case sensitive, and unlike strcmp() this function is not binary safe.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que esta função diferencia maiúsculas e minúsculas, e diferentemente de strcmp() esta função não é segura para binário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ereg(), strcmp(), strcasecmp(), substr(), stristr(), strncasecmp(), strncmp(), strstr(), and setlocale().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também ereg(), strcmp(), strcasecmp(), substr(), stristr(), strncasecmp(), strncmp(), strstr(), e setlocale().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the length of the initial segment of str1 which does not contain any of the characters in str2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o tamanho do segmento inicial de str1 que não contém nenhum dos caracteres em str2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also strspn().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também strspn().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>stream_filter_append</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adds filtername to the list of filters attached to stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>stream_filter_prepend</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>stream_get_meta_data</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns information about an existing stream.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Appendix I for more information about wrappers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>See Apêndice I for more information about wrappers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Appendix I for more information about wrappers and their wrapper data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>See Apêndice I for more information about wrappers and their wrapper data.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. stream_set_timeout() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. stream_set_timeout() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>stream_set_write_buffer</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Output using fwrite() is normally buffered at 8K.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. stream_set_write_buffer() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. stream_set_write_buffer() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>strftime</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string formatted according to the given format string using the given timestamp or the current local time if no timestamp is given.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Month and weekday names and other language dependent strings respect the current locale set with setlocale().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string formatada de acordo com o formato dado em timestamp ou o horário corrente se nenhum timestamp é dado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%a - abbreviated weekday name according to the current locale</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nomes de mês e dia da semana e outras strings dependentes de linguagens respeitam o a localidade definida com setlocale().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%b - abbreviated month name according to the current locale</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As seguintes conversões especificadoras são conhecidas no formato de string:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%B - full month name according to the current locale</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%a - dia da semana abreviado de acordo com a localidade</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%c - preferred date and time representation for the current locale</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%A - nome da semana completo de acordo com a localidade</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%C - century number (the year divided by 100 and truncated to an integer, range 00 to 99)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%b - nome do mês abreviado de acordo com a localidade</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%D - same as %m / %d / %y</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%B - nome do mês completo de acordo com a localidade</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%e - day of the month as a decimal number, a single digit is preceded by a space (range &apos;1&apos; to &apos;31&apos;)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%c - representação da data e hora preferida para a localidade</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%G - The 4-digit year corresponding to the ISO week number (see %V).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%C - número do século (o ano dividido por 100 e truncado para um inteiro, de 00 até 99)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This has the same format and value as %Y, except that if the ISO week number belongs to the previous or next year, that year is used instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%d - dia do mês como um número decimal (de 01 até 31)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%h - same as %b</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%D - mesmo que %m / %d / %y</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%I - hour as a decimal number using a 12-hour clock (range 01 to 12)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%e - dia do mês como um número decimal, um simples dígito é precedido por espaço (de &apos;1&apos; até &apos;31&apos;)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%j - day of the year as a decimal number (range 001 to 366)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%g - como %G, mas sem o século.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%M - minute as a decimal number</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%G - o 4-dígito do ano correspodendo as ISO week number (see %V).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%p - either `am&apos; or `pm &apos;according to the given time value, or the corresponding strings for the current locale</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este tem o mesmo formato e valor que %Y, exceto que se o ISO week number pertence ao prévio ou próximo ano, aquele ano é usado ao invés deste.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%r - time in a.m. and p.m. notation</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%h - mesmo que %b</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%S - second as a decimal number</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%H - hora como um número decimal usando um relógio de 24-horas (de 00 até 23)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%T - current time, equal to %H:%M:%S</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%I - hora como um número decimal usando um relógio de 12-hoas (de 01 até 12)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%u - weekday as a decimal number [1,7], with 1 representing Monday</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%j - dia do ano como número decimal (de 001 até 366)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sun Solaris seems to start with Sunday as 1 although ISO 9889:1999 (the current C standard) clearly specifies that it should be Monday.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%M - minuto como número decimal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%V - The ISO 8601:1988 week number of the current year as a decimal number, range 01 to 53, where week 1 is the first week that has at least 4 days in the current year, and with Monday as the first day of the week. (Use %G or %g for the year component that corresponds to the week number for the specified timestamp.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%n - caracter novalinha</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%W - week number of the current year as a decimal number, starting with the first Monday as the first day of the first week</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%p - um dos dois `am&apos; ou `pm &apos;de acordo com o valor da hora dada, ou as strings correspondentes para a localidade</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%w - day of the week as a decimal, Sunday being 0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%r - hora em a.m. e p.m. notação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%x - preferred date representation for the current locale without the time</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%R - hora em notação de 24 horas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%X - preferred time representation for the current locale without the date</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%S - segundo como um número decimal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%y - year as a decimal number without a century (range 00 to 99)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%t - caracter tab</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%Y - year as a decimal number including the century</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%T - hora corrente, igual a %H:%M:%S</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>%% - a literal `% &apos;character</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%u - dia da semana como número decimal [1,7], com 1 representando Segunda-feira</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atenção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not all conversion specifiers may be supported by your C library, in which case they will not be supported by PHP&apos; s strftime().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sun Solaris parece iniciar o Domingo como 1 embora ISO 9889:1999 (o padrão C corrente) claramente especificados que ele poderia ser segunda-feira.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that e.g. %e, %T, %R and %D (there might be more) will not work on Windows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%U - dia da semana do ano corrente como número decimal, começando com o primeiro domingo como o primeiro dia da primeira semana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>setlocale (LC_TIME, &quot;C&quot;); print (strftime (&quot;%A in Finnish is &quot;)); setlocale (LC_TIME, &quot;fi_FI&quot;); print (strftime (&quot;%A, in French &quot;)); setlocale (LC_TIME, &quot;fr_FR&quot;); print (strftime (&quot;%A and in German &quot;)); setlocale (LC_TIME, &quot;de_DE&quot;); print (strftime (&quot;%A.\n&quot;));</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%V - \O número da semana corrente ISO 8601:1988 do ano corrente como um número decimal, de 01 até 53, onde semana 1 é a primeira semana que tem pelo menos 4 dias no ano corrente, e com segunda-feira como o primeiro dia da semana. (Use %G ou %g para o componente anual que corresponde ao dia da semana para o para o timestamp especificado.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note: %G and %V, which are based on ISO 8601:1988 week numbers can give unexpected (albiet correct) results if the numbering system is not thoroughly understood.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%W - dia da semana do ano corrente como número decimal, começando com o a segunda-feira como o primeiro dia da primera semana</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%w - dia da semana como número decimal, domingo sendo 0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * December 2002 / January 2003 ISOWk M Tu W Thu F Sa Su ---- - --------------------------- - 51 16 17 18 19 20 21 22 52 23 24 25 26 27 28 29 1 30 31 1 2 3 4 5 2 6 7 8 9 10 11 12 3 13 14 15 16 17 18 19 * / / / Outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%X - representação preferida para a hora para a localidade corrente sem a data</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>12 / 28 / 2002 - %V,%G,%Y = 52,2002,2002 print &quot;12 / 28 / 2002 - %V,%G,%Y =&quot;. strftime(&quot;%V,%G,%Y&quot;,strtotime(&quot;12 / 28 / 2002&quot;)). &quot;\n&quot;; / / Outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%Y - ano como número decimal incluindo o século</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>12 / 30 / 2002 - %V,%G,%Y = 1,2003,2002 print &quot;12 / 30 / 2002 - %V,%G,%Y =&quot;. strftime(&quot;%V,%G,%Y&quot;,strtotime(&quot;12 / 30 / 2002&quot;)). &quot;\n&quot;; / / Outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>%Z - time zone ou nome or abreviação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 / 10 / 2003 - %V,%G,%Y = 2,2003,2003 print &quot;1 / 10 / 2003 - %V,%G,%Y =&quot;. strftime(&quot;%V,%G,%Y&quot;,strtotime(&quot;1 / 10 / 2003&quot;)). &quot;\n&quot;; / * December 2004 / January 2005 ISOWk M Tu W Thu F Sa Su ---- - --------------------------- - 51 13 14 15 16 17 18 19 52 20 21 22 23 24 25 26 53 27 28 29 30 31 1 2 1 3 4 5 6 7 8 9 2 10 11 12 13 14 15 16 * / / / Outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>12 / 31 / 2004 - %V,%G,%Y = 53,2004,2004 print &quot;12 / 31 / 2004 - %V,%G,%Y =&quot;. strftime(&quot;%V,%G,%Y&quot;,strtotime(&quot;12 / 31 / 2004&quot;)). &quot;\n&quot;; / / Outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strftime() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also setlocale() and mktime() and the Open Group specification of strftime().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também setlocale() e mktime() e a Open Group specification de strftime().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>stripcslashes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with backslashes stripped off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recognizes C-like \n, \r..., octal and hexadecimal representation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Reconhece estilo C \n, \r..., representação octal e hexadecimal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also addcslashes().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também addcslashes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns a string with backslashes stripped off. (\ &apos;becomes&apos; and so on.) Double backslashes are made into a single backslash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string com as barras invertidas retiradas. (\ &apos;se torna&apos; e assim por diante.) Barras invertidas duplas se tornam barras invertidas simples.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also addslashes().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também addslashes().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function tries to return a string with all HTML and PHP tags stripped from a given str.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função tenta retornar uma string retirando todas as tags HTML e PHP de str.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It errors on the side of caution in case of incomplete or bogus tags.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele erra no lado de ter cuidado no caso de tags com problemas ou incompletas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It uses the same tag stripping state machine as the fgetss() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usa o mesmo sistema para retirar as tags do que fgetss().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use the optional second parameter to specify tags which should not be stripped.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode utilizar o segundo parâmetro, que é opcional, para indicar tags que não devam ser retiradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strip_tags() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo strip_tags()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not modify any attributes on the tags that you allow using allowable_tags, including the style and onmouseover attributes that a mischievous user may abuse when posting text that will be shown to other users.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não modifica nenhum dos atributos das tags que você permitiu usando allowable_tags, incluindo os atributos style e onmouseover que um usuário travesso pode abusar quando colocar texto a ser mostrado para os outros usuários.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the length of string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o tamanho de string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. str_pad() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. str_pad() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strrchr() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strrchr() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. str_repeat() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. str_repeat() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. str_replace() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. str_replace() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>strrev</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns string, reversed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reversing a string with strrev()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>str_shuffle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>str_shuffle() shuffles a string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $str = &apos;abcdef&apos;; $shuffled = str_shuffle($str); / / This will print something like: bfdaec print $shuffled;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. str_shuffle() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strstr() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strstr() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtok() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strtok() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtolower() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strtolower() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function expects to be given a string containing an English date format and will try to parse that format into a UNIX timestamp relative to the timestamp given in now, or the current time if none is supplied.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função espera que seja dado uma string contendo um formato de data em inglês e tentará analisar esse formato dentro de um timestamp Unix relativo ao timestamp dado em now, ou a hora atual se nada é fornecido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon failure, -1 is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se fracassa, -1 é retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because strtotime() behaves according to GNU date syntax, have a look at the GNU manual page titled Date Input Formats.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Porque strtotime() comporta-se de acordo com a sintaxe de data GNU, procure na página do manual GNU Date Input Formats.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Described there is valid syntax for the time parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lá está descrito a sintaxe válida para o parâmetro time.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtotime() examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strtotime() exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Checking for failure</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Checando por fracasso</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The valid range of a timestamp is typically from Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (These are the dates that correspond to the minimum and maximum values for a 32-bit signed integer.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A linha de um timestamp válido é basicamente Fri, 13 Dec 1901 20:45:54 GMT to Tue, 19 Jan 2038 03:14:07 GMT. (Estes são os dados que correspondem aos valores máximos e mínimos para um inteiro de 32-bit.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtoupper() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strtoupper() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. strtr() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. strtr() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>strval</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the string value of var.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.3.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>str_word_count</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Counts the number of words inside string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. substr_count() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. substr_count() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. substr_replace() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. substr_replace() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports the concept of variable functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that if a variable name has parentheses appended to it, PHP will look for a function with the same name as whatever the variable evaluates to, and will attempt to execute it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta o conceito de funções variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable functions won&apos; t work with language constructs such as echo(), print(), unset(), isset(), empty(), include(), require() Variable functions won&apos;t work with language constructs such as echo(), print(), unset(), isset(), empty(), include(), require() and the like.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entre outras coisas, isto pode ser usado para implementar callbacks, tabelas de função e assim por diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 13-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções variáveis não funcionam com construtores de linguagem como echo(), unset(), isset(), empty(), include() ou print().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function foo() {echo &quot;In foo() br \n&quot;;} function bar($arg = &apos;&apos;) {echo &quot;In bar(); argument was &apos;$arg&apos;. br \n&quot;;} / / This is a wrapper function around echo function echoit($string) {echo $string;} $func = &apos;foo&apos;; $func(); / / This calls foo() $func = &apos;bar&apos;; $func(&apos;test&apos;); / / This calls bar() $func = &apos;echoit&apos;; $func(&apos;test&apos;); / / This calls echoit()?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 13-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 13-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de funções variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php class Foo {function Var() {$name = &apos;Bar&apos;; $this - $name(); / / This calls the Bar() method} function Bar() {echo &quot;This is Bar&quot;;}} $foo = new Foo(); $funcname = &quot;Var&quot;; $foo - $varname(); / / This calls $foo - Var()?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also call_user_func(), variable variables and function_exists().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis variáveis e function_exists().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classes and Objects</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classes e Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFAction</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfaction() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. swfaction() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. swfaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. swfaction() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. swfaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. swfaction() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4. swfaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swf_addbuttonrecord() function example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swf_addbuttonrecord() function example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFBitmap</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. swfbitmap() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. swfbitmap() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFbutton</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfbutton() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfbutton() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. swfbutton - addaction() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. swfbutton - addaction() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>swfbutton_keypress</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - addColor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - moveTo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - multColor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfdisplayitem - multcolor() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfdisplayitem - multcolor() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - remove</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - Rotate</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - rotateTo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfdisplayitem - rotateto() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfdisplayitem - rotateto() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - scaleTo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - setDepth</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - setName</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - setRatio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfdisplayitem - setname() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfdisplayitem - setname() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - skewXTo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - skewYTo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFFont</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFGradient</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfgradient() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfgradient() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFMorph</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfmorph() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfmorph() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFMovie</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFMovie - setbackground</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFMovie - setdimension</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfmovie - streammp3() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfmovie - streammp3() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfshape - addfill() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfshape - addfill() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFShape</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfshape() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfshape() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfshape - setline() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfshape - setline() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFShape - setRightFill</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFSprite</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swfsprite() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swfsprite() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>swf_startsymbol</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Define an object id as a symbol.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - addstring</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Miscellaneous functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções de Miscelânea</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setbounds</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setcolor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setHeight</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setindentation</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setLeftMargin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setLineSpacing</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setMargins</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setrightMargin</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFText</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. swftext() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. swftext() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_affected_rows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The number of affected rows by the last query.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna: o número de linhas afetadas pela última consulta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query on the server associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_affected_rows() retorna o número de linhas afetadas pelo último INSERT, UPDATE ou DELETE no servidor associado com o identificador de recurso especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn &apos;t specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o identificador de recurso não for especificado a última conexão aberta é utilizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This command is not effective for SELECT statements, only on statements which modify records.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este comando não tem efeito em consultas SELECT; apenas em consultas que modificam registros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To retrieve the number of rows returned from a SELECT, use sybase_num_rows().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para recuperar o número de linhas retornadas por um SELECT, utilize sybase_num_rows().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is only available using the CT library interface to Sybase, and not the DB library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta funcão está disponível apenas utilizando-se a biblioteca de interface CT para o Sybase e não disponível para a biblioteca DB.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sybase functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções Sybase</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_close() closes the link to a Sybase database that&apos;s associated with the specified link identifier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_close() fecha a conexão com um banco de dados Sybase, o qual está associado ao identificador de recurso especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the link identifier isn &apos;t specified, the last opened link is assumed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o identificador de recurso não for especificado, a última conexão aberta é utilizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this isn&apos; t usually necessary, as non-persistent open links are automatically closed at the end of the script&apos;s execution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que isto não é normalmente necessário, já que as conexões não-persistentes abertas não automaticamente são fechadas ao final da execução do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_close() will not close persistent links generated by sybase_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_close() não fechará conexões persistentes geradas pelo sybase_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also: sybase_connect(), sybase_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: sybase_connect(), sybase_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_connect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A positive Sybase link identifier on success, or FALSE on error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna: um identificador de recurso Sybase positivo em caso de sucesso ou um FALSE em caso de falha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sybase_connect() establishes a connection to a Sybase server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_connect() estabelece uma conexão com um servidor Sybase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The servername argument has to be a valid servername that is defined in the &apos;interfaces&apos; file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento servername tem que ser um nome de servidor que é definido no arquivo &apos;interfaces&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In case a second call is made to sybase_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés disto, o identificador de recurso do recurso já aberto será retornado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The link to the server will be closed as soon as the execution of the script ends, unless it&apos; s closed earlier by explicitly calling sybase_close().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O recurso com o servidor será fechado tão logo a execução do script termine, a não ser que ele seja fechado anteriormente ao se chamar explicitamente o sybase_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sybase_pconnect(), sybase_close().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também sybase_pconnect(), sybase_close().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_data_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_fetch_array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_fetch_field</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns an object containing field information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_fetch_object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_fetch_row</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_field_seek</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_pconnect</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_result</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sybase_select_db</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>symlink() creates a symbolic link from the existing target with the specified name link.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>symlink() cria um link simbólico do alvo existente com o nome especificado em link.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also link() to create hard links, and readlink() along with linkinfo().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também link() para criar hard links, e readlink() junto com linkinfo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. syslog() Priorities (in descending order)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. syslog() Priorities (in descending order)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the hyperbolic tangent of arg, defined as sinh( arg) / cosh(arg).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a tangente hiperbólica de arg, definida como sinh( arg) / cosh(arg).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also tan(), atanh(), sin() and cos().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também tan(), atanh(), sin() e cos().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>tan() returns the tangent of the arg parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tan() retorna a tangente do parâmetro arg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arg parameter is in radians.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O argumento arg deve estar em radianos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also atan(), sin(), cos() and deg2rad().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também atan(), sin(), cos() e deg2rad().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>tempnam</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates a file with a unique filename in the specified directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the directory does not exist, tempnam() may generate a file in the system&apos;s temporary directory, and return the name of that.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cria um nome de arquivo temporário único no diretório especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.0.6, the behaviour of the tempnam() function was system dependent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o nome gerado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows the TMP environment variable will override the dir parameter, on Linux the TMPDIR environment variable has precedence, while SVR4 will always use your dir On Windows the TMP environment variable will override the dir parameter, on Linux the TMPDIR environment variable has precedence, while SVR4 will always use your dir parameter if the directory it points to exists.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No Windows a váriavel de ambiente do sistema TMP irá sobreescrever o parâmetro dir; no Linux a váriavel de ambiente TMPDIR tem precedência, enquanto SVR4 irá sempre usar o parâmetro dir se o diretório para o qual ele aponta existe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consult your system documentation on the tempnam( 3) function if in doubt.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Consulte a documentação do seu sistema para a função tempnam( 3) na dúvida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the new temporary filename, or the FALSE string on failure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna o nome do novo arquivo temporário, ou a string FALSE string em caso de erro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. tempnam() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo de tempnam()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$tmpfname = tempnam (&quot;/ tmp&quot;, &quot;FOO&quot;); $handle = fopen($tmpfname, &quot;w&quot;); fwrite($handle, &quot;writing to tempfile&quot;); fclose($handle); / / do here something unlink($tmpfname);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$tmpfname = tempnam (&quot;/ tmp&quot;, &quot;FOO&quot;); $fp = fopen($tmpfname, &quot;w&quot;); fwrite($fp, &quot;writing to tempfile&quot;); fclose($fp); / / fazer alguma coisa unlink($tmpfname);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function &apos;s behavior changed in 4.0.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comportamento desta função mudou na versão 4.0.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The temporary file is also created to avoid a race condition where the file might appear in the filesystem between the time the string was generated and before the the script gets around to creating the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo temporário é também criado para evitar uma condição de corrida (race) onde o arquivo pode aparecer no filesystem entre o tempo que a string foi gerada e antes que o script tem tempo para criar o arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note, that you need to remove the file in case you need it no more, it is not done automatically.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que você precisa remover o arquivo caso não vá mais utilizá-lo, pois isso não é feito automaticamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also tmpfile() and unlink().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também tmpfile() e unlink().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns the current time measured in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna a hora atual medida no número de segundos desde a Era Unix (January 1 1970 00:00:00 GMT).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also date().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também date().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creates a temporary file with an unique name in write mode, returning a file handle similar to the one returned by fopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cria um arquivo temporário com um nome único em modo de gravação, retornando o handle do arquivo em modo similar ao retornado por fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file is automatically removed when closed (using fclose()), or when the script ends.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo é automáticamente apagado quando fechado (usando fclose()), ou quando o script acaba.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For details, consult your system documentation on the tmpfile( 3) function, as well as the stdio.h header file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para detalhes consulte a documentação do seu sistem na função tmpfile( 3), assim como o header stdio.h.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. tmpfile() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo de tmpfile()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$temp = tmpfile(); fwrite($temp, &quot;writing to tempfile&quot;); fclose($temp); / / this removes the file</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$temp = tmpfile(); fwrite($temp, &quot;escrevendo no arquivo temporario&quot;); fclose($temp); / / isto remove o arquivo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also tempnam().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também tempnam().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>token_get_all</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>token_name</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Attempts to set the access and modification time of the file named by filename to the value given by time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenta mudar o tempo de acesso e modificação do arquivo filename para o valor informado em time.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the option time is not given, uses the present time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a opção time não é informada, o hora atual será usado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is equivalent to what utime (sometimes referred to as utimes) does.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é o equivalente ao que comando (Unix) utime faz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the third option atime is present, the access time of the given filename is set to the value of atime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a terceira opção atime for passada, o tempo de acesso do arquivo informado será modificado para o valor de atime.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the access time is always modified, regardless of the number of parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que a data / hora do último acesso do arquivo sempre é alterado, independentemente do número de parâmetros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the file does not exist, it is created.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o arquivo não existe, ele é criado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. touch() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. exemplo da função touch()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>if (touch ($FileName)) {print &quot;$FileName modification time has been changed to todays date and time&quot;;} else {print &quot;Sorry Could Not change modification time of $FileName&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if (touch ($nomedoarquivo)) {print &quot;o tempo do $nomedoarquivo foi modificado para o dia e hora de atuais&quot;;} else {print &quot;Desculpe, não foi possivel modificar o tempo de $nomedoarquivo&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The optional charlist parameter was added in PHP 4.1.0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sorts an array such that array indices maintain their correlation with the array elements they are associated with.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função ordena um array de forma que a correlação entre chaves e valores é mantida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is used mainly when sorting associative arrays where the actual element order is significant.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é usada principalmente para classificar arrays associativos onde a ordem dos elementos é um fator importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The comparison function is user-defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função de comparacão é definida pelo usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see usort() and uksort() for examples of user-defined comparison functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por favor, veja usort() e uksort() para exemplos de funções de comparação definidas pelo usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also usort(), uksort(), sort(), asort(), arsort(), ksort(), and rsort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também usort(), uksort(), sort(), asort(), arsort(), ksort() e rsort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ucfirst() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ucfirst() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. ucwords() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. ucwords() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>udm_api_version</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>udm_api_version() returns mnoGoSearch API version number.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>udm_check_charset</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>udm_check_stored</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.2.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>udm_close_stored</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>udm_free_ispell_data</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>udm_free_ispell_data() always returns TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>udm_load_ispell_data</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>udm_load_ispell_data() loads ispell data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will sort the keys of an array using a user-supplied comparison function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função irá ordenar as chaves de um array usando uma função de comparação definida pelo usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o array precisa ser classificado utilizando um critério não trivial, você deve usar essa função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. uksort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de uksort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1;} $a = array (4 = &quot;four&quot;, 3 = &quot;three&quot;, 20 = &quot;twenty&quot;, 10 = &quot;ten&quot;); uksort ($a, &quot;cmp&quot;); while (list ($key, $value) = each ($a)) {echo &quot;$key: $value\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>1;} $a = array (4 = &quot;quatro&quot;, 3 = &quot;tres&quot;, 20 = &quot;vinte&quot;, 10 = &quot;dez&quot;); uksort ($a, &quot;cmp&quot;); while (list ($chave, $valor) = each ($a)) {echo &quot;$chave: $valor\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>20: twenty 10: ten 4: four 3: three</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>20: vinte 10: dez 4: quatro 3: tres</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also usort(), uasort(), sort(), asort(), arsort(), ksort(), natsort(), and rsort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também usort(), uasort(), sort(), asort(), arsort(), ksort(), natsort() e rsort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>umask() sets PHP&apos;s umask to mask 0777 and returns the old umask.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>umask() modifica o umask do PHP para o mask 0777 e retorna o umask antigo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When PHP is being used as a server module, the umask is restored when each request is finished.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o PHP está sendo utilizado como um módulo do servidor, o umask é restaurado ao final de cada pedido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>umask() without arguments simply returns the current umask.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>umask() sem argumentos simplesmente retorna o umask atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>uniqid() returns a prefixed unique identifier based on the current time in microseconds.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>uniqid() retorna um identificador unico prefixado baseado no tempo atual em milionésimos de segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The prefix can be useful for instance if you generate identifiers simultaneously on several hosts that might happen to generate the identifier at the same microsecond.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O Prefixo pode ser usado se você gera identificadores em vários servidores simultaneamente pode acontecer de gerar o identificador no mesmo milionésimo de segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prefix can be up to 114 characters long.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Prefix pode ter até 114 caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the optional lcg parameter is TRUE, uniqid() will add additional &quot;combined LCG &quot;entropy at the end of the return value, which should make the results more unique.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro lcg, que é opcional, for TRUE, uniqid() irá adicionar a entropia &quot;LCG combinada &quot;ao final do valor retornado, o que deve fazer o resultado mais unico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With an empty prefix, the returned string will be 13 characters long.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com o parâmetro prefix Com o parâmetro prefix vazio, a string retornada terá 13 caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If lcg is TRUE, it will be 23 characters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o parâmetro lcg for TRUE, terá 23 caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The lcg parameter is only available in PHP 4 and PHP 3.0.13 and later.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O parâmetro lcg somente esta disponivel no PHP 4 e PHP 3.0.13 e posterior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need a unique identifier or token and you intend to give out that token to the user via the network (i.e. session cookies), it is recommended that you use something along the lines of</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você precisa um identificador unico e pretende dar o seu identificador via rede( ex. cookies de seção), é recomendado que você use algo como</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$token = md5( uniqid(&quot;&quot;)); / / no prefix $better_token = md5(uniqid(rand(),1)); / / better, difficult to guess</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$token = md5( uniqid(&quot;&quot;)); / / sem prefixo $better_token = md5(uniqid(rand(),1)); / / melhor, dificil de adivinhar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will create a 32 character identifier (a 128 bit hex number) that is extremely difficult to predict.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto irá criar um identificador de 32 caracteres( a 128 bit hex number) que é extremamente dificil de prever.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>unlink</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Deletes filename.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similar to the Unix C unlink() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Similar a função C no Unix unlink().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also rmdir() for removing directories.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também rmdir() para remover diretórios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. unpack() format string</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. unpack() format string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. unserialize_callback_func example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. unserialize_callback_func example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. unserialize() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. unserialize() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>unset</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unset() destroys the specified variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. unset() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. unset() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>urldecode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Decodes any% ## encoding in the given string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The decoded string is returned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Decodifica qualquer% ## codificado na string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. urldecode() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string decodificada é o valor de retorno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = explode( &apos;&apos;, $QUERY_STRING); $i = 0; while ($i count($a)) {$b = split(&apos;=&apos;, $a[$i]); echo&apos;Value for parameter &apos;, htmlspecialchars(urldecode($b[0])),&apos; is&apos;, htmlspecialchars(urldecode($b[1])), &quot;br / \n&quot;; $i++;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = split (&apos;&apos;, $querystring); $i = 0; while ($i count ($a)) {$b = split (&apos;=&apos;, $a [$i]); echo &apos;Value for parameter &apos;, htmlspecialchars (urldecode ($b [0])),&apos; is &apos;, htmlspecialchars (urldecode ($b [1])), &quot;BR&quot;; $i++;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also urlencode(), rawurlencode(), rawurldecode().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também urlencode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>urlencode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This differs from the RFC1738 encoding (see rawurlencode()) in that for historical reasons, spaces are encoded as plus (+) signs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. urlencode() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna uma string onde todos caracteres não-alfanuméricos exceto -_. é substituido por um sinal de porcento (%) seguidos por dois digítos hexadecimais e espaços codificados como um sinal de &apos;mais &apos;(+).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Things like amp, copy and pound are parsed by the browser and the actual entity is used instead of the desired variable name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É codificando o mesmo caminho que um dado enviados por um formulário WWW é codificado, que é a mesma coisa como em um tipo de mídia application / x-www-form-urlencoded.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The reference is here: http: / /www.w3.org / TR / html4 / appendix / notes.html#h-B.2.2 The reference is here: http: / /www.w3.org / TR / html4 / appendix / notes.html#h-B.2.2 PHP supports changing the argument separator to the W3C-suggested semi-colon through the arg_separator .ini directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto difere da codificação RFC1738 (veja rawurlencode()) por rasões históricas, espaçoes são codificados como um sinal de &apos;mais &apos;(+).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A more portable way around this is to use amp; instead of as the separator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função é conveniente quando codificado uma string para ser usada em uma parte de consulta em uma URL, como um conveniente meio de passar variáveis para uma próxima página:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Leave it as, but simply encode your URLs using htmlentities() (urlencode($data)).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. urlencode() exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>echo &apos;a href=&quot;mycgi?foo=&apos;, htmlentities(urlencode($userinput)),&apos; &quot;&apos;;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo &apos;A HREF=&quot;mycgi?foo=&apos;, urlencode ($userinput),&apos; &quot;&apos;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also urldecode(), htmlentities(), rawurldecode(), rawurlencode().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também urldecode().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>user_error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an alias for the function trigger_error().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A microsecond is one millionth of a second.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função usleep() atrasa a execução do programa para o número dado no parâmetro micro_seconds em milionésimos de segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also sleep() and set_time_limit().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também sleep() e set_time_limit().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function does not work on Windows systems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não funciona em sistemas Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function will sort an array by its values using a user-supplied comparison function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função irá ordenar um array pelos valores usando uma função de classificação definida pelo usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o array precisar ser ordenado utilizando um critério não trivial, você deve usar essa função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função de comparação deve retornar um inteiro menor, igual ou maior que zero se o primeiro argumento for considerado respectivamente menor, igual, ou maior que o segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If two members compare as equal, their order in the sorted array is undefined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se dois elementos são considerados iguais, a ordem deles fica indefinida no array resultante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Up to PHP 4.0.6 the user defined functions would keep the original order for those elements, but with the new sort algorithm intruduced with 4.1.0 this is no longer the case as there is no solution to do so in an efficient way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Até o PHP 4.0.6 as funções definidas pelo usuário manteriam a ordem original desses elementos, mas com o novo algoritmo de ordenação introduzido no 4.1.0 esse não é o caso, pois não existe solução para fazer isso de modo eficiente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. usort() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de usort()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1;} $a = array (3, 2, 5, 6, 1); usort ($a, &quot;cmp&quot;); while (list ($key, $value) = each ($a)) {echo &quot;$key: $value\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>1;} $a = array (3, 2, 5, 6, 1); usort ($a, &quot;cmp&quot;); while (list ($chave, $valor) = each ($a)) {echo &quot;$chave: $valor\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Obviously in this trivial case the rsort() function would be more appropriate.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Obviamente que nesse caso trivial a função rsort() seria mais apropriada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. usort() example using multi-dimensional array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de usort() usando um array multi-dimensional</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function cmp ($a, $b) {return strcmp($a[&quot;fruit&quot;], $b[&quot;fruit&quot;]);} $fruits[0][&quot;fruit&quot;] = &quot;lemons&quot;; $fruits[1][&quot;fruit&quot;] = &quot;apples&quot;; $fruits[2][&quot;fruit&quot;] = &quot;grapes&quot;; usort($fruits, &quot;cmp&quot;); while (list ($key, $value) = each ($fruits)) {echo &quot;\$fruits[$key]: &quot;. $value[&quot;fruit&quot;]. &quot;\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function cmp ($a, $b) {return strcmp($a[&quot;fruta&quot;], $b[&quot;fruta&quot;]);} $frutas[0][&quot;fruta&quot;] = &quot;limoes&quot;; $frutas[1][&quot;fruta&quot;] = &quot;abacaxis&quot;; $frutas[2][&quot;fruta&quot;] = &quot;goiabas&quot;; usort($frutas, &quot;cmp&quot;); while (list ($chave, $valor) = each ($frutas)) {echo &quot;\$frutas[$chave]: &quot;. $valor[&quot;fruta&quot;]. &quot;\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When sorting a multi-dimensional array, $a and $b contain references to the first index of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na ordenação de um array multi-dimensional, $a e $b contêm referências para o primeiro índice do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$fruits[ 0]: apples $fruits[1]: grapes $fruits[2]: lemons</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. usort() example using a member function of an object</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>class TestObj {var $name; function TestObj($name) {$this - name = $name;} / * This is the static comparing function: * / function cmp_obj($a, $b) {$al = strtolower($a - name); $bl = strtolower($b - name); if ($al == $bl) return 0; return ($al $bl)? +1: -1;}} $a[] = new TestObj(&quot;c&quot;); $a[] = new TestObj(&quot;b&quot;); $a[] = new TestObj(&quot;d&quot;); uasort($a, array (&quot;TestObj&quot;, &quot;cmp_obj&quot;)); foreach ($a as $item) {print $item - name .&quot;\n&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class TestObj {var $name; function TestObj($name) {$this - name = $name;} / * Essa é a função estática de comparação * / function cmp_obj($a, $b) {$al = strtolower($a - name); $bl = strtolower($b - name); if ($al == $bl) return 0; return ($al $bl)? +1: -1;}} $a[] = new TestObj(&quot;c&quot;); $a[] = new TestObj(&quot;b&quot;); $a[] = new TestObj(&quot;d&quot;); uasort($a, array (&quot;TestObj&quot;, &quot;cmp_obj&quot;)); foreach ($a as $item) {print $item - name .&quot;\n&quot;;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also uasort(), uksort(), sort(), asort(), arsort(), ksort(), natsort(), and rsort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também uasort(), uksort(), sort(), asort(), arsort(), ksort(), natsort(), e rsort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. var_dump() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. var_dump() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. version_compare() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. version_compare() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>virtual() is an Apache-specific function which is equivalent to !--#include virtual...- - in mod_include.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>virtual() é uma função específica do Apache que é equivalente a !--#include virtual...- - no mod_include.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It performs an Apache sub-request.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela realiza uma sub-requisição do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is useful for including CGI scripts or .shtml files, or anything else that you would parse through Apache.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela é útil para incluir scripts de CGI ou arquivos .shtml, ou qualquer outra coisa que você possa analisar através do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that for a CGI script, the script must generate valid CGI headers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que para um script CGI, o script precisa gerar um cabeçalho CGI válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At the minimum that means it must generate a Content-type header.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que, no mínimo, ele precisa gerar um cabeçalho Content-type.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For PHP files, you need to use include() or require(); virtual() cannot be used to include a document which is itself a PHP file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para arquivos PHP, você precisa usar include() ou require(). virtual() não pode ser usado para incluir um documento que é um arquivo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To run the sub-request, all buffers are terminated and flushed to the browser, pending headers are sent too.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Headers pendentes são enviados também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_add_alias_domain_ex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_add_alias_domain</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_add_domain_ex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_add_domain</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_add_user</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_alias_add</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_alias_del_domain</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_alias_del</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_alias_get_all</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.1.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_alias_get</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_auth_user</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_del_domain_ex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_del_domain</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_del_user</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_passwd</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>vpopmail_set_user_quota</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>w32api_deftype</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>w32api_init_dtype</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>w32api_invoke_function</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>w32api_register_function</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.2.0 - 4.2.3 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>w32api_set_call_method</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. wddx_serialize_vars() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. wddx_serialize_vars() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. wordwrap() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. wordwrap() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. wordwrap() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. wordwrap() example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_error_string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An error code from xml_get_error_code().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_get_current_byte_index</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get byte index from.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_get_current_column_number</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get column number from.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_get_current_line_number</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get line number from.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_get_error_code</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get error code from.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_parse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to use.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. moldb.xml - small database of molecular information</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. moldb.xml - small database of molecular information</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. parsemoldb.php - parses moldb.xml into and array of molecular objects</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. parsemoldb.php - parses moldb.xml into and array of molecular objects</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_parser_create</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Which character encoding the parser should use.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_parser_create_ns</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_parser_free</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to free.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_parser_get_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XML parser to get an option from.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 3 = 3.0.6, PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_parser_set_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_decode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_decode_request</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_encode</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_encode_request</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_get_type</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_parse_method_descriptions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_server_add_introspection_data</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_server_call_method</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_server_create</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_server_destroy</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_server_register_introspection_callback</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_server_register_method</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xmlrpc_set_type</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of a function name, an array containing an object reference and a method name can also be supplied.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés de um nome de função, um array contendo uma referência de objeto e ao nome de método também pode ser fornecidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_set_end_namespace_decl_handler</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_set_object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function allows to use parser inside object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xml_set_start_namespace_decl_handler</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xpath_eval_expression</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xpath_eval</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xpath_new_context</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xptr_new_context</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xslt_set_encoding</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set the output encoding for the XSLT transformations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xslt_set_log</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A reference to the XSLT parser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.3 - 4.0.6 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xslt_set_sax_handler</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set SAX handlers on the resource handle given by xh.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xslt_set_sax_handlers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(4.0.5 - 4.0.6 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xslt_set_scheme_handler</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Set Scheme handlers on the resource handle given by xh.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.6)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>xslt_set_scheme_handlers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>yaz_ccl_parse</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function invokes a CCL parser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>yaz_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes connection given by id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>yaz_element</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function sets the element set name for retrieval.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>yaz_errno</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns error for target (last request).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.1)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>yaz_error</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns error text message for target (last request).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 5 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>yaz_get_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns value of option with the name specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.0.5)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>yaz_scan</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function prepares for a Z39.50 Scan Request.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Like yaz_connect() this function is non-blocking and only prepares for a search to be executed later when yaz_wait() is called.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The RPN query</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 5 CVS only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>yaz_set_option</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PYP / YAZ Connection Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>zend_logo_guid</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. zend_version() Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. zend_version() Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>zip_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes a zip file archive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>zip_entry_close</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Closes a directory entry specified by zip_entry.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>zip_entry_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a directory entry in a zip file for reading.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>zip_open</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Opens a new zip archive for reading.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(PHP 4 = 4.1.0)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>zip_read</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reads the next entry in a zip file archive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Zlib Compression Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções de Compressão Zlib</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>I.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Começando</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Security</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Preface</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Introduction</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has come a long way in the last few years.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A História do PHP e projetos relacionados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Growing to be one of the most prominent languages powering the Web was not an easy task.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Criada para ser uma das mais poderosas e proeminentes linguagens da Web não foi uma tarefa fácil.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those of you interested in briefly seeing how PHP grew out to what it is today, read on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqueles que se interessaram momentaneamente em ver como o PHP cresceu e se tornou o que é hoje, continue lendo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP succeeds an older product, named PHP / FI.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP / FI</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP / FI was created by Rasmus Lerdorf in 1995, initially as a simple set of Perl scripts for tracking accesses to his online resume.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP / FI foi criado por Rasmus Lerdorf em 1995, inicialmente como simples scripts Perl como estatísticas de acesso para seu currículo online.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>He named this set of scripts&apos; Personal Home Page Tools&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele nomeou esta sério de script para &apos;Personal Home Page Tools&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As more functionality was required, Rasmus wrote a much larger C implementation, which was able to communicate with databases, and enabled users to develop simple dynamic Web applications.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como mais funcionalidades foram requeridas, Rasmus escreveu uma implementação C muito maior, que era capaz de comunicar-se com base de dados, e possibilitava à usuários desenvolver simples aplicativos dinâmicos para Web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Rasmus chose to release the source code for PHP / FI for everybody to see, so that anybody can use it, as well as fix bugs in it and improve the code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Rasmus decidiu disponibilizar o código fonte do PHP / FI para que todos pudessem ver, e também usá-lo, bem como fixar bugs e melhorar o código.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP / FI, which stood for Personal Home Page / Forms Interpreter, included some of the basic functionality of PHP as we know it today.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele usava variáveis no estilo Perl, interpretação automática de variáveis vindas de formulário e sintaxe embutida no HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It had Perl-like variables, automatic interpretation of form variables and HTML embedded syntax.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sua própria sintaxe era similar a do Perl, porém muito mais limitada, simples, e um pouco inconsistente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax itself was similar to that of Perl, albeit much more limited, simple, and somewhat inconsistent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em 1997, PHP / FI 2.0, a segunda versão da implementação C, obteve milhares de usuários ao redor do mundo (estimado), com aproximadamente 50,000 domínios reportando que tinha PHP / FI 2.0 instalado, agarinhando 1% dos domínios da Internet.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By 1997, PHP / FI 2.0, the second write-up of the C implementation, had a cult of several thousand users around the world (estimated), with approximately 50,000 domains reporting as having it installed, accounting for about 1% of the domains on the Internet.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Enquanto isto havia milhares de pessoas contribuindo com pequenos códigos para o projeto, e ainda assim By 1997, PHP / FI 2.0, the second write-up of the C implementation, had a cult of several thousand users around the world (estimated), with approximately 50,000 domains reporting as having it installed, accounting for about 1% of the domains on the Internet.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP / FI 2.0 was officially released only in November 1997, after spending most of its life in beta releases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP / FI 2.0 foi oficialmente lançado somente em Novembro de 1997, após perder a maior parte de sua vida em versões betas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was shortly afterwards succeeded by the first alphas of PHP 3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 3</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3.0 was the first version that closely resembles PHP as we know it today.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP 3.0 foi a primeira versão que se assemelha ao PHP que nós conhecemos hoje.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was created by Andi Gutmans and Zeev Suraski in 1997 as a complete rewrite, after they found PHP / FI 2.0 severely underpowered for developing their own eCommerce application.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela foi criada por Andi Gutmans e Zeev Suraski em 1997 e foi totalmente reescrito, após eles descobrirem que o PHP / FI 2.0 poderia ajudá-los a desenvolver suas próprias aplicações de eCommerce.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In an effort to cooperate and start building upon PHP / FI &apos;s existing user-base, Andi, Rasmus and Zeev decided to cooperate and announce PHP 3.0 as the official successor of PHP / FI 2.0, and development of PHP / FI 2.0 was mostly halted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No esforço cooperativo e iniciativa de começar o PHP / FI à partir da base-usuário existente, Andi, Rasmus e Zeev decidiram cooperar e anunciar o PHP 3.0 como uma versão oficial de seu sucessor o PHP / FI 2.0, e o desenvolvimento do PHP / FI 2.0 foram descontinuados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One of the biggest strengths of PHP 3.0 was its strong extensibility features.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma das maiores características do PHP 3.0 era sua forte capacidade de extensibilidade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to providing end users with a solid infrastructure for lots of different databases, protocols and APIs, PHP 3.0 &apos;s extensibility features attracted dozens of developers to join in and submit new extension modules.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além de oferecer aos usuários finais uma infraestrutura sólida para diversos bancos de dados, protocolos e APIs, o extensibilidade do PHP 3.0 atraí dezenas de desenvolvedores para se juntar e submeter novos módulos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arguably, this was the key to PHP 3.0 &apos;s tremendous success.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é a chave do tremendo sucesso do PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other key features introduced in PHP 3.0 were the object oriented syntax support and the much more powerful and consistent language syntax.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outras características chaves introduzidas no PHP 3.0 foram o suporte à sintaxe para orientação à objetos e uma sintaxe muito mais poderosa e consistente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The whole new language was released under a new name, that removed the implication of limited personal use that the PHP / FI 2.0 name held.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A nova versão da linguagem foi realizada sob um novo nome, que removeu a impressão do limitado uso pessoal que o PHP / FI 2.0 prendeu.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was named plain &apos;PHP&apos;, with the meaning being a recursive acronym - PHP:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela foi nomeada simplesmente &apos;PHP&apos;, com o significado que é um acrônimo - PHP:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By the end of 1998, PHP grew to an install base of tens of thousands of users (estimated) and hundreds of thousands of Web sites reporting it installed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No final de 1998, o PHP obteve uma base the dezenas de milhares de usuários (estimativa) e centenas de milhares de Web sites relatando que o tinham instalado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At its peak, PHP 3.0 was installed on approximately 10% of the Web servers on the Internet.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em seu pico, o PHP 3.0 foi instalado em aproximadamente 10% dos servidores Web da Internet.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3.0 was officially released in June 1998, after having spent about 9 months in public testing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP 3.0 foi oficialmente lançado em Junho de 1998, depois de ter passado aproximadamente 9 meses em testes públicos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By the winter of 1998, shortly after PHP 3.0 was officially released, Andi Gutmans and Zeev Suraski had begun working on a rewrite of PHP &apos;s core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No inverno de 1998, rapidamente após o PHP 3.0 ser oficialmente lançado, Andi Gutmans e Zeev Suraski começaram a reescrever o núcleo do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The design goals were to improve performance of complex applications, and improve the modularity of PHP &apos;s code base.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os objetivos do projeto eram melhorar a performance de aplicações complexas, e melhorar a modularidade do código base do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Such applications were made possible by PHP 3.0 &apos;s new features and support for a wide variety of third party databases and APIs, but PHP 3.0 was not designed to handle such complex applications efficiently.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tais aplicações foram possíveis por causa das novas características do PHP 3.0 e o suporte a uma variadade de banco de dados de terceiros e APIs, mas o PHP 3.0 não foi projeto para trabalhar com aplicações muito complexas eficientemente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The new engine, dubbed &apos;Zend Engine&apos; (comprised of their first names, Zeev and Andi), met these design goals successfully, and was first introduced in mid 1999.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A nova engine, dubbed &apos;Zend Engine&apos; (conhecidos pelos seus primeiros nomes, Zeev e Andi), fazendo desse objetivo um sucesso, e foi introduzida em meados de 1999.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4.0, based on this engine, and coupled with a wide range of additional new features, was officially released in May 2000, almost two years after its predecessor, PHP 3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 4.0, baseado nesta engine, e acompanhado com uma série de novas características, foi oficialmente lançada em Maio de 2000, quase dois anos após o seu predecessor, o PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to the highly improved performance of this version, PHP 4.0 included other key features such as support for many more Web servers, HTTP sessions, output buffering, more secure ways of handling user input and several new language constructs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além da altíssimo melhoramento da performance desta versão, o PHP 4.0 incluiu outras características chave como o suporte para muitos servidores WEb, sessões HTTP, buffer de saída, maneiras mais seguras de manipular input de usuários e muitas construções novas na linguagem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 is currently the latest released version of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 4 é a última versão lanaçada do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Work has already begun on modifying and improving the Zend Engine to integrate the features which were designed for PHP 5.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O trabalho já começou na modificação e melhoramento da Zend Engine para integrar novas características que foram designadas para o PHP 5.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Today, PHP is being used by hundreds of thousands of developers (estimated), and several million sites report as having it installed, which accounts for over 20% of the domains on the Internet.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hoje, o PHP está começando a ser usado por centenas de milhares de desenvolvedores (estimativa), e muitos milhões de sites reportam que tem o PHP instalado, que explica os 20% de domínios da Internet.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP &apos;s development team includes dozens of developers, as well as dozens others working on PHP-related projects such as PEAR and the documentation project.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 5</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The future of PHP is mainly driven by it &apos;s core, the Zend Engine.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O futuro do PHP é dirigido principalmente pelo seu núcleo, a Zend Engine.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 5 will include the new Zend Engine 2.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 5 irá incluir a nova Zend Engine 2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get more information on this engine, see it &apos;s webpage.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para obter mais informações sobre esta engine, veja esta página.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendixes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndices</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>History of PHP related projects</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A História dos projetos relacionados ao PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix A.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice A.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>History of PHP and related projects</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Livros sobre PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As PHP grew, it began to be recognized as a world-wide popular development platform.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP cresceu, ele começou a ser reconhecido mundialmente como a plataforma mais popular.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One of the most interesting ways of seeing this trend was by observing the books about PHP that came out throughout the years.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma das maneiras mais interessantes de ver esta tendência é observar os livros sobre PHP que surgirão ao longo dos anos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To the best of our knowledge, the first book dedicated to PHP was&apos; PHP - tvorba interaktivních internetových aplikací &apos;- a Czech book published in April 1999, authored by Jirka Kosek.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Até onde nós sabemos, o primeiro livro dedicado ao PHP foi &apos;PHP - tvorba interaktivních internetových aplikací&apos; - um livro Czech publicado em Abril de 1999, pela autora Jirka Kosek.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next month followed a German book authored by Egon Schmid, Christian Cartus and Richard Blume.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No mês seguinte veio o livro Alemão escrito por Egon Schmid, Christian Cartus e Richard Blume.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first book in English about PHP was published shortly afterwards, and was&apos; Core PHP Programming &apos;by Leon Atkinson.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro livro em Inglês sobre PHP foi publicado logo depois, e foi chamado &apos;Core PHP Programming&apos; por Leon Atkinson.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both of these books covered PHP 3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todos estes livros falavam sobre o PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While these books were the first of their kind - they were followed by a large number of books from a host of authors and publishers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando estes livros eram os primeiros deste tipo - eles inspiraram um grande número de livros de outros autores e editoras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are over 40 books in English, 50 books in German, and over 20 books in French!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há aproximadamente 40 livros em Inglês, 50 livros em Alemão, e uns 20 livros em Francês!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition, you can find books about PHP in many other languages, including Spanish, Korean, Japanese and Hebrew.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além disso, você pdoe encontrar livros sobre PHP em muitas outras línguas, incluindo Espanhol, Koreâno, Japonês e Hebrew.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Clearly, this large number of books, written by different authors, published by many publishers, and their availability in so many languages - are a strong testimony for PHP &apos;s world-wide success.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Obviamente, este grande número de livros, escritos por diferentes autores, publicados por muitas editoras, e disponíveis em muitas línguas - é uma prova do sucesso mundial do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Publications about PHP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Publicações sobre PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Publicações sobre PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To the best of our knowledge, the first article about PHP in a hard-copy magazine was published in the Czech mutation of Computerworld in the spring of 1998, and covered PHP 3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Até onde nós sabemos, o primeiro artigo sobre PHP foi publicado em uma revista parecida com a Computerworld na Czech em meados de 1998, e cobria o PHP 3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As with books, this was the first in a series of many articles published about PHP in various prominent magazines.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como os livros, este foi um de uma sério de muitos artigos publicados sobre PHP em várias revistas proeminentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Articles about PHP appeared in Dr.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Artigos sobre PHP apareceram no Dr.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Dobbs, Linux Enterprise, Linux Magazine and many more.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dobbs, Empresas de Linux, Revistas de Linux e em muitos outros lugares.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Articles about migrating ASP-based applications to PHP under Windows even appear on Microsoft &apos;s very own MSDN!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Artigos sobre migração de aplicações baseadas em ASP para PHP rodando Windows foram publicadas mesmo na Microsoft e até mesmo na MSDN!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Books about PHP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Livros sobre PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PEAR, the PHP Extension and Application Repository (originally, PHP Extension and Add-on Repository) is PHP&apos;s version of foundation classes, and may grow in the future to be one of the key ways to distribute both PHP and C-based PHP extensions among developers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PEAR, o repositório da Extensão PHP e da Aplicação (originalmente, Extensão PHP e Repositório Add-on) são as versões das classes da fundação do PHP, e talvez cresçam no futuro para ser um dos caminhos chaves para distribuir o PHP em ambas extensões C e PHP entre os colaboradores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PEAR was born in discussions held in the PHP Developers&apos; Meeting (PDM) held in January 2000 in Tel Aviv.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PEAR nasceu em discussões realizadas nas PHP Developers&apos; Meeting-PMD (Reuniões dos Desenvolvedores do PHP-RDP) realizada em Janeiro de 2000 em Tel Aviv.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It was created by Stig S.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Foi criada por Sitg S.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bakken, and is dedicated to his first-born daughter, Malin Bakken.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Bakken, e é dedicada à sua primeira filha, Malin Bakken.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since early 2000, PEAR has grown to be a big, significant project with a large number of developers working on implementing common, reusable functionality for the benefit of the entire PHP community.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o começo de 2000, o PEAR cresceu para ser um grande, e significativo projeto com um largo número de desenvolvedores trabalhando em executar tarefas comuns, funcionalidades reusáveis para o benefício de toda a comunidade PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PEAR today includes a wide variety of infrastructure foundation classes for database access, content caching, mathematical calculations, eCommerce and much more.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A Iniciativa da Garantia de Qualidade do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP Quality Assurance Initiative was set up in the summer of 2000 in response to criticism that PHP releases were not being tested well enough for production environments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A Iniciativa da Garantia de Qualidade do PHP foi criada no verão de 2000 em resposta às críticas sobre as versões do PHP não terem sido testadas o bastante para ambientes de produção.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The team now consists of a core group of developers with a good understanding of the PHP code base.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O time agora consiste em um grupo de desenvolvedores com um bom entendimento sobre o código base do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These developers spend a lot of their time localizing and fixing bugs within PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estes desenvolvedores gastam muito boa parte do tempo deles localizando e consertando bugs dentro do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition there are many other team members who test and provide feedback on these fixes using a wide variety of platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP-GTK</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP-GTK is the PHP solution for writing client side GUI applications.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP-GTK é a solução PHP para aplicações GUI client side (lado-cliente).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Andrei Zmievski remembers the planing and creation process of PHP-GTK:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Andrei Zmievski recorda o processo de planejamento e criação do PHP-GTK:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GUI programming has always been of my interests, and I found that Gtk + is a very nice toolkit, except that programming with it in C is somewhat tedious.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A programação GUI sempre foi de meu interesse, e eu achei que o Gtk + é uma ferramenta muito boa, exceto que a programação dela usa o C que algumas vezes é um tédio.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After witnessing PyGtk and GTK-Perl implementations, I decided to see if PHP could be made to interface with Gtk+, even minimally.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Após testemunhar as implementações do PyGtk e GTK-Perl, eu decidi ver se o PHP poderia ter uma interface Gtk+.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting in August of 2000, I began to have a bit more free time so that is when I started experimenting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Começando em Agosto de 2000, eu comecei a ter um pouco mais de tempo livre que foi quando eu comecei a experimentar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>My main guideline was the PyGtk implementation as it was fairly feature complete and had a nice object-oriented interface.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Minha linha guia principal foi a implementação da interface PyGtk.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>James Henstridge, the author of PyGtk, provided very helpful advice during those initial stages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>James Henstridge, o autor do PyGtk, me ajudou muito durante os estágios iniciais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hand-writing the interfaces to all the Gtk + functions was out of the question, so I seized upon the idea of code-generator, similar to how PyGtk did it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Escrever as interfaces na mão para todas as funções do Gtk + estava fora de questão, então eu tive uma idéia de criar um gerador de código, similar à como o PyGtk foi feito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What cannot be generated automatically can be written by hand in .overrides file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O gerador de código é um programa PHP que lê uma série de arquivos .def contendo as classes Gtk+, constantes, e as informações dos métodos e geradores de código C que irão trabalhar com o PHP.O que não pode ser gerado automaticamente pode ser escrito em arquivos .overrides.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Working on the code generator and the infrastructure took some time, because I could spend little time on PHP-GTK during the fall of 2000.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Trabalhando no gerador de código e na infraestrutura levou algum tempo, porque eu tinha pouco tempo para trabalhar no PHP-GTK durante o fim de 2000.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After I showed PHP-GTK to Frank Kromann, he got interested and started helping me out with code generator work and Win32 implementation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Depois de eu mostrar o PHP-GTK ao Frank Kromann, ele se interessou e começou a me ajudar com o gerador de código e a implementação para Win32.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When we wrote the first Hello World program and fired it up, it was extremely exciting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando nós escrevemos o primeiro programa &apos;Hello World&apos; e o rodamos, foi extremamente exitante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The story promptly hit SlashDot.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Levou mais alguns meses para deixar o projeto em uma condição apresentável e lançar a versão inicial realizada em 1 de Março de 2001. que logo foi apresentada no SlashDot.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sensing that PHP-GTK might be extensive, I set up separate mailing lists and CVS repositories for it, as well as the gtk.php.net website with the help of Colin Viebrock.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Detetando que o PHP-GTK pode ser extensivo, eu decidi separar as listas de discussão e os repositórios CVS para isto, bem como o website gtk.php.net com ajuda de Colin Viebrock.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The documentation would also need to be done and James Moore came in to help with that.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A documentação também era necessária ser feita e James Moore veio me ajudar com isto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since its release PHP-GTK has been gaining popularity.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde sua realização o PHP-GTK vem ganhando popularidade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We have our own documentation team, the manual keeps improving, people start writing extensions for PHP-GTK, and more and more exciting applications with it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Agora, nós temos nosso próprio time de documentação, o manual continua melhorando, as pessoas começam a escrever extensões para o PHP-GTK, e mais e mais aplicativos excitantes com ele.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>27-01-2003</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Stig Sæther Bakken</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Copyright © 1997, 1998, 1999, 2000, 2001, 2002, 2003 the PHP Documentation Group</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Duplicating Variable Contents:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Identificadores faltando (compilação do manual)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Preface</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Prefácio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Installation</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You are highly encouraged to take a look at the Apache Documentation to get a basic understanding of the Apache 2.0 Server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP and Apache 2.0 compatibility notes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Download the most recent version of Apache 2.0 and a fitting PHP version from the above mentioned places.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP and Apache 2 on Linux</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The recommended setup is to build Apache with the standard prefork MPM-Module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP and Apache 2.0 on Windows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Servers-Apache</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Servidores-Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This section contains notes and hints specific to Apache installs of PHP, both for Unix and Windows This section contains notes and hints specific to Apache installs of PHP, both for Unix and Windows versions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta seção contém notas e dicas específicas para instalações do PHP em Apache, tanto para versões Unix quanto para Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We also have instructions and notes for Apache 2 on a separate page.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Detalhes ao instalar o PHP com Apache no Unix</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can select arguments to add to the configure on line 10 below from the Complete list of configure options.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode selecionar argumentos para adicionar ao configure na linha 10 abaixo através da Lista completa de opções do configure.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The version numbers have been omitted here, to ensure the instructions are not incorrect.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os números de versões foram omitidos aqui, para assegurar que as instruções não estejam incorretas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need to replace the &apos;xxx&apos; here with the correct values from your files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deverá trocar o &apos;xxx&apos; aqui com os valores corretos dos seus arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Installation Instructions (Apache Shared Module Version) for PHP 4</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instruções de Instalação (Apache Versão de Módulo Compartilhado) para PHP 4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1. gunzip apache_xxx.tar.gz 2. tar -xvf apache_xxx.tar 3. gunzip php-xxx.tar.gz 4. tar -xvf php-xxx.tar 5. cd apache_xxx 6.. / configure --prefix= / www --enable-module=so 7. make 8. make install 9. cd.. / php-xxx 10.. / configure --with-mysql --with-apxs= / www / bin / apxs 11. make 12. make install If you decide to change your configure options after installation you only need to repeat the last three steps.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>1. gunzip apache_xxx.tar.gz 2. tar -xvf apache_xxx.tar 3. gunzip php-xxx.tar.gz 4. tar -xvf php-xxx.tar 5. cd apache_xxx 6.. / configure --prefix= / www --enable-module=so 7. make 8. make install 9. cd.. / php-xxx 10.. / configure --with-mysql --with-apxs= / www / bin / apxs 11. make 12. make install Se você decidir mudar as opções de seu configure depois da instalação você precisará somente repetir os últimos tres passos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You only need to restart apache for the new module to take effect.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você somente precisará reiniciar o apache para o novo módulo funcionar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A recompile of Apache is not needed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não será necessário recompilar o Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>13. cp php.ini-dist / usr / local / lib / php.ini You can edit your .ini file to set PHP options.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>13. cp php.ini-dist / usr / local / lib / php.ini Você pode editar o seu arquivo .ini para configurar as opções do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you prefer this file in another location, use --with-config-file-path= / path in step 10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você preferir que este arquivo fique em outro lugar, use a opção --with-config-file-path= / caminho no passo 10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Edit your httpd.conf or srm.conf file and check that these lines are present and not commented out:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Edite o seu arquivo httpd.conf ou srm.conf e verifique que estas linas estejam presentes e não estejam comentadas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>AddType application / x-httpd-php .php LoadModule php4_module libexec / libphp4.so You can choose any extension you wish here. .php is simply the one we suggest.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>AddType application / x-httpd-php .php LoadModule php4_module libexec / libphp4.so Você pode escolher qualquer extensão aqui. .php é simplesmente uma sugestão que nós damos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can even include .html, and .php3 can be added for backwards compatibility.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode incluir .html, e .php3 pode ser adicionado para compatibilidade com versões antigas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The path on the right hand side of the LoadModule statement must point to the path of the PHP module on your system.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O caminho no lado direito do comando LoadModule deve apontar para para o caminho do módulo PHP do seu sistema.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above statement is correct for the steps shown above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comando acima está correto para os passos mostrados acima.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use your normal procedure for starting the Apache server. (You must stop and restart the server, not just cause the server to reload by use a HUP or USR1 signal.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use seu procedimento normal para iniciar o servidor Apache. (Você deve parar e reiniciar o servidor, não somente fazer um reinício enviando um sinal HUP ou USR1.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Depending on your Apache install and Unix variant, there are many possible ways to stop and restart the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dependendo da sua instalação do Apache e das variações Unix, existem inúmeras maneiras possíveis de parar e reiniciar o servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Below are some typical lines used in restarting the server, for different apache / unix installations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Abaixo estão algumas linhas típicas usadas para reiniciar e o servidor, para instalações de versões de apache / unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should replace / path / to / with the path to these applications on your systems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você deve trocar / caminho / para / pelo caminho destas aplicações nos seus sistemas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Several Linux and SysV variants: / etc / rc.d / init.d / httpd restart 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Inúmeras variações de sistemas Linux: / etc / rc.d / init.d / httpd restart 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using apachectl scripts: / path / to / apachectl stop / path / to / apachectl start 3. httpdctl and httpsdctl (Using OpenSSL), similar to apachectl: / path / to / httpsdctl stop / path / to / httpsdctl start 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando os scripts apachectl: / caminho / para / apachectl stop / caminho / para / apachectl start 3. httpdctl and httpsdctl (Usando OpenSSL), igual ao apachectl: / caminho / para / httpsdctl stop / caminho / para / httpsdctl start 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using mod_ssl, or another SSL server, you may want to manually stop and start: / path / to / apachectl stop / path / to / apachectl startssl</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando mod_ssl, ou outro servidor SSL, você pode querer iniciar ou reiniciar manualmente: / caminho / para / apachectl stop / caminho / para / apachectl startssl</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Different examples of compiling PHP for apache are as follows:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos diferentes de compilação do PHP para apache estão a seguir:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will create a libphp4.so shared library that is loaded into Apache using a LoadModule line in Apache &apos;s httpd.conf file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto irá criar uma biblioteca compartilhada libphp4.so que é carregada com o Apache usando uma linha LoadModule no arquivo httpd.conf do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PostgreSQL support is embedded into this libphp4.so library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O suporte ao PostgreSQL está embutido dentro da biblioteca compartilhada libphp4.so.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will create a libphp4.so shared library for Apache, but it will also create a pgsql.so shared library that is loaded into PHP either by using the extension directive in php.ini file or by loading it explicitly in a script using the dl() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto irá criar uma biblioteca compartilhada libphp4.so para o Apache, mas isto também criará uma biblioteca compartilhada pgsql.so que é carregada com o PHP tanto ao usar a diretiva de extensão no arquivo php.ini ou então carregando ela explícitamente no script usando a função dl().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>. / configure --with-apache= / path / to / apache_source --with-pgsql</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>. / configure --with-apache= / caminho / para / apache_source --with-pgsql</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will create a libmodphp4.a library, a mod_php4.c and some accompanying files and copy this into the src / modules / php4 This will create a libmodphp4.a library, a mod_php4.c and some accompanying files and copy this into the src / modules / php4 directory in the Apache source tree.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto irá criar uma biblioteca libmodphp4.a, o arquivo mod_php4.c e vários arquivos dependentes e copiará eles para o diretório src / modules / php4 na árvore de diretório do código fonte do Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Then you compile Apache using --activate-module=src / modules / php4 / libphp4.a and the Apache build system will create libphp4.a and link it statically into the httpd binary.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então você compilará o Apache usando a opção --activate-module=src / modules / php4 / libphp4.a e o sistema de compilação do Apache irá criar o arquivo libphp4.a e fará um link estático dentro do binário httpd.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PostgreSQL support is included directly into this httpd binary, so the final result here is a single httpd binary that includes all of Apache and all of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O suporte ao PostgreSQL estará incluído diretamente neste binário httpd, então o resultado final aqui será um único arquivo binário httpd que incluirá tudo do Apache e tudo do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>. / configure --with-apache= / path / to / apache_source --with-pgsql=shared</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>. / configure --with-apache= / caminho / para / apache_source --with-pgsql=shared</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Same as before, except instead of including PostgreSQL support directly into the final httpd you will get a pgsql.so shared library that you can load into PHP from either the php.ini file or directly using dl().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mesmo que o anterior, exceto em vez de incluir o suporte ao PostgreSQL diretamente no binário httpd você terá uma biblioteca compartilhada pgsql.so que você poderá carregar com o PHP tanto do arquivo php.ini ou diretamente usando a função dl().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When choosing to build PHP in different ways, you should consider the advantages and drawbacks of each method.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quanto estiver decidindo compilar o PHP com maneiras diferentes, você deverá considerar as vantages e disvantagens de cada método.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Building PHP into apache (static method) means that PHP will load and run faster.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Complilando como uma biblioteca compartilhada significará que você poderá compilar o apache separadamente, e não terá que recompilar tudo quando quiser adicionar ou mudar o seu PHP. compilando o PHP dentro do apache (método estático) significará que o PHP irá carregar e rodar rapidamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information, see the Apache webpage on DSO support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja a página web do Apache que fala sobre Suporte a Objetos Dinâmicos Compartilhados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Apache &apos;s default http.conf currently ships with a section that looks like this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O arquivo httpd.conf padrão do Apache atualmente já contém uma seção que se parece com isso:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure you specify the installed version of apxs when using --with-apxs= / path / to / apxs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tenha certeza de especificar a versão instalada do apxs quando usar a opção --with-apxs= / caminho / para / apxs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must NOT use the apxs version that is in the apache sources but the one that is actually installed on your system.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalando o PHP em Windows com Apache 1.3.x</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two ways to set up PHP to work with Apache 1.3.x on Windows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Existem duas maneiras de configurar o PHP para funcionar com o Apache 1.3.x em Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One is to use the CGI binary (php.exe), the other is to use the Apache module DLL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma é usando o binário CGI (php.exe), a outra é usando a bliblioteca compartilhada (DLL) como módulo para o Apache (SAPI).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In either case you need to stop the Apache server, and edit your srm.conf or httpd.conf to configure Apache to work with PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nos dois casos você precisará parar o Servidor Apache, e editar seu arquivo srm.conf ou httpd.conf para configurar o Apache para funcionar com o PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is worth noting here that now the SAPI module has been made more stable under windows, we recommend it &apos;s use above the CGI binary, since it is more transparent and secure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vale deixar claro aqui que agora o módulo SAPI tornou-se muito mais estável no windows, nós recomendamos o seu uso em vez do binário CGI, por ele ser mais transparente e seguro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although there can be a few variations of configuring PHP under Apache, these are simple enough to be used by the newcomer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Embora possa ter algumas variações de configurar o PHP com Apache, elas são fáceis suficientemente para ser feitas por um usuário sem experiência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please consult the Apache Docs for further configuration directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por favor consulte os Documentos do Apache para maiores diretivas de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you unziped the PHP package to c:\php\ as described in the Manual Installation Steps section, you need to insert these lines to your Apache configuration file to set up the CGI binary:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você descompactou o pacote do PHP para c:\php\ como descrito na seção Passos de Instalação Manual, você precisará inserir estas linhas no seu arquivo de configuração do Apache para configurar o binário CGI:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By using the CGI setup, your server is open to several possible attacks.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando a configuração do binário CGI, o seu servidor está aberto a vários tipos possívels de ataque.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read our CGI security section to learn how to defend yourself from attacks.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por favor leia nossa seção Segurança em CGI para aprender como defender-se de ataques.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to use PHP as a module in Apache, be sure to move php4ts.dll to the windows / system (for Windows 9x / Me) or winnt / system32 (for Windows NT / 2000 / XP) directory, overwriting any older file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você preferir usar o PHP como um módulo no Apache, esteja certo de mover o arquivo php4ts.dll para o diretório windows / system (em Windows 9x / Me) ou winnt / system32 (para Windows NT / 2000 / XP), sobrescrevendo qualquer arquivo antigo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Then you should add the following two lines to you Apache conf file:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então você deverá adiciomar as duas linhas a seguir em seu arquivo de configuração do Apache:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After changing the configuration file, remember to restart the server, for example, NET STOP APACHE followed by NET START APACHE, if you run Apache as a Windows Service, or use your regular shortcuts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Após mudar o arquivo de configuração, lembre-se de reiniciar o servidor, por exemplo, NET STOP APACHE seguido por NET START APACHE, se você roda o Apache como um Serviço Windows, ou use os atalhos comuns no menu iniciar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may find after using the windows installer for Apache that you need to define the AddModule directive for mod_php4.c in the configuration file (httpd.conf).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você irá descobrir que após usar o windows installer para Apache que você deverá definir a diretriz AddModule para mod_php4.c no arquivo de configuração (httpd.conf).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is done by adding AddModule mod_php4.c to the AddModule list, near the beginning of the configuration file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode ser feito adicionando AddModule mod_php4.c para a lista AddModule, perto do começo do arquivo de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is especially important if the ClearModuleList directive is defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é especialmente importante se a diretriz ClearModuleList Isto é especialmente importante se a diretriz ClearModuleList estiver definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Failure to do this may mean PHP will not be registered as an Apache module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Falhas ao configurar isto pode resultar em não definir o PHP como um módulo para Apache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are 2 ways you can use the source code highlighting feature, however their ability to work depends on your installation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Existem duas maneiras para você poder usar a função de destaque de códigos fonte, contudo dependerá da maneira de sua instalação para esta função funcionar corretamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have configured Apache to use PHP as an ISAPI module, then by adding the following line to your configuration file you can use this feature:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você configurou o Apache para usar o PHP como um módulo SAPI, então adicionando a seguinte linha ao seu arquivo de configuração você poderá usar esta função:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you chose to configure Apache to use PHP as a CGI binary, you will need to use the show_source() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você escolher configurar o Apache para usar o PHP como um binário CGI, você precisará usar a função show_source().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To do this simply create a PHP script file and add this code: ?php show_source (&quot;original_php_script.php&quot;);?.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para fazer isto simplesmente crie um arquivo de script PHP e adicione este código: ?php show_source (&quot;php_original_script.php&quot;);?.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Substitute original_php_script.php with the name of the file you wish to show the source of.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Troque php_original_script.php pelo nome do arquivo que você quer que seja mostrado o código fonte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Win-Apache all backslashes in a path statement such as &quot;c:\directory\file.ext&quot;, must be converted to forward slashes, as &quot;c: / directory / file.ext&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No Apache em Windows todas as barras invertidas em uma definição de caminho como descrito aqui &quot;c:\diretorio\arquivo.ext&quot;, devem ser convertidas para barras normais, como descrito aqui &quot;c: / diretorio / arquivo.ext&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Before installing first, you need to know what do you want to use PHP for.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are three main fields you can use PHP, as described in the What can PHP do? section:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>General Installation Considerations</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Installation</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Servers-Caudium</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-9.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is to build PHP as a CGI program.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Servers-CGI / Commandline</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This way you may catch a problem with PHP on your platform early instead of having to struggle with it later.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Benchmarking</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the max_execution_time configuration setting to control this time for your own scripts. make bench ignores the configuration file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using Variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Complete list of configure options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are only used at compile time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configure Options in PHP 4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These options are only used in PHP 4 as of PHP 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to compile an older version, some options will probably not be available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Database options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Disable GD support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Graphics options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Include ming support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Misc options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Specify path to the installed AOLserver.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Server options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Servers-fhttpd</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Unix / HP-UX installs</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Check the &apos;Execute&apos; checkbox, and confirm.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Windows NT / 2000 / XP and IIS 4 or newer</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are unfamiliar with building and compiling your own software, it &apos;s worth checking whether somebody has already built a packaged version of PHP with the features you need.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Compiling for OS X server</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>9. make 10. make install 11. copy and rename the php.ini-dist file to your &quot;bin&quot; directory from your PHP 4 source directory: cp php.ini-dist / usr / local / bin / php.ini or (if your don&apos;t have a local directory) cp php.ini-dist / usr / bin / php.ini</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Compiling for MacOS X client</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-11.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-11.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-12.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-12.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Graeme Hoose (GraemeHoose@BrightStation.com) Init fn=&quot;load-modules &quot;shlib=&quot; / path / to / server4 / bin / libphp4.so&quot; funcs=&quot;php4_init,php4_close,php4_execute,php4_auth_trans &quot;Init fn=&quot;php4_init&quot; LateInit=&quot;yes &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Installing PHP with Netscape on Windows</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read the packages( 7) manual page for more information about binary packages on OpenBSD.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using Ports</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Servers-Other web servers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some problems are more common than others.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Read the FAQ</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to get help on the mailing list, please try to be precise and give the necessary details about your environment (which operating system, what PHP version, what web server, if you are running PHP as CGI or a server module, etc.), and preferably enough code to make others able to reproduce and test your problem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Bug reports</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use your normal procedure for restarting the Apache server. (You must stop and restart the server, not just cause the server to reload by use a HUP or USR1 signal.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Building</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This automatically working setup gives you an instantly working PHP installation, but it is not meant to be used on online servers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Manual Installation Steps</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can get the latest development version using anonymous CVS, a snapshot or the most recent released source tarball.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Putting it all together</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A properly installed Cygwin environment provides the mandatory files bison.simple and bison.exe.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configure MVC + +</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must build the resolv.lib library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Build resolv.lib</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to build the SAPI module (php4isapi.dll for integrating PHP with Microsoft IIS, set your active configuration to php4isapi-whatever-config and build the desired dll.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Installation of Windows extensions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 3-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 3-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP (recursive acronym for &quot;PHP:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que é PHP?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple answer, but what does that mean?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hypertext Preprocessor&quot;) é uma linguagem de script Open Source de uso geral, muito utilizada e especialmente guarnecida para o desenvolvimento de aplicações Web embútivel dentro do HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma resposta simples, mas o que isso significa?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An introductory example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo introdutório</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>html head title Example / title / head body ?php echo &quot;Hi, I&apos;m a PHP script !&quot;;? / body / html</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>html head title Exemplo / title / head body ?php echo &quot;Olá, Eu sou um script PHP !&quot;;? / body / html</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice how this is different from a script written in other languages like Perl or C - - instead of writing a program with lots of commands to output HTML, you write an HTML script with some embedded code to do something (in this case, output some text).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note como isso é diferente de scripts CGI escritos em outras linguagens como Perl ou C -- - ao invés de escrever um programa com um monte de comandos para imprimir HTML, você escreve um arquivo HTML com algum código inserido para fazer alguma coisa (nesse caso, imprimir um pouco de texto).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP code is enclosed in special start and end tags that allow you to jump into and out of &quot;PHP mode&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O código PHP é delimitado por tags iniciais e finais que lhe permitem pular pra dentro e pra fora do &quot;modo PHP&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What distinguishes PHP from something like client-side JavaScript is that the code is executed on the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que distingui o PHP de algo como Javascript no lado do cliente é que o código é executado no servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you were to have a script similar to the above on your server, the client would receive the results of running that script, with no way of determining what the underlying code may be.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você tivesse um script similar ao acima em seu servidor, o cliente receberia os resultados da execução desse script, sem nenhum modo de determinar como é o código fonte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can even configure your web server to process all your HTML files with PHP, and then there &apos;s really no way that users can tell what you have up your sleeve.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode inclusive configurar seu servidor para processar todos os seus arquivos HTML como PHP, e então não haverá nenhum modo dos usuários descobrirem que se você usa essa linguagem ou não.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The best things in using PHP are that it is extremely simple for a newcomer, but offers many advanced features for a professional programmer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A melhor coisa em usar PHP está no fato de ele ser extremamente simples para um iniciante, mas oferece muitos recursos para o programador profissional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Don&apos; t be afraid reading the long list of PHP&apos;s features.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não se preocupe em ler as longas listas de funções do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can jump in, in a short time, and start writing simple scripts in a few hours.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode pular essa parte (por enquanto) e começar a escrever scripts em poucas horas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although PHP &apos;s development is focused on server-side scripting, you can do much more with it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apesar do desenvolvimento do PHP ser focado nos scripts do lado do servidor, você pode fazer muito mais com ele.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read on, and see more in the What can PHP do? section.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja isso e leia mais na seção O que o PHP pode fazer?.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Getting Started</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Começando</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What can PHP do?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que o PHP pode fazer?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Introduction</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que o PHP pode fazer?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Anything.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer coisa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is mainly focused on server-side scripting, so you can do anything any other CGI program can do, such as collect form data, generate dynamic page content, or send and receive cookies.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP é focado para ser uma linguagem de script do lado do servidor, portanto, você pode fazer qualquer coisa que outro programa CGI pode fazer, como: coletar dados de formulários, gerar páginas com conteúdo dinâmico ou enviar e receber cookies.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But PHP can do much more.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas o PHP pode fazer muito mais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are three main fields where PHP scripts are used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esses são os maiores campos onde os scripts PHP podem se utilizados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Server-side scripting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Script no lado do servidor (server-side).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the most traditional and main target field for PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este é o mais tradicional e principal campo de atuação do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need three things to make this work.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você precisa de três coisas para seu trabalho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP parser (CGI or server module), a webserver and a web browser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O interpretador do PHP (como CGI ou módulo), um servidor web e um browser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need to run the webserver, with a connected PHP installation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Basta rodar o servidor web conectado a um PHP instalado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can access the PHP program output with a web browser, viewing the PHP page through the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode acessar os resultados de seu programa PHP com um browser, visualizando a página PHP através do servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the installation instructions section for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja as instruções de instalação para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Command line scripting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Script de linha de comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can make a PHP script to run it without any server or browser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode fazer um script PHP funcionar sem um servidor web ou browser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You only need the PHP parser to use it this way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A única coisa necessária é o interpretador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This type of usage is ideal for scripts regularly executed using cron (on *nix or Linux) or Task Scheduler (on Windows).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse tipo de uso é ideal para script executados usando o cron ou o Agendador de Tarefas (no Windows).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These scripts can also be used for simple text processing tasks.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esses scripts podem ser usados também para rotinas de processamento de texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the section about Command line usage of PHP for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a seção Utilizando o PHP em linha de comando para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Writing client-side GUI applications.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Escrevendo aplicações GUI no lado do cliente (client-side).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is probably not the very best language to write windowing applications, but if you know PHP very well, and would like to use some advanced PHP features in your client-side applications you can also use PHP-GTK to write such programs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP não é (provavelmente) a melhor linguagem para produção de aplicações com interfaces em janelas, mas o PHP faz isso muito bem, e se você deseja usar alguns recursos avançados do PHP em aplicações no lado do cliente poderá utilizar o PHP-GTK para escrever esses programas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You also have the ability to write cross-platform applications this way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E programas escritos desta forma ainda serão independentes de plataforma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP-GTK is an extension to PHP, not available in the main distribution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP-GTK é uma extensão do PHP, não disponível na distribuição oficial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are interested in PHP-GTK, visit it &apos;s own website.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está interessado no PHP-GTK, visite seu website</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP can be used on all major operating systems, including Linux, many Unix variants (including HP-UX, Solaris and OpenBSD), Microsoft Windows, Mac OS X, RISC OS, and probably others.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP pode ser utilizado na maioria dos sistemas operacionais, incluindo Linux, várias variantes Unix (incluindo HP-UX, Solaris e OpenBSD), Microsoft Windows, Mac OS X, RISC OS, e provavelmente outros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This includes Apache, Microsoft Internet Information Server, Personal Web Server, Netscape and iPlanet servers, Oreilly Website Pro server, Caudium, Xitami, OmniHTTPd, and many others.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP também é suportado pela maioria dos servidores web atuais, incluindo Apache, Microsoft Internet Information Server, Personal Web Server, Netscape and iPlanet Servers, Oreilly Website Pro Server, Caudium, Xitami, OmniHTTPd, e muitos outros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the majority of the servers PHP has a module, for the others supporting the CGI standard, PHP can work as a CGI processor.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP pode ser configurado como módulo para a maioria dos servidores, e para os outros como um CGI comum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So with PHP, you have the freedom of choosing an operating system and a web server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com o PHP, portanto, você tem a liberdade para escolher o sistema operacional e o servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Furthermore, you also have the choice of using procedural programming or object oriented programming, or a mixture of them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Do mesmo modo, você pode escolher entre utilizar programação estrutural ou programação orientada a objeto, ou ainda uma mistura deles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although not every standard OOP feature is realized in the current version of PHP, many code libraries and large applications (including the PEAR library) are written only using OOP code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mesmo não desenvolvendo nenhum recurso padrão de OOP (Object Oriented Programming, Programação Orientada a Objetos) na versão atual do PHP, muitas bibliotecas de código e grandes aplicações (incluindo a biblioteca PEAR) foram escritos somente utilizando OOP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With PHP you are not limited to output HTML.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com PHP você não está limitado a gerar somente HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP&apos; s abilities includes outputting images, PDF files and even Flash movies (using libswf and Ming) generated on the fly.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As habilidades do PHP incluem geração de imagens, arquivos PDF e animações Flash (utilizando libswf ou Ming) criados dinamicamente, on the fly.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also output easily any text, such as XHTML and any other XML file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode facilmente criar qualquer padrão texto, como XHTML e outros arquivos XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP can autogenerate these files, and save them in the file system, instead of printing it out, forming a server-side cache for your dynamic content.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP pode gerar esses padrões e os salvar no sistema de arquivos, em vez de imprimi-los, formando um cache dinâmico de suas informações no lado do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One of the strongest and most significant feature in PHP is its support for a wide range of databases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Talvez a mais forte e mais significativa característica do PHP é seu suporte a uma ampla variedade de banco de dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Writing a database-enabled web page is incredibly simple.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Escrever uma página que consulte um banco de dados é incrivelmente simples.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following databases are currently supported:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os seguintes bancos de dados são atualmente suportados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also has support for talking to other services using protocols such as LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (on Windows) and countless others.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP também tem suporte para comunicação com outros serviços utilizando protocolos como LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (em Windows) e incontáveis outros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also open raw network sockets and interact using any other protocol.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode abrir sockets de rede e interagir diretamente com qualquer protocolo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has support for the WDDX complex data exchange between virtually all Web programming languages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP também suporta o intercâmbio de dados complexos WDDX, utilizado em virtualmente todas as linguagens de programação para web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Talking about interconnection, PHP has support for instantiation of Java objects and using them transparently as PHP objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Falando de comunicação, o PHP implementa a instanciação de objetos Java e os utiliza transparentemente como objetos PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also use our CORBA extension to access remote objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você ainda pode usar sua extensão CORBA para acessar objetos remotos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP has extremely useful text processing features, from the POSIX Extended or Perl regular expressions to parsing XML documents.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP é extremamente útil em recursos de processamento de texto, do POSIX Estendido ou expressões regulares Perl até como interpretador para documentos XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For parsing and accessing XML documents, we support the SAX and DOM standards.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para acessar e processar documentos XML, são suportados os padrões SAX e DOM.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use our XSLT extension to transform XML documents.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você ainda pode usar nossa extensão XSLT para transformar documentos XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While using PHP in the ecommerce field, you &apos;ll find the Cybercash payment, CyberMUT, VeriSign Payflow Pro and CCVS functions useful for your online payment programs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando o PHP no campo do e-commerce, você poderá usar as funções específicas para Cybescash, CyberMUT, Verysign Payflow Pro e CCVS, práticos sistemas de pagamento online.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At last but not least, we have many other interesting extensions, the mnoGoSearch search engine functions, the IRC Gateway functions, many compression utilities (gzip, bz2), calendar conversion, translation...</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por último mas longe de terminar, temos também outras extensões interessantes: funções para o search engine mnoGoSearch, funções para Gateway IRC, vários utilitários de compressão (gzip, bz2), calendário e conversões de datas, tradução...</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As you can see this page is not enough to list all the features and benefits PHP can offer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como você pode ver, esta página não é suficiente para descrever todos os recursos e benefícios que o PHP pode oferecer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read on in the sections about installing PHP, and see the function reference part for explanation of the extensions mentioned here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Leia nas seções sobre a Instalação do PHP, e veja a referência das funções para detalhes das extensões mencionadas aqui.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 14.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 14.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classes and Objects</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>extends</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Often you need classes with similar variables and functions to another existing class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Permite classes com variáveis e funções similares a uma outra classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In fact, it is good practice to define a generic class which can be used in all your projects and adapt this class for the needs of each of your specific projects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De fato, é uma boa prática definir classes genéricas que podem ser utilizadas em todos os seus projetos, e adaptar essas classes com as necessidades específicas de cada projeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To facilitate this, classes can be extensions of other classes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para facilitar isso, classes podem ser extensões de outras classes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The extended or derived class has all variables and functions of the base class (this is called&apos;inheritance &apos;despite the fact that nobody died) and what you add in the extended definition.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A classe estendida ou derivada tem todas as variáveis e funções da classe base (isto é chamado herança, afora o fato que ninguém morreu) e mais aquelas que venha a acrescentar na versão estendida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is not possible to substract from a class, that is, to undefine any existing functions or variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não é possível subtrair uma classe, ou seja, indefinir quaisquer funções ou variáveis existentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An extended class is always dependent on a single base class, that is, multiple inheritance is not supported.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma classe estendida é sempre dependente de uma única classe base, e portanto, herança múltipla não é suportada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classes are extended using the keyword &apos;extends&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classes são estendidas utilizando a instrução &apos;extends&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>class Named_Cart extends Cart {var $owner; function set_owner ($name) {$this - owner = $name;}}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class CarrinhoDeComprasNomeado extends CarrinhoDeCompras {var $proprietario; function set_proprietario ($name) {$this - proprietario = $name;}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This defines a class Named_Cart that has all variables and functions of Cart plus an additional variable $owner and an additional function set_owner().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto define uma classe chamada CarrinhoDeComprasNomeado que tem todas as variáveis e funções de CarrinhoDeCompras mais a variável $proprietario e uma função set_proprietario().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You create a named cart the usual way and can now set and get the carts owner.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode criar um carrinho nomeado da maneira usual e configurar e obter o proprietário do carrinho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can still use normal cart functions on named carts:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você ainda pode continuar utilizando carrinhos normais e carrinhos nomeados:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$ncart = new Named_Cart; / / Create a named cart $ncart - set_owner(&quot;kris&quot;); / / Name that cart print $ncart - owner; / / print the cart owners name $ncart - add_item(&quot;10&quot;, 1); / / (inherited functionality from cart)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$ncart = new CarrinhoDeComprasNomeado; $ncart - set_proprietario(&quot;kris&quot;); print $ncart - proprietario; $ncart - add_item(&quot;10&quot;, 1); / / (funcionalidade herdade do CarrinhoDeCompras)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is also called a &quot;parent-child&quot; relationship.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é chamado relacionamento &quot;pai-filho&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You create a class, parent, and use extends to create a new class based on the parent class: the child class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você cria uma classe pai e utiliza extends para criar uma nova classe baseada na classe pai: sua classe filha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can even use this new child class and create another class based on this child class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você ainda pode criar uma nova classe estendida a partir dessa classe filha e assim por diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classes must be defined before they are used!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As classes precisam ser definidas antes de serem utilizadas!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want the class Named_Cart to extend the class Cart, you will have to define the class Cart first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você estender a classe CarrinhoDeComprasNomeado da classe CarrinhoDeCompras, você precisa antes criar a classe chamada CarrinhoDeCompras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to create another class called Yellow_named_cart based on the class Named_Cart you have to define Named_Cart If you want to create another class called Yellow_named_cart based on the class Named_Cart you have to define Named_Cart first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quiser criar uma outra classe chamada CarrinhoDeComprasNomeadoAmarelo baseada na classe CarrinhoDeComprasNomeado você tem que definir CarrinhoDeComprasNomeado primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To make it short: the order in which the classes are defined is important.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Trocando em miúdos: a ordem em que as classes são definidas é importante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constructors</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Construtores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>::</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following is valid for PHP 4 only.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O seguinte é valido para o PHP 4 somente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sometimes it is useful to refer to functions and variables in base classes or to refer to functions in classes that have not yet any instances.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As vezes pode ser útil se referir a funções e variáveis na classe base ou referenciar funções em classes que não possuem qualquer instância.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The:: operator is being used for this.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O operador:: pode ser utilizado nessas ocasiões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>class A {function example() {echo &quot;I am the original function A::example(). br \n&quot;;}} class B extends A {function example() {echo &quot;I am the redefined function B::example(). br \n&quot;; A::example();}} / / there is no object of class A. / / this will print / / I am the original function A::example(). br A::example(); / / create an object of class B. $b = new B; / / this will print / / I am the redefined function B::example(). br / / I am the original function A::example(). br $b - example();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class A {function exemplo() {echo &quot;Eu sou a função original A::exemplo(). br \n&quot;;}} class B extends A {function exemplo() {echo &quot;Eu sou a função redefinida B::exemplo(). br \n&quot;; A::exemplo();}} / / Nao ha nenhum objeto da classe A. / / Isto ira imprimir / / Eu sou a função original A::exemplo(). br A::exemplo(); / / cria um objeto a partir da classe B $b = new B; / / Isto ira imprimir / / Eu sou a função redefinida B::exemplo(). br / / Eu sou a função original A::exemplo(). br $b - exemplo();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead we call example() as a&apos;class function &apos;, that is, as a function of the class itself, not any object of that class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo acima chama a função exemplo() da classe A, mas não há nenhum objeto da classe A, então não podemos escrever $a - exemplo() ou qualquer coisa similar, Em vez disso, nós chamamos exemplo() como uma &apos;função de classe &apos;, ou seja, como uma função da classe propriamente dita, não qualquer objeto dessa classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are class functions, but there are no class variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Existem funções de classe, mas não variáveis de classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In fact, there is no object at all at the time of the call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De fato, não há nenhum objeto durante toda a execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, a class function may not use any object variables (but it can use local and global variables), and it may no use $this at all.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, uma função de classe não pode usar qualquer variável de objeto (mas pode usar variáveis locais e globais), e nunca podendo utilizar-se de $this.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the above example, class B redefines the function example().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ainda no exemplo acima, a classe B redefine a função exemplo().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The original definition in class A is shadowed and no longer available, unless you are refering specifically to the implementation of example() in class A using the ::-operator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A definição da função original na classe A é ocultada e nunca disponível, a não ser que você se referencie especificamente a implementação de exemplo() da classe A utilizando-se do operador::.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Write A::example() to do this (in fact, you should be writing parent::example(), as shown in the next section).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Escrevemos A::exemplo() para isso (de fato, você também pode escrever parent::exemplo(), como mostrado na próxima seção).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this context, there is a current object and it may have object variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nesse contexto, existe um objeto e ele pode ter variáveis de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, when used from WITHIN an object function, you may use $this and object variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, quando utilizado de DENTRO de uma função de objeto, você pode usar $this e variáveis de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>parent</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may find yourself writing code that refers to variables and functions in base classes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode se encontrar escrevendo código que precisa referenciar a variáveis e funções na classe base.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is particularly true if your derived class is a refinement or specialisation of code in your base class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é particularmente verdade se você derivou uma classe como um refinamento ou especialização de código de sua classe base.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of using the literal name of the base class in your code, you should be using the special name parent, which refers to the name of your base class as given in the extends Instead of using the literal name of the base class in your code, you should be using the special name parent, which refers to the name of your base class as given in the extends declaration of your class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fazendo isso, evita assim a utilização do nome da sua classe base em mais de um lugar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Should your inheritance tree change during implementation, the change is easily made by simply changing the extends declaration of your class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se sua árvore de herança mudar durante a implementação, a modificação é mais facilmente realizada pela simples alteração da declaração extends de suas classes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>class A {function example() {echo &quot;I am A::example() and provide basic functionality. br \n&quot;;}} class B extends A {function example() {echo &quot;I am B::example() and provide additional functionality. br \n&quot;; parent::example();}} $b = new B; / / This will call B::example(), which will in turn call A::example(). $b - example();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class A {function exemplo() {echo &quot;Eu sou A:exemplo() e provenho funcionalidades básicas. br \n&quot;;}} class B extends A {function exemplo() {echo &quot;Eu sou B::exemplo() e provenho funcionalidades adicionais. br \n&quot;; parent::exemplo();}} $b = new B; / / Isto ira chamar B::exemplo(), que por sua vez chama A::exemplo(). $b - exemplo();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Serializing objects - objects in sessions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Serializando objetos - objetos em sessões</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>II.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referência da Linguagem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referências</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Keeping Current</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic syntax</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe básica</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Basic syntax</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Comentários</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports&apos; C&apos;, &apos;C++ &apos;and Unix shell-style comments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta comentários do &apos;C&apos;, &apos;C++&apos; e Unix shell.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo &quot;This is a test&quot;; / / This is a one-line c+ + style comment / * This is a multi line comment yet another line of comment * / echo &quot;This is yet another test&quot;; echo &quot;One Final Test&quot;; # This is shell-style style comment?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php echo &quot;Isto é um teste&quot;; / /Comentário de uma linha no C+ + / * Isto é um comentário de mais de uma linha e aqui temos outra linha * / echo &quot;Isto é um outro teste&quot;; echo &quot;O último teste&quot;; #Comentário no estilo Unix shell?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The &quot;one-line&quot; comment styles actually only comment to the end of the line or the current block of PHP code, whichever comes first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os comentário de uma linha só tem efeito até o fim da linha ou fim do bloco de código PHP atual, o que ocorrer primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>h1 This is an ?php # echo &quot;simple&quot;;? example. / h1 p The header above will say&apos;This is an example &apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>h1 Isto é um ?php # echo &quot;simples&quot;;? exemplo. / h1 p No título acima você lerá &apos;Isto é um exemplo &apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should be careful not to nest &apos;C&apos; style comments, which can happen when commenting out large blocks.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você precisa ser cuidadoso com comentários estilo &apos;C&apos; encadeados, pois eles podem causar problemas em grandes blocos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * echo &quot;This is a test&quot;; / * This comment will cause a problem * / * /?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * echo &quot;Isto é um teste&quot;; / * Este comentário causará um erro * / * /?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The one-line comment styles actually only comment to the end of the line or the current block of PHP code, whichever comes first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os comentários de uma linha somente agem até o fim da linha atual ou o fim do bloco de código PHP, o que ocorrer primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that HTML code after / /?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que código HTML após / /?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>WILL be printed:? skips out of the PHP mode and returns to HTML mode, and / / cannot influence that.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SERÁ impresso:? continuará desligando o modo PHP, retornando para o modo HTML, e o / / não pode influenciar isso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instruction separation</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Separador de instruções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Types</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When PHP parses a file, it simply passes the text of the file through until it encounters one of the special tags which tell it to start interpreting the text as PHP code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe básica</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The parser then executes all the code it finds, up until it runs into a PHP closing tag, which tells the parser to just start passing the text through again.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o PHP interpreta um arquivo, ele simplesmente repassa o texto do arquivo até encontrar uma das tags especiais que lhe diz para começar a interpretar o texto como código PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the mechanism which allows you to embed PHP code inside HTML: everything outside the PHP tags is left utterly alone, while everything inside is parsed as code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este é o mecanismo que permite a inclusão de código PHP dentro do HTML: qualquer coisa fora das tags PHP é deixado como encontrado, enquanto tudo dentro é interpretado e executado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are four sets of tags which can be used to denote blocks of PHP code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há quatro conjuntos de tags que podem ser usadas para marcar blocos de código PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of these, only two (?php...? and script language=&quot;php &quot;... / script) are always available; the others can be turned on or off from the php.ini Of these, only two (?php...? and script language=&quot;php&quot;... / script) are always available; the others can be turned on or off from the php.ini configuration file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As outras podem ser ativadas ou desativadas a partir do arquivo de configuração php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While the short-form tags and ASP-style tags may be convenient, they are not as portable as the longer versions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Enquanto as formas reduzidas das tags ou no seu estilo ASP serem convenientes, elas não são portáveis em todas as versões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, if you intend to embed PHP code in XML or XHTML, you will need to use the ?php...? form to conform to the XML.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além disso, se você pretende incluir código PHP em XML ou XHTML, você precisará usar a forma ?php...? para compatibilidade com o padrão XML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The tags supported by PHP are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As tags suportadas pelo PHP são:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 6-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 6-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Ways of escaping from HTML</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Maneiras de alternar do HTML</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1. ?php echo( &quot;if you want to serve XHTML or XML documents, do like this\n&quot;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>1. ?php echo( &quot;se você precisa dispor documentos XHTML ou XML, use assim\n&quot;);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2.? echo (&quot;this is the simplest, an SGML processing instruction\n&quot;);? ?= expression?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>2.? echo (&quot;este é o mais simples, como uma instrução de processamento SGML\n&quot;);? ?= espressao?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a shortcut for &quot;? echo expression?&quot; 3. script language=&quot;php &quot;echo (&quot;some editors (like FrontPage) don&apos;t like processing instructions&quot;); / script 4.% echo (&quot;You may optionally use ASP-style tags&quot;);% %= $variable; # This is a shortcut for&quot;% echo... &quot;%</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma redução de &quot;? echo expressao?&quot; 3. script language=&quot;php &quot;echo (&quot;alguns editores (como o FrontPage) não gostam de processas instruções&quot;); / script 4.% echo (&quot;Você também pode usar tags ASP opcionalmente&quot;);% %= $variavel; # Uma redução para&quot;% echo... &quot;%</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first way, ?php...?, is the preferred method, as it allows the use of PHP in XML-conformant code such as XHTML.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro método, ?php...?, é o preferencial, já que ele permite o uso do PHP em códigos padrão XML como o XHTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second way is not available always.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo método pode não estar sempre disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Short tags are available only when they have been enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tags curtas estão disponíveis apenas quando ativadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be done via the short_tags() function (PHP 3 only), by enabling the short_open_tag configuration setting in the PHP config file, or by compiling PHP with the --enable-short-tags option to configure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode ser realizando através da função short_tags() (PHP 3 somente), ativando a diretiva de configuração short_open_tag no arquivo de configuração do PHP ou compilando o PHP com a opção --enable-short-tags no configure.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Even if it is enabled by default in php.ini-dist, use of short tags are discouraged.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mesmo que ele esteja configurado por default no php.ini-dist, o uso de tags curtas é desencorajado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The fourth way is only available if ASP-style tags have been enabled using the asp_tags configuration setting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A quarta maneira só está disponível se a tag estilo ASP for ativada utilizando a diretiva asp_tags no arquivo de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Support for ASP-style tags was added in 3.0.4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O suporte as tags estilo APS foi incorporada na versão 3.0.4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using short tags should be avoided when developing applications or libraries that are meant for redistribution, or deployment on PHP servers which are not under your control, because short tags may not be supported on the target server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A utilização das tags curtas deve ser evitada quando do desenvolvimento de aplicações ou bibliotecas com intenção de redistribuição ou no desenvolvimento de serviços em PHP que não ficarão sob seu controle, uma vez que as tags curtas podem não estar disponíveis no servidor de instalação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For portable, redistributable code, be sure not to use short tags.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para portabilidade de código para distribuição, tenha certeza de não usar tags curtas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The closing tag for the block will include the immediately trailing newline if one is present.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A tag de fechamento incluirá uma linha nova linha em branco automaticamente se uma não estiver presente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, the closing tag automatically implies a semicolon; you do not need to have a semicolon terminating the last line of a PHP block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além, a tag de fechamento automaticamente implica num ponto e vírgula: você não precisa ter um ponto e vírgula no fim da última linha de código PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP allows you to use structures like this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP também suporta a utilização de estruturas como essa:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 6-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 6-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Advanced escaping</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alternagem avançada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php if ($expression) {? strong This is true. / strong ?php} else {? strong This is false. / strong ?php}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php if ($expression) {? strong Isso é verdadeiro. / strong ?php} else {? strong Isto é falso. / strong ?php}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Language Reference</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referência da Linguagem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Separador de instruções</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instructions are separated the same as in C or Perl - terminate each statement with a semicolon.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instruções são separadas da mesma forma que o C ou o Perl - cada instrução termina com um ponto e vírgula.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The closing tag (?) also implies the end of the statement, so the following are equivalent:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A tag de fechamento (?) também implica no fim de uma instrução, então os exemplos seguintes são equivalentes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo &quot;This is a test&quot;;? ?php echo &quot;This is a test&quot;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php echo &quot;Isto é um teste&quot;;? ?php echo &quot;Isto é um outro teste&quot;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Comments</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Comentários</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A constant is a identifier (name) for a simple value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As the name suggests, that value cannot change during the execution of the script (except the magic constants As the name suggests, that value cannot change during the execution of the script (except the magic constants which aren&apos;t actually constants).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como o nome sugere, esse valor não pode mudar durante a execução do script (as &apos;constantes mágicas &apos;__FILE__ e __LINE__ parecem ser uma exceção a essa regra, mas elas não são realmente constantes).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A constant is case-sensitive by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As constantes são sensíveis ao caso por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By convention constant identifiers are always uppercase.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por convenção, o nomes de constantes são sempre em maiúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of a constant follows the same rules as any label in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome de uma constante tem as mesmas regras de qualquer identificador no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A valid constant name starts with a letter or underscore, followed by any number of letters, numbers, or underscores.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um nome de constante válida começa com uma letra ou sublinhado, seguido por qualquer número de letras, números ou sublinhados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As a regular expression, it would be expressed thus: [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff ]*</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em expressões regulares, ela pode ser representada por: [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff ]*</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O escopo de uma constante é global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The scope of a constant is global--you can access it anywhere in your script without regard to scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can define a constant by using the define() -function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode definir uma constante utilizando-se da função define().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Once a constant is defined, it can never be changed or undefined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando uma constante é definida, ela não pode ser mais modificada ou anulada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only scalar data (boolean, integer, float and string) can be contained in constants.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somente dados escalares (boolean, integer, float e string) pode ser colocados em constantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can get the value of a constant by simply specifying its name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode obter o valor de uma constante simplismente especificando seu nome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike with variables, you should not prepend a constant with a $.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diferentemente de variáveis, você não pode prefixar uma constante com um sinal de $.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also use the function constant(), to read a constant&apos;s value, if you are to obtain the constant&apos;s name dynamically.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você também pode utilizar a função constant() para ler o valor de uma constante, se você precisar obter seu valor dinamicamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use get_defined_constants() to get a list of all defined constants.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilize get_defined_constants() para obter a lista de todas as constantes definidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants and (global) variables are in a different namespace.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As constantes e variáveis (globais) estão em espaços de nomes diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This implies that for example TRUE and $TRUE are generally different.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto implica, por exemplo, que TRUE e $TRUE são geralmente diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use an undefined constant, PHP assumes that you mean the name of the constant itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você usar uma constante indefinida, o PHP assume o nome da constante como seu próprio valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A notice will be issued when this happens.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma notice será informada quando isso acontecer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the defined() -function if you want to know if a constant is set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use a função defined() se você precisar saber se uma constante está definida ou não.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are the differences between constants and variables:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas são as diferenças entre constantes e variáveis:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants do not have a dollar sign ($) before them;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes não podem ter um sinal de cifrão ($) antes delas;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may only be defined using the define() function, not by simple assignment;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes só podem ser definidas utilizando a função define(), e não por simples assimilação;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may be defined and accessed anywhere without regard to variable scoping rules;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes podem ser definidas e acessadas de qualquer lugar sem que a regras de escopo de variáveis seja aplicadas;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may not be redefined or undefined once they have been set; and</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes não podem ser redefinidas ou eliminadas depois que elas são criadas; e</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants may only evaluate to scalar values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes só podem conter valores escalares.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 9-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 9-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defining Constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Definindo Constantes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php define( &quot;CONSTANT&quot;, &quot;Hello world .&quot;); echo CONSTANT; / / outputs &quot;Hello world. &quot;echo Constant; / / outputs &quot;Constant&quot; and issues a notice.?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php define( &quot;CONSTANT&quot;, &quot;Hello world .&quot;); echo CONSTANT; / / imprime &quot;Hello world. &quot;echo Constant; / / imprime &quot;Constant&quot; e gera um alerta notice.?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables from outside PHP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis externas ao PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Predefined constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 9.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP provides a large number of predefined constants to any script which it runs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are four magical constants that change depending on where they &apos;re used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP fornece um grande número de constantes predefinidas para qualquer script que ele execute.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These special constants are case-insensitive and are as follows:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A maioria dessas constantes, entretanto, são criadas por várias extensões, e somente estarão presentes quando essas extensões estiverem disponíveis, por carregamento dinamico ou por compilação direta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A list of predefined constants is available in the section Reserved predefined constants.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A lista de constantes predefinidas está disponível na seção Constantes Predefinidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Expressions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Expressões</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Expressões</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Expressions are the most important building stones of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Expressões são as peças de construção mais importantes do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP, almost anything you write is an expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP, quase tudo o que você escreve são expressões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The simplest yet most accurate way to define an expression is &quot;anything that has a value&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A maneira mais simples e ainda mais precisa de definir uma expressão é &quot;tudo o que tem um valor&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The most basic forms of expressions are constants and variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As formas mais básicas de expressões são constantes e variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you type &quot;$a = 5&quot;, you&apos;re assigning &apos;5 &apos;into $a. &apos;5&apos;, obviously, has the value 5, or in other words &apos;5&apos; is an expression with the value of 5 (in this case, &apos;5 &apos;is an integer constant).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você digita &quot;$a = 5&quot;, você está atribuindo &apos;5 &apos;para $a. &apos;5&apos;, obviamente, tem o valor 5, ou, em outras palavras, &apos;5&apos; é uma expressão com o valor 5 (neste caso, &apos;5 &apos;é uma constante inteira).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After this assignment, you&apos; d expect $a&apos;s value to be 5 as well, so if you wrote $b = $a, you&apos;d expect it to behave just as if you wrote $b = 5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Depois desta atribuição, você pode esperar que o valor de $a seja 5 também, assim se você escrever $b = $a, você pode esperar que $b se comporte da mesma forma que se você escrevesse $b = 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In other words, $a is an expression with the value of 5 as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outras palavras, $a é uma expressão com valor 5 também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If everything works right, this is exactly what will happen.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se tudo funcionou bem, isto é exatamente o que acontecerá.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Slightly more complex examples for expressions are functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos ligeiramente mais complexos para expressões são as funções.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, consider the following function:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, considere a seguinte função:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assuming you&apos; re familiar with the concept of functions (if you&apos;re not, take a look at the chapter about functions), you&apos;d assume that typing $c = foo() is essentially just like writing $c = 5, and you&apos;re right.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assumindo que você está familiarizado com o conceito de funções (se não estiver, dê uma olhada no capítulo sobre funções), você pode assumir que digitar $c = foo() é essencialmente a mesma coisa que escrever $c = 5, e você está certo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Functions are expressions with the value of their return value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções são expressões com o valor igual ao seu valor de retorno.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since foo() returns 5, the value of the expression&apos;foo() &apos;is 5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como foo() retorna 5, o valor da expressão &apos;foo() &apos;é 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Usually functions don &apos;t just return a static value but compute something.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Geralmente, as funções não retornam apenas um valor estático, mas computam algo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Of course, values in PHP don&apos; t have to be integers, and very often they aren&apos;t.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Obviamente, os valores em PHP não têm que ser inteiros, e muito freqüentemente eles não são.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports three scalar value types: integer values, floating point values and string values (scalar values are values that you can&apos;t&apos;break &apos;into smaller pieces, unlike arrays, for instance).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta três tipos de valores escalares: valores inteiros, valores de ponto flutuante e valores de string (valores escalares são valores que você não pode quebrar em pedaços menores, diferente de matrizes, por exemplo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also supports two composite (non-scalar) types: arrays and objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP também suporta dois tipos compostos (não-escalares): matrizes e objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Each of these value types can be assigned into variables or returned from functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cada um destes tipos de valor podem ser atribuídos a variáveis ou retornadas de funções.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So far, users of PHP / FI 2 shouldn &apos;t feel any change.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Até agora, os usuários de PHP / FI 2 não sentiriam qualquer mudança.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, PHP takes expressions much further, in the same way many other languages do.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Porém, o PHP traz expressões bem mais novas, da mesma forma que muitas outras linguagens.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is an expression-oriented language, in the sense that almost everything is an expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP é uma linguagem orientada a expressões, no sentido de que quase tudo são expressões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider the example we&apos; ve already dealt with, &apos;$a = 5 &apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Considere o exemplo com o qual já lidamos, &apos;$a = 5&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It&apos; s easy to see that there are two values involved here, the value of the integer constant &apos;5 &apos;, and the value of $a which is being updated to 5 as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É fácil ver que há dois valores envolvidos aqui, o valor da constante inteira &apos;5&apos;, e o valor de $a que está sendo atualizado para 5 também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But the truth is that there&apos; s one additional value involved here, and that&apos;s the value of the assignment itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas a verdade é que há um valor adicional envolvido, e que é o próprio valor da atribuição.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The assignment itself evaluates to the assigned value, in this case 5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A própria atribuição é avaliada com o valor atribuído, neste caso 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In practice, it means that &apos;$a = 5&apos;, regardless of what it does, is an expression with the value 5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na prática, significa que &apos;$a = 5&apos;, independente do que faça, é uma expressão com o valor 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, writing something like &apos;$b = ($a = 5)&apos; is like writing &apos;$a = 5; $b = 5; &apos;(a semicolon marks the end of a statement).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Portanto, escrever algo como &apos;$b = ($a = 5)&apos; é como escrever &apos;$a = 5; $b = 5; &apos;(um ponto-e-vírgula marca o fim do comando).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since assignments are parsed in a right to left order, you can also write &apos;$b = $a = 5&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como atribuições são analisadas da direita para a esquerda, você também pode escrever &apos;$b = $a = 5&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another good example of expression orientation is pre - and post-increment and decrement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outro bom exemplo de orientação de expressão é o pré e o pós-incremento e decremento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users of PHP / FI 2 and many other languages may be familiar with the notation of variable+ + and variable--.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usuários de PHP / FI 2 e muitas outras linguagens podem estar familiarizados com a notação de variável+ + e variável--.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are increment and decrement operators.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estes são os operadores de incremento e decremento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP / FI 2, the statement &apos;$a++&apos; has no value (is not an expression), and thus you can&apos;t assign it or use it in any way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP / FI 2, o comando &apos;$a++&apos; não tem valor (não é uma expressão), e portanto você não pode atribuir desta forma ou usá-la de jeito nenhum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP enhances the increment / decrement capabilities by making these expressions as well, like in C.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP evoluiu a capacidade de incremento / decremento criando estas expressões também, como em C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP, like in C, there are two types of increment - pre-increment and post-increment.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em PHP, como em C, há dois tipos de incremento - pré-incremento e pós-incremento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both pre-increment and post-increment essentially increment the variable, and the effect on the variable is idential.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tanto o pré-incremento quanto o pós-incremento, essencialmente, incrementam variáveis, e o efeito sobre a variável é idêntico.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The difference is with the value of the increment expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A diferença é com o valor da expressão de incremento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pre-increment, which is written &apos;++$variable&apos;, evaluates to the incremented value (PHP increments the variable before reading its value, thus the name&apos;pre-increment&apos;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O pré-incremento, que é escrito &apos;++$variavel&apos;, é avaliado como o valor de incremento (o PHP incrementa a variável antes de ler seu valor, por isso o nome pré-incremento).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Post-increment, which is written &apos;$variable++&apos; evaluates to the original value of $variable, before it was incremented (PHP increments the variable after reading its value, thus the name&apos;post-increment&apos;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O pós-incremento, que é escrito &apos;$variavel++&apos; é avaliado como o valor original da variável, antes de ser incrementada (o PHP incrementa a variável depois de ler seu valor, por isso o nome &apos;pós-incremento&apos;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A very common type of expressions are comparison expressions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um tipo muito comum de expressão são expressões de comparação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These expressions evaluate to either 0 or 1, meaning FALSE or TRUE (respectively).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas expressões são avaliadas como 0 ou 1, significando FALSE ou TRUE, respectivamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports (bigger than), = (bigger than or equal to), == (equal), != (not equal), (smaller than) and = (smaller than or equal to).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta (maior que), = (maior ou igual), == (igual), != (diferente), (menor que) e =(menor ou igual).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These expressions are most commonly used inside conditional execution, such as if statements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas expressões são usadas mais freqüentemente dentro de instruções condicionais, como em comandos if.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The last example of expressions we &apos;ll deal with here is combined operator-assignment expressions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O último exemplo de expressões com que nós vamos lidar aqui são as expressões combinadas operador-atribuição.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You already know that if you want to increment $a by 1, you can simply write &apos;$a++&apos; or &apos;++$a &apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você já sabe que se você quer incrementar $a de 1, você só precisa escrever &apos;$a++&apos; ou &apos;++$a &apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>But what if you want to add more than one to it, for instance 3?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas e se você quiser somar mais que um a ele, por exemplo 3?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You could write &apos;$a++&apos; multiple times, but this is obviously not a very efficient or comfortable way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você poderia escrever &apos;$a++&apos; várias vezes, mas esta obviamente não é uma forma muito eficiente ou confortável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A much more common practice is to write &apos;$a = $a + 3&apos;. &apos;$a + 3&apos; evaluates to the value of $a plus 3, and is assigned back into $a, which results in incrementing $a by 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma prática muito mais comum é escrever &apos;$a = $a + 3&apos;. &apos;$a + 3&apos; é avaliada como o valor de $a mais 3, e é atribuído de volta a $a, que resulta em incrementar $a de 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP, as in several other languages like C, you can write this in a shorter way, which with time would become clearer and quicker to understand as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em PHP, como em várias outras linguagens como o C, você pode escrever isto de uma forma mais curta, que com o tempo se torna mais limpa e rápida de se entender, também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding 3 to the current value of $a can be written &apos;$a += 3&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Somar 3 ao valor corrente de $a pode ser escrito &apos;$a +=3&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to being shorter and clearer, this also results in faster execution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa exatamente &quot;pegue o valor de $a, some 3 a ele, e atribua-o de volta a $a.&quot; Além de ser mais curto e mais limpo, isto também resulta em execução mais rápida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of &apos;$a += 3&apos;, like the value of a regular assignment, is the assigned value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor de &apos;$a += 3&apos;, como o valor de uma atribuição regular, é o valor atribuído.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice that it is NOT 3, but the combined value of $a plus 3 (this is the value that&apos;s assigned into $a).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que NÃO é 3, mas o valor combinado de $a mais 3 (este é o valor que é atribuído a $a).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any two-place operator can be used in this operator-assignment mode, for example &apos;$a -= 5&apos; (subtract 5 from the value of $a), &apos;$b *= 7 &apos;(multiply the value of $b by 7), etc.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer operador de dois parâmetros pode ser usado neste modo operador-atribuição, por exemplo &apos;$a -= 5&apos; (subtrai 5 do valor de $a), &apos;$b *= 7 &apos;(multiplica o valor de $b por 7), etc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is one more expression that may seem odd if you haven &apos;t seen it in other languages, the ternary conditional operator:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há mais uma expressão que podem parecer estranha se você não a viu em outras linguagens, o operador condicional ternário:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$first? $second: $third</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$primeira? $segunda: $terceira</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example should help you understand pre - and post-increment and expressions in general a bit better:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O seguinte exemplo deve ajudá-lo a entender um pouco melhor pré e pós-incremento e expressões em geral:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function double( $i) {return $i*2;} $b = $a = 5; / * assign the value five into the variable $a and $b * / $c = $a++; / * post-increment, assign original value of $a (5) to $c * / $e = $d = ++$b; / * pre-increment, assign the incremented value of $b (6) to $d and $e * / / * at this point, both $d and $e are equal to 6 * / $f = double($d++); / * assign twice the value of $d emphasis before / emphasis the increment, 2*6 = 12 to $f * / $g = double(++$e); / * assign twice the value of $e emphasis after / emphasis the increment, 2*7 = 14 to $g * / $h = $g += 10; / * first, $g is incremented by 10 and ends with the value of 24. the value of the assignment (24) is then assigned into $h, and $h ends with the value of 24 as well. * /</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function double( $i) {return $i*2;} $b = $a = 5; / * atribui o valor cinco às variáveis $a e $b * / $c = $a++; / * pós-incremento, atribui o valor original de $a (5) para $c * / $e = $d = ++$b; / * pré-incremento, atribui o valor incrementado de $b (6) a $d e $e * / / * neste ponto, tanto $d quanto $e são iguais a 6 * / $f = double($d++); / * atribui o dobro do valor de $d emphasis antes / emphasis do incremento, 2*6 = 12 a $f * / $g = double(++$e); / * atribui o dobro do valor de $e emphasis depois / emphasis do incremento, 2*7 = 14 a $g * / $h = $g += 10; / * primeiro, $g é incrementado de 10 e termina com o valor 24. o valor da atribuição (24) é então atribuído a $h, e $h termina com o valor 24 também. * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the beginning of the chapter we said that we &apos;ll be describing the various statement types, and as promised, expressions can be statements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No começo do capítulo, nós dissemos que descreveríamos os vários tipos de comandos, e como prometido, expressões podem ser comandos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, not every expression is a statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Porém, nem toda expressão é um comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this case, a statement has the form of &apos;expr&apos; &apos;;&apos; that is, an expression followed by a semicolon.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Neste caso, um comando tem a forma &apos;expr&apos; &apos;;&apos;, ou seja, uma expressão seguida de ponto-e-vírgula.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In &apos;$b=$a=5 ;&apos;, $a=5 is a valid expression, but it&apos;s not a statement by itself. &apos;$b=$a=5;&apos; however is a valid statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E &apos;$b=$a=5 ;&apos;, $a=5 é uma expressão válida, mas não é um comando por si só. &apos;$b=$a=5;&apos; porém é um comando válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One last thing worth mentioning is the truth value of expressions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma última coisa que vale mencionar é o valor-verdade de expressões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In many events, mainly in conditional execution and loops, you &apos;re not interested in the specific value of the expression, but only care about whether it means TRUE or FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em muitos eventos, principalmente em instruções condicionais e loops, você não está interessado no valor específico da expressão, mas somente se ela significa TRUE ou FALSE (o PHP não tem um tipo booleano dedicado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants TRUE and FALSE The constants TRUE and FALSE (case-insensitive) are the two possible boolean values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As constantes TRUE e FALSE (insensitivas ao caso) são seus dois valores booleanos possíveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When necessary, an expression is automatically converted to boolean.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As vezes uma expressão é automaticamente convertida para um booleano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the section about type-casting for details about how.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a seção sobre type-casting para detalhes de como isso é feito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP provides a full and powerful implementation of expressions, and documenting it entirely goes beyond the scope of this manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP fornece uma implementação completa e poderosa de expressões, e a completa documentação dela vai além do escopo deste manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above examples should give you a good idea about what expressions are and how you can construct useful expressions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os exemplos acima devem dar a você uma boa idéia sobre o que são as expressões e como você pode construir expressões úteis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Throughout the rest of this manual we &apos;ll write expr to indicate any valid PHP expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Através do restante do manual nós escreveremos expr ou expressao para indicar qualquer expressão PHP válida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Construtores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3 and PHP 4 constructors behave differently.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os construtores se comportam diferentemente entre o PHP 3 e o PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP 4 semantics are strongly preferred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A semântica do PHP 4 é atualmente preferencial.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constructors are functions in a class that are automatically called when you create a new instance of a class with new.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Construtores são funções numa classe que são automaticamente chamados quando você cria uma nova instância da classe com new.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, a function becomes a constructor when it has the same name as the class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, uma função se torna um construtor quando ele tem o mesmo nome da classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, a function becomes a constructor, when it has the same name as the class it is defined in - the difference is subtle, but crucial (see below).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4, uma função se torna um construtor quando ele tem o mesmo nome da classe onde ela foi definida (a diferença é sutil, mas crucial -- - veja abaixo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / Works in PHP 3 and PHP 4. class Auto_Cart extends Cart {function Auto_Cart() {$this - add_item (&quot;10&quot;, 1);}}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / Funciona no PHP 3 e 4 class CarrinhoDeComprasAutomatico extends CarrinhoDeCompras {function CarrinhoDeComprasAutomatico() {$this - add_item (&quot;10&quot;, 1);}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This defines a class Auto_Cart that is a Cart plus a constructor which initializes the cart with one item of article number &quot;10&quot; each time a new Auto_Cart is being made with &quot;new &quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto define uma classe chamada CarrinhoDeComprasAutomatico que é um CarrinhoDeCompras mais um construtor que inicializa o carrinho com um item do artigo numero &quot;10&quot; cada vez que um novo CarrinhoDeComprasAutomatico for criado com &quot;new &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constructors can take arguments and these arguments can be optional, which makes them much more useful.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Construtores pode ter argumentos e esses argumentos podem ser opcionais, o que os torna muito mais práticos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To be able to still use the class without parameters, all parameters to constructors should be made optional by providing default values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para permitir a criação de classes sem parâmetros, todos os parâmetros dos construtores pode ser feitos opcionais simplesmente por terem valores default.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / Works in PHP 3 and PHP 4. class Constructor_Cart extends Cart {function Constructor_Cart($item = &quot;10&quot;, $num = 1) {$this - add_item ($item, $num);}} / / Shop the same old boring stuff. $default_cart = new Constructor_Cart; / / Shop for real... $different_cart = new Constructor_Cart(&quot;20&quot;, 17);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / Funciona no PHP 3 e 4 class CarrinhoDeComprasComConstrutor extends CarrinhoDeCompras {function CarrinhoDeComprasComConstrutor($item = &quot;10&quot;, $num = 1) {$this - add_item ($item, $num);}} / / Fazendo compras do mesmo modo antigo $carrinho_default = new CarrinhoDeComprasComConstrutor; / / Fazendo compres de verdade $carrinhho_diferente = new CarrinhoDeComprasComConstrutor(&quot;20&quot;, 17);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You also can use the @ operator to mute errors occuring in the constructor, e.g. @new.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar o operador @ para esconder erros gerados no construtor do objeto, por exemplo: @new.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, derived classes and constructors have a number of limitations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, classes derivadas e construtores tem uma série de limitações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following examples should be read carefully to understand these limitations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os exemplo seguintes precisam ser lidos cuidadosamente para que você entenda essas limitações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>class A {function A() {echo &quot;I am the constructor of A. br \n&quot;;}} class B extends A {function C() {echo &quot;I am a regular function. br \n&quot;;}} / / no constructor is being called in PHP 3. $b = new B;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class A {function A() {echo &quot;Eu sou o construtor de A. br \n&quot;;}} class B extends A {function C() {echo &quot;Eu sou uma função normal. br \n&quot;;}} / / nenhum construtor é chamado no PHP 3 $b = new B;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, no constructor is being called in the above example.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, nenhum construtor é chamado no exemplo acima.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The rule in PHP 3 is: &apos;A constructor is a function of the same name as the class.&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A regra no PHP 3 é: &apos;Um construtor é uma função com o mesmo nome da classe&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of the class is B, and there is no function called B() in class B.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome da classe é B, e não há nenhuma função chamada B() na classe B.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Nothing happens.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nada ocorre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is fixed in PHP 4 by introducing another rule:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto foi corrigido no PHP 4 pela instrução de outra regra:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a class has no constructor, the constructor of the base class is being called, if it exists.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se uma classe não tem construtor, o construtor da classe base é chamado, se existir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above example would have printed &apos;I am the constructor of A. br&apos; in PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo acima teriam impresso &apos;Eu sou o construtor de A br&apos;. no PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>class A {function A() {echo &quot;I am the constructor of A. br \n&quot;;} function B() {echo &quot;I am a regular function named B in class A. br \n&quot;; echo &quot;I am not a constructor in A. br \n&quot;;}} class B extends A {function C() {echo &quot;I am a regular function. br \n&quot;;}} / / This will call B() as a constructor. $b = new B;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class A {function A() {echo &quot;Eu sou o construtor de A. br \n&quot;;} function B() {echo &quot;Eu sou uma função normal chamada B na classe A. br \n&quot;; echo &quot;Eu não sou o construtor de A. br \n&quot;;}} class B extends A {function C() {echo &quot;Eu sou uma função normal. br \n&quot;;}} / / Isto irá chamar B() como um construtor. $b = new B;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, the function B() in class A will suddenly become a constructor in class B, although it was never intended to be.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, a função B() na classe A se tornará silenciosamente um construtor na classe B, mesmo que isso nunca tenha sido planejado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3 does not care if the function is being defined in class B, or if it has been inherited.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 3 não se preocupa se a função foi definida na classe B, ou se ela foi herdada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is fixed in PHP 4 by modifying the rule to: &apos;A constructor is a function of the same name as the class it is being defined in.&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto foi corrigido no PHP 4 pela modificação da regra para: &apos;Um construtor é uma função com o mesmo nome da classe onde ela é definida.&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus in PHP 4, the class B would have no constructor function of its own and the constructor of the base class would have been called, printing &apos;I am the constructor of A. br&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, no PHP 4, como a classe B não tem nenhuma função construtora definida nela mesma então o construtor da classe base será chamado, imprimindo &apos;Eu sou o construtor de A. br&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Neither PHP 3 nor PHP 4 call constructors of the base class automatically from a constructor of a derived class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nem o PHP 3 ou o 4 chamam automaticamente os construtores da classe base a partir do construtor da classe derivada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is your responsibility to propagate the call to constructors upstream where appropriate.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É de sua responsabilidade propagar a chamada dos construtores herança acima, onde apropriado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are no destructors in PHP 3 or PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não existem destrutores no PHP 3 ou 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may use register_shutdown_function() instead to simulate most effects of destructors.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas você pode usar register_shutdown_function() para simular a maioria dos efeitos de destrutores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Destructors are functions that are called automatically when an object is destroyed, either with unset() or by simply going out of scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Destrutores são funções que são chamadas automaticamente quando um objeto é destruído, ou pela utilização de unset() ou pela simples saída do escopo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are no destructors in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não existem destrutores no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A class is a collection of variables and functions working with these variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classes e Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A class is defined using the following syntax:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma classe é uma coleção de variáveis e funções trabalhando com essas variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php class Cart {var $items; / / Items in our shopping cart / / Add $num articles of $artnr to the cart function add_item ($artnr, $num) {$this - items[$artnr] += $num;} / / Take $num articles of $artnr out of the cart function remove_item ($artnr, $num) {if ($this - items[$artnr] $num) {$this - items[$artnr] -= $num; return true;} else {return false;}}}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php class CarrinhoDeCompras {var $items; / / Itens do carrinho de compras / / Acrescenta a quantidade $num do artigo $artnr no carrinho function add_item ($artnr, $num) {$this - items[$artnr] += $num;} / / Retira a quantidade $num de artigos $artnr do carrinho function remove_item ($artnr, $num) {if ($this - items[$artnr] $num) {$this - items[$artnr] -= $num; return true;} else {return false;}}}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This defines a class named Cart that consists of an associative array of articles in the cart and two functions to add and remove items from this cart.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto define uma classe chamada CarrinhoDeCompras que consiste de uma matriz associativa de artigos no carrinho e duas funções para acrescentar e remover itens deste carrinho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following cautionary notes are valid for PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os cuidados a seguir devem ser tomados a partir do PHP 4:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name stdClass is used interally by Zend and is reserved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome stdClass é utilizado internamente pela Zend e é uma palavra reservada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot have a class named stdClass in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode ter uma classe chamada stdClass no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function names __sleep and __wakeup The function names __sleep and __wakeup are magical in PHP classes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome de função __sleep e __wakeup O nome de função __sleep e __wakeup são especialmente mágicos para as classes PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot have functions with these names in any of your classes unless you want the magic functionality associated with them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode ter esses nomes em nenhuma de suas classes a não ser que você deseje aplicar essa funcionalidade mágica com elas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See below for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja abaixo para mais detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP reserves all function names starting with __ as magical.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP reserva todos os nomes de funções começando com __ como mágicas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is recommended that you do not use function names with __ in PHP unless you want some documented magic functionality.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É recomendável que você não utilize nome de funções começando com __ no PHP a não ser que você precise dessas funcionalidades mágicas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, only constant initializers for var variables are allowed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4, somente inicializações com constantes são permitidas para variáveis com var.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To initialize variables with non-constant values, you need an initialization function which is called automatically when an object is being constructed from the class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para inicializar variáveis com valores não constantes, você precisará de uma função de inicialização chamada automaticamente quando o objeto for construído a partir da classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Such a function is called a constructor (see below).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por isso, essa função é conhecida como construtor (veja baixo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * None of these will work in PHP 4. * / class Cart {var $todays_date = date(&quot;Y-m-d&quot;); var $name = $firstname; var $owner = &apos;Fred &apos;. &apos;Jones&apos;; var $items = array(&quot;VCR&quot;, &quot;TV&quot;);} / * This is how it should be done. * / class Cart {var $todays_date; var $name; var $owner; var $items; function Cart() {$this - todays_date = date(&quot;Y-m-d&quot;); $this - name = $GLOBALS[&apos;firstname&apos;]; / * etc... * /}}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Nenhuma delas funcionarão com o PHP 4 * / class CarrinhoDeCompras {var $data_de_hoje = date(&quot;Y-m-d&quot;); var $nome = $primeiro_nome; var $proprietario = &apos;Fred &apos;. &apos;Jones&apos;; var $items = array(&quot;VCR&quot;, &quot;TV&quot;);} / * Esta é a forma como deve ser feito * / class CarrinhoDeCompras {var $data_de_hoje; var $nome; var $proprietario; var $items; function CarrinhoDeCompras() {$this - data_de_hoje = date(&quot;Y-m-d&quot;); $this - nome = $GLOBALS[&apos;primeiro_nome&apos;]; / * etc... * /}}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Classes are types, that is, they are blueprints for actual variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classes são tipos, ou seja, são apenas um modelo das variáveis normais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You have to create a variable of the desired type with the new operator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode criar uma variável (ou instância) do tipo desejado com o operador new.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $cart = new Cart; $cart - add_item(&quot;10&quot;, 1); $another_cart = new Cart; $another_cart - add_item(&quot;0815&quot;, 3);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $carrinho = new CarrinhoDeCompras; $carrinho - add_item(&quot;10&quot;, 1); $outro_carrinho = new CarrinhoDeCompras; $outro_carrinho - add_item(&quot;0815&quot;, 3);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This creates the objects $cart and $another_cart, both of the class Cart.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto cria os objetos $carrinho e $outro_carrinho, ambos a partir da classe CarrinhoDeCompras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function add_item() of the $cart object is being called to add 1 item of article number 10 to the $cart.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função add_item() do objeto $carrinho foi chamada e acrescentou 1 item do artigo número 10 a ele.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>3 items of article number 0815 are being added to $another_cart.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>3 itens do artigo número 0815 foi acrescentado no $outro_carrinho.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both, $cart and $another_cart, have functions add_item(), remove_item() and a variable items.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ambos, $carrinho e $outro_carrinho, tem as funções add_item(), remove_item() e a variável itens.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are distinct functions and variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Elas são funções e variáveis distintas entre si.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can think of the objects as something similar to directories in a filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode pensar no objetos como os diretórios de um sistema de arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In a filesystem you can have two different files README.TXT, as long as they are in different directories.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Num disco você pode ter dois arquivos diferentes README.TXT, partindo de que eles estão em diretórios diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Just like with directories where you &apos;ll have to type the full pathname in order to reach each file from the toplevel directory, you have to specify the complete name of the function you want to call:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Da mesma forma que você teria de especificar o caminho completo para acessar cada arquivo a partir do diretório principal, você também tem de especificar o nome completo do objeto e função que você quer chamar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP terms, the toplevel directory would be the global namespace, and the pathname separator would be -.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em termos do PHP, o diretório principal pode ser o escopo global de nomes, e o separador de diretórios -.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, the names $cart - items and $another_cart - items name two different variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Portanto, os nomes $carrinho - items e $outro_carrinho - items são duas variáveis diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the variable is named $cart - items, not $cart - $items, that is, a variable name in PHP has only a single dollar sign.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que a variável é chamada $carrinho - items e não $carrinho - $items, mesmo porque, um nome de variável em PHP tem apenas um único sinal de cifrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / correct, single $$cart - items = array( &quot;10 &quot;= 1); / / invalid, because $cart - $items becomes $cart -&quot; &quot;$cart - $items = array(&quot;10&quot; = 1); / / correct, but may or may not be what was intended: / / $cart - $myvar becomes $cart - items $myvar = &apos;items&apos;; $cart - $myvar = array(&quot;10 &quot;= 1);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / correcto, apenas um $$carrinho - items = array( &quot;10 &quot;= 1); / / inválido, porque $carrinho - $items se transforma em $carrinho -&quot; &quot;$carrinho - $items = array(&quot;10&quot; = 1); / / correto, mas pode ou não ser o que você quer: / / $carrinho - $myvar se torna $carrinho - items $myvar = &apos;items&apos;; $carrinho - $myvar = array(&quot;10 &quot;= 1);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Within a class definition, you do not know under which name the object will be accessible in your program: at the time the Cart class was written, it was unknown that the object will be named $cart or $another_cart later.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando definindo uma classe, você não pode saber com que nome os objetos serão acessados em seus programas: enquanto escrevia a classe CarrinhoDeCompras, é impossível saber se o objeto criado a partir dela será chamado $carrinho ou $outro_carrinho (ou ainda ambos).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, you cannot write $cart - items within the Cart class itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, você não pode escrever $carrinho items dentro da própria classe CarrinhoDeCompras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead, in order to be able to access it&apos; s own functions and variables from within a class, one can use the pseudo-variable $this which can be read as&apos;my own &apos;or&apos;current object&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, para poder acessar suas próprias funções e variáveis de dentro da classe, pode-se utilizar a pseudo-variável $this, que pode ser lida como &apos;eu mesmo&apos; ou &apos;objeto atual &apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, &apos;$this - items[$artnr] += $num&apos; can be read as&apos;add $num to the $artnr counter of my own items array &apos;or&apos;add $num to the $artnr counter of the items array within the current object&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dessa forma, &apos;$this - items[$artnr] += $num&apos; pode ser lido como &apos;acrescente $num para o contador $artnr do meu array items &apos;ou &apos;acrescente $num para o contador $artnr do array do objeto atual&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are some nice functions to handle classes and objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há funções muito boas para manipulação de classes e objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You might want to take a look at the Class / Object Functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dê uma olhada em Funções de Classes e Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As funções mágicas __sleep e __wakeup</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>serialize() checks if your class has a function with the magic name __sleep.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>serialize() verifica se sua classe tem uma função com o nome mágico __sleep.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If so, that function is being run prior to any serialization.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se sim, essa função será executada antes de qualquer serialização.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can clean up the object and is supposed to return an array with the names of all variables of that object that should be serialized.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim é possível controlar a persistência do objeto enquanto deve retornar um array com os nomes de todas as variáveis daquele objeto que precisam ser serializadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The intended use of __sleep is to close any database connections that object may have, committing pending data or perform similar cleanup tasks.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>__sleep é planejado para fechar quaisquer conexões com bancos de dados que o objeto tenha, realizar commits pendentes ou realizar tarefas de limpeza semelhantes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, the function is useful if you have very large objects which need not be saved completely.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função também é útil se você tem objetos muito grandes que não precisam ser salvos completamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Conversely, unserialize() checks for the presence of a function with the magic name __wakeup.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Da mesma forma, unserialize() verifica pela presença de uma função com o nome mágico __wakeup.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If present, this function can reconstruct any resources that object may have.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se presente, esta função pode reconstruir quaisquer recursos que o objeto tenha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The intended use of __wakeup is to reestablish any database connections that may have been lost during serialization and perform other reinitialization tasks.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>__wakeup é planejado para restabelecer conexões com bancos de dados perdidas durante a serialização e para realizar outras tarefas de reinicialização.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>References inside the constructor</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referências dentro do construtor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referências dentro do construtor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creating references within the constructor can lead to confusing results.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A criação de referências em construtores pode gerar resultados confusos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This tutorial-like section helps you to avoid problems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta seção tentará ajudá-lo e evitar essas situações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>class Foo {function Foo($name) {/ / create a reference inside the global array $globalref global $globalref; $globalref[] = $this; / / set name to passed value $this - setName($name); / / and put it out $this - echoName();} function echoName() {echo &quot;br &quot;,$this - name;} function setName($name) {$this - name = $name;}}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class Foo {function Foo($name) {/ / cria uma referencia dentro do array global $globalref global $globalref; $globalref[] = $this; / / configura o nome conforme o parametro $this - setName($name); / / e o mostra $this - echoName();} function echoName() {echo &quot;br &quot;,$this - name;} function setName($name) {$this - name = $name;}}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Let us check out if there is a difference between $bar1 which has been created using the copy = operator and $bar2 which has been created using the reference = operator...</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vamos verificar, abaixo, se há alguma diferença entre $bar1, que foi criado usando operador de cópia =, e $bar2 que foi criado usando o operador de referência =...</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$bar1 = new Foo( &apos;set in constructor&apos;); $bar1 - echoName(); $globalref[0] - echoName(); / * output: set in constructor set in constructor set in constructor * / $bar2 = new Foo(&apos;set in constructor&apos;); $bar2 - echoName(); $globalref[1] - echoName(); / * output: set in constructor set in constructor set in constructor * /</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$bar1 = new Foo( &apos;configurado no construtor&apos;); $bar1 - echoName(); $globalref[0] - echoName(); / * saida: configurado no construtor configurado no construtor configurado no construtor * / $bar2 = new Foo(&apos;configurado no construtor&apos;); $bar2 - echoName(); $globalref[1] - echoName(); / * saida: configurado no construtor configurado no construtor configurado no construtor * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Apparently there is no difference, but in fact there is a very significant one: $bar1 and $globalref[ 0] are _NOT_ referenced, they are NOT the same variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aparentemente não há nenhuma diferença, mas de fato há uma muito significativa: $bar1 e $globalref[ 0] não se referenciam, elas NÃO são a mesma variável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is because &quot;new&quot; does not return a reference by default, instead it returns a copy.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ao invés, retorna uma cópia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no performance loss (since PHP 4 and up use reference counting) returning copies instead of references.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto não causa perda de performance (desde que o PHP 4 usa a contagem de referências) retornando copias em vez de referências.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On the contrary it is most often better to simply work with copies instead of references, because creating references takes some time where creating copies virtually takes no time (unless none of them is a large array or object and one of them gets changed and the other(s) one(s) subsequently, then it would be wise to use references to change them all concurrently).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Do contrário, isso oferece melhora por simplificar o trabalho com cópias ao invés de referências, porque a criação de referências toma mais tempo enquanto a criação de cópias virtualmente não toma tempo algum (a não ser no caso de grandes arrays ou objetos, onde um deles é modificado e o(s) outro(s) também na seqüência, então é melhor usar referências para mudar todos ao mesmo tempo).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / now we will change the name. what do you expect? / / you could expect that both $bar1 and $globalref[ 0] change their names... $bar1 - setName(&apos;set from outside&apos;); / / as mentioned before this is not the case. $bar1 - echoName(); $globalref[0] - echoName(); / * output: set from outside set in constructor * / / / let us see what is different with $bar2 and $globalref[1] $bar2 - setName(&apos;set from outside&apos;); / / luckily they are not only equal, they are the same variable / / thus $bar2 - name and $globalref[1] - name are the same too $bar2 - echoName(); $globalref[1] - echoName(); / * output: set from outside set from outside * /</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que voce espera? / / Voce pode acreditar que ambos $bar1 e $globalref[ 0] mudem seus nomes... $bar1 - setName(&apos;configurado por fora&apos;); / / Como mencionado, este nao eh o caso. $bar1 - echoName(); $globalref[0] - echoName(); / * output: configurado por fora configurado no construtor * / / / Agora vamos ver a diferenca entre $bar2 e $globalref[1] $bar2 - setName(&apos;configurado por fora&apos;); / / Por sorte, eles nao sao apenas iguais, eles sao a mesma variavel / / Assim, $bar2 - name e $globalref[1] - name sao o mesmo tambem $bar2 - echoName(); $globalref[1] - echoName(); / * output: configurado por fora configurado por fora * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another final example, try to understand it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entenda-o com cuidado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>class A {function A($i) {$this - value = $i; / / try to figure out why we do not need a reference here $this - b = new B($this);} function createRef() {$this - c = new B($this);} function echoValue() {echo &quot;br&quot; ,&quot;class &quot;,get_class($this) ,&apos;: &apos;,$this - value;}} class B {function B ($a) {$this - a = $a;} function echoValue() {echo &quot;br&quot; ,&quot;class &quot;,get_class($this) ,&apos;: &apos;,$this - a - value;}} / / try to undestand why using a simple copy here would yield / / in an undesired result in the *-marked line $a = new A(10); $a - createRef(); $a - echoValue(); $a - b - echoValue(); $a - c - echoValue(); $a - value = 11; $a - echoValue(); $a - b - echoValue(); / / * $a - c - echoValue(); / * output: class A:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>class A {function A($i) {$this - value = $i; / / tente entender porque aqui nos nao precisamos de referencia $this - b = new B($this);} function createRef() {$this - c = new B($this);} function echoValue() {echo &quot;br&quot; ,&quot;classe &quot;,get_class($this) ,&apos;: &apos;,$this - value;}} class B {function B ($a) {$this - a = $a;} function echoValue() {echo &quot;br&quot; ,&quot;classe &quot;,get_class($this) ,&apos;: &apos;,$this - a - value;}} / / Tente entender porque usando uma simples copia aqui ter / / um resultado indesejavel na linha marcada com * $a = new A(10); $a - createRef(); $a - echoValue(); $a - b - echoValue(); $a - c - echoValue(); $a - value = 11; $a - echoValue(); $a - b - echoValue(); / / * $a - c - echoValue(); / * output: classe A:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>10 class B:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>10 classe B:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>10 class A:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>10 classe A:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>11 class B:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>11 classe B:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The magic functions __sleep and __wakeup</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As funções mágicas __sleep e __wakeup</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>References Explained</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referências</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Serializando objetos - objetos em sessões</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, objects will lose their class association throughout the process of serialization and unserialization.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, objetos perdem suas associações entre classes através do processo de serialização e desserialização.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resulting variable is of type object, but has no class and no methods, thus it is pretty useless (it has become just like an array with a funny syntax).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A variável resultante é do tipo objeto, mas sem classe nem métodos, algo bem sem utilidade (de fato, ele se torna apenas um array com uma sintaxe engraçada).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following information is valid for PHP 4 only.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As informações seguintes se aplicam somente ao PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>serialize() returns a string containing a byte-stream representation of any value that can be stored in PHP. unserialize() can use this string to recreate the original variable values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>serialize() retorna uma string contendo uma representação linear de qualquer valor que pode ser armazenado no PHP. unserialize() pode ser utilizado para recriar os valores da variável original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using serialize to save an object will save all variables in an object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando serialize para salvar um objeto irá preservar todas as variáveis de um objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions in an object will not be saved, only the name of the class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As funções de um objeto não serão salvas, apenas o nome da classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to be able to unserialize() an object, the class of that object needs to be defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para ser possível fazer o unserialize() de um objeto, a classe do objeto precisa estar definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is, if you have an object $a of class A on page1.php and serialize this, you &apos;ll get a string that refers to class A and contains all values of variabled contained in $a.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ou seja, se você tem um objeto $a da classe A em page1.php e a serializa, você consegue uma string que se refere a classe A e contém todos os valores de variáveis contidos em $a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to be able to unserialize this on page2.php, recreating $a of class A, the definition of class A must be present in page2.php.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você precisa desserializa-la em page2.php, recriando $a da classe A, a definição da classe A precisa estar presente na page2.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can be done for example by storing the class defintion of class A in an include file and including this file in both page1.php and page2.php.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode por ser feito, por exemplo, armazenando a definição da classe A em um arquivo separado, incluindo este arquivo e ambos os arquivos page1.php e page2.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>classa.inc: class A {var $one = 1; function show_one() {echo $this - one;}} page1.php: include(&quot;classa.inc&quot;); $a = new A; $s = serialize($a); / / store $s somewhere where page2.php can find it. $fp = fopen(&quot;store&quot;, &quot;w&quot;); fputs($fp, $s); fclose($fp); page2.php: / / this is needed for the unserialize to work properly. include(&quot;classa.inc&quot;); $s = implode(&quot;&quot;, @file(&quot;store&quot;)); $a = unserialize($s); / / now use the function show_one() of the $a object. $a - show_one();</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>classe_a.inc.php: class A {var $um = 1; function mostre_um() {echo $this - um;}} page1.php: include(&quot;classe_a.inc.php&quot;); $a = new A; $s = serialize($a); / / armazena $s em algum lugar que page2,php possa encontra-la $fp = fopen(&quot;armazenamento&quot;, &quot;w&quot;); fputs($fp, $s); fclose($fp); page2.php: / / Isto e preciso para que unserialize funcione normalmente include(&quot;classe_a.inc.php&quot;); $s = implode(&quot;&quot;, @file(&quot;armazenamento&quot;)); $a = unserialize($s); / / Agora podemos usar a funcao mostre_um() do objeto $a $a - mostre_um();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using sessions and use session_register() to register objects, these objects are serialized automatically at the end of each PHP page, and are unserialized automatically on each of the following pages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está utilizando sessões e usar session_register() para registrar objetos, esses objetos serão serializados automaticamente no final de cada script PHP, e automaticamente desserializados em cada uma das páginas seguintes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This basically means that these objects can show up on any of your pages once they become part of your session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que esse objetos podem estar em qualquer uma de suas páginas desde que elas sejam parte de sua sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is strongly recommended that you include the class definitions of all such registered objects on all of your pages, even if you do not actually use these classes on all of your pages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É extremamente recomendável que você inclua as definições de classe de todos os objetos registrados de todas as suas páginas, mesmo que você não use essas classes em todas as suas páginas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you don &apos;t and an object is being unserialized without its class definition being present, it will lose its class association and become an object of class stdClass without any functions available at all, that is, it will become quite useless.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você não o fizer e um objeto for desserializado sem sua definição de classe presente, ele perde usa associação com a classe e se torna um objeto da classe stdClass, sem qualquer funções disponíveis. o que as deixa silenciosamente sem funcionalidade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So if in the example above $a became part of a session by running session_register( &quot;a&quot;), you should include the file classa.inc on all of your pages, not only page1.php and page2.php.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, se no exemplo acima $a se tornar parte de uma sessão pela utilização de session_register( &quot;a&quot;), você precisa incluir o arquivo classe_a.inc.php em todos as suas páginas, não somente em page1.php e page2.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 11.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 11.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores Aritméticos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remember basic arithmetic from school?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lembra-se da aritmética básica da escola?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These work just like those.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estes operadores funcionam exatamente como aqueles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 11-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arithmetic Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores Aritméticos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Result</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Resultado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Addition</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Adição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sum of $a and $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Soma de $a e $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Subtraction</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Subtração</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Difference of $a and $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diferença entre $a e $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Multiplication</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Multiplicação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Product of $a and $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Produto de $a e $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Division</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Divisão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Quotient of $a and $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quociente de $a por $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Modulus</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Módulo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Remainder of $a divided by $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Resto de $a dividido por $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The division operator (&quot;/&quot;) returns a float value anytime, even if the two operands are integers (or strings that get converted to integers).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O operador de divisão (&quot;/&quot;) sempre retorna um valor com ponto flutuante, mesmo que os dois operandos sejam inteiros (ou strings que sejam convetidos para inteiros).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assignment Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Atribuição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The only array operator in PHP is the + operator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O único operador de arrays no PHP é o +.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It appends the right handed array to the left handed, whereas duplicated keys are NOT overwritten.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele acrescenta o array informado à direita no array informado à esquerda, onde chaves duplicadas NÃO são sobrescritos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = array( &quot;a &quot;= &quot;apple&quot;, &quot;b&quot; = &quot;banana&quot;); $b = array(&quot;a &quot;= &quot;pear&quot;, &quot;b&quot; = &quot;strawberry&quot;, &quot;c &quot;= &quot;cherry&quot;); $c = $a + $b; var_dump($c);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = array( &quot;a &quot;= &quot;maçã&quot;, &quot;b&quot; = &quot;banana&quot;); $b = array(&quot;a &quot;= &quot;pêra&quot;, &quot;b&quot; = &quot;framboesa&quot;, &quot;c &quot;= &quot;morango&quot;); $c = $a + $b; var_dump($c);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array( 3) {[&quot;a&quot;]= string(5) &quot;apple &quot;[&quot;b&quot;]= string(6) &quot;banana&quot; [&quot;c&quot;]= string(6) &quot;cherry &quot;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array( 3) {[&quot;a&quot;]= string(5) &quot;maçã &quot;[&quot;b&quot;]= string(6) &quot;banana&quot; [&quot;c&quot;]= string(6) &quot;morango &quot;}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>String Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de String</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Control Structures</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estruturas de Controle</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Atribuição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The basic assignment operator is &quot;=&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O operador básico de atribuição é &quot;=&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Your first inclination might be to think of this as &quot;equal to&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sua primeira inclinação deve ser a de pensar nisto como &quot;é igual&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Don &apos;t.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It really means that the the left operand gets set to the value of the expression on the rights (that is, &quot;gets set to&quot;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto quer dizer, na verdade, que o operando da esquerda recebe o valor da expressão da direita (ou seja, &quot;é configurado para&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value of an assignment expression is the value assigned.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor de uma expressão de atribuição é o valor atribuído.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is, the value of &quot;$a = 3&quot; is 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ou seja, o valor de &quot;$a = 3&quot; é 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This allows you to do some tricky things:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto permite que você faça alguns truques:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = ($b = 4) + 5; / / $a is equal to 9 now, and $b has been set to 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = ($b = 4) + 5; / / $a é igual a 9 agora e $b foi configurado como 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to the basic assignment operator, there are &quot;combined operators&quot; for all of the binary arithmetic and string operators that allow you to use a value in an expression and then set its value to the result of that expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além do operador básico de atribuição, há &quot;operadores combinados&quot; para todos os operadores binários, aritméticos e de string, que permitem a você pegar um valor de uma expressão e então usar seu próprio valor para o resultado daquela expressão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = 3; $a += 5; / / sets $a to 8, as if we had said: $a = $a + 5; $b = &quot;Hello &quot;; $b .= &quot;There !&quot;; / / sets $b to &quot;Hello There !&quot;, just like $b = $b. &quot;There !&quot;;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = 3; $a += 5; / / configura $a para 8, como se disséssemos: $a = $a + 5; $b = &quot;Bom &quot;; $b .= &quot;Dia !&quot;; / / configura $b para &quot;Bom Dia !&quot;, como em $b = $b. &quot;Dia !&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the assignment copies the original variable to the new one (assignment by value), so changes to one will not affect the other.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que a atribuição copia a variável original para a nova (atribuição por valor), assim a mudança de uma não afeta a outra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This may also have relevance if you need to copy something like a large array inside a tight loop.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode ter relevância se você precisa copiar algo como uma grande matriz dentro de um loop longo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 supports assignment by reference, using the $var = $othervar; syntax, but this is not possible in PHP 3. &apos;Assignment by reference &apos;means that both variables end up pointing at the same data, and nothing is copied anywhere.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP 4 suporta atribuições por referência, usando a sintaxe $var = $outra_var;, mas isto não é possível no PHP3. &apos;Atribuição por referência &apos;significa que ambas as variáveis acabam apontando para os mesmos dados, e nada é copiado para lugar nenhum.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To learn more about references, please read References explained.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para aprender mais sobre referências, leia Referências explicadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bitwise Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operador Bit-a-bit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operador Bit-a-bit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bitwise operators allow you to turn specific bits within an integer on or off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores bit-a-bit permitem que você acione ou desligue bits específicos dentro de um inteiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If both the left - and right-hand parameters are strings, the bitwise operator will operate on the characters in this string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se ambos os parâmetros da esquerda e da direita forem strings, esses operadores irão trabalhar nos caracteres dessa string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo 12 ^ 9; / / Outputs &apos;5 &apos;echo &quot;12 &quot;^ &quot;9&quot;; / / Outputs the Backspace character (ascii 8) / / (&apos;1&apos; (ascii 49)) ^ (&apos;9 &apos;(ascii 57)) = #8 echo &quot;hallo&quot; ^ &quot;hello&quot;; / / Outputs the ascii values #0 #4 #0 #0 #0 / / &apos;a&apos; ^ &apos;e &apos;= #4?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php echo 12 ^ 9; / / Imprime &apos;5 &apos;echo &quot;12 &quot;^ &quot;9&quot;; / / Imprime o caracter de volta (backspace - ASCII 8) / / (&apos;1&apos; (ASCII 49)) ^ (&apos;9 &apos;(ASCII 57)) = 8 echo &quot;hallo&quot; ^ &quot;hello&quot;; / / Imprime os valores ASCII 0 4 0 0 0 / / &apos;a&apos; ^ &apos;e &apos;= 4?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 11-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bitwise Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores Bit-a-bit</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>And</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bits that are set in both $a and $b are set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os bits que estão ativos tanto em $a quanto em $b são ativados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Or</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>OU</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bits that are set in either $a or $b are set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os bits que estão ativos em $a ou em $b são ativados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Xor</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XOR</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bits that are set in $a or $b but not both are set.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os bits que estão ativos em $a ou em $b, mas não em ambos, são ativados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>NÃO</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bits that are set in $a are not set, and vice versa.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os bits que estão ativos em $a não são ativados, e vice-versa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shift left</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Deslocamento à esquerda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shift the bits of $a $b steps to the left (each step means &quot;multiply by two&quot;)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desloca os bits de $a $b passos para a esquerda (cada passo significa &quot;multiplica por dois&quot;)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shift right</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Deslocamento à direita</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shift the bits of $a $b steps to the right (each step means &quot;divide by two&quot;)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desloca os bits de $a $b passos para a direita (cada passo significa &quot;divide por dois&quot;)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Comparison Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Comparação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Comparação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Comparison operators, as their name implies, allow you to compare two values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de comparação, como os seus nomes implicam, permitem que você compare dois valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 11-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Comparison Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de comparação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Equal</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Igual</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is equal to $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro (TRUE) se $a é igual a $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Identical</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Idêntico</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is equal to $b, and they are of the same type. (PHP 4 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro (TRUE) se $a é igual a $b, e eles são do mesmo tipo (somente para PHP4).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not equal</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diferente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is not equal to $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se $a não é igual a $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not identical</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não idêntico</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is not equal to $b, or they are not of the same type. (PHP 4 only)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro de $a não é igual a $b, ou eles não são do mesmo tipo (somente para o PHP4).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Less than</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Menor que</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is strictly less than $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se $a é estritamente menor que $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Greater than</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Maior que</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is strictly greater than $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se $a é estritamente maior que $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Less than or equal to</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Menor ou igual</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is less than or equal to $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se $a é menor ou igual a $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Greater than or equal to</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Maior ou igual</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is greater than or equal to $b.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se $a é maior ou igual a $b.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another conditional operator is the &quot;?:&quot; (or ternary) operator, which operates as in C and many other languages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outro operador condicional é o operador &quot;?:&quot; (ou trinário), que opera como no C e em muitas outras linguagens.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Error Control Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de controle de erro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de controle de erro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports one error control operator: the at sign (@).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta um operador de controle de erro: o sinal &apos;arroba&apos; (@).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When prepended to an expression in PHP, any error messages that might be generated by that expression will be ignored.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando ele precede uma expressão em PHP, qualquer mensagem de erro que possa ser gerada por aquela expressão será ignorada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the track_errors feature is enabled, any error message generated by the expression will be saved in the variable $php_errormsg.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o recurso track_errors estiver habilitado, qualquer mensagem de erro gerada pela expressão será gravada na variável global $php_errormsg.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This variable will be overwritten on each error, so check early if you want to use it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta variável será sobrescrita em cada erro, assim verifique-a constantemente se você quiser usá-la.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * Intentional file error * / $my_file = @file (&apos;non_existent_file&apos;) or die (&quot;Failed opening file: error was &apos;$php_errormsg&apos;&quot;); / / this works for any expression, not just functions: $value = @$cache[$key]; / / will not issue a notice if the index $key doesn&apos;t exist.?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Erro de arquivo intencional * / $my_file = @file (&apos;arquivo_nao_existente&apos;) ou die (&quot;Falha abrindo arquivo: &apos;$php_errormsg&apos;&quot;); / / Isto funciona para qualquer expressão, não apenas para funções: $value = @$cache[$key]; / / você não receberá nenhum aviso se a chave $key não existir.?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The @-operator works only on expressions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O operador @ funciona somente em expressões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple rule of thumb is: if you can take the value of something, you can prepend the @ operator to it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma regra simples para lembrar disso: se você pode pegar o valor de alguma coisa, você pode prefixar isso com o @.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, you can prepend it to variables, function and include() calls, constants, and so forth.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, você pode prefixar chamadas de variáveis, funções e include() s, constantes e afins.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot prepend it to function or class definitions, or conditional structures such as if and foreach, and so forth.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode prefixar definições de funções ou classe, estruturas condicionais como o if, foreach e assim por diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also error_reporting().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: error_reporting().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The &quot;@&quot; error-control operator prefix will not disable messages that are the result of parse errors.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O prefixo de controle de erro &quot;@&quot; não desabilita mensagens que são resultado de erros de interpretação (parse errors).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently the &quot;@&quot; error-control operator prefix will even disable error reporting for critical errors that will terminate script execution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atualmente, o operador de controle de erro &quot;@&quot; sempre desativa mensagens de erro, mesmo para erros críticos, que terminam a execução de scripts.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Among other things, this means that if you use &quot;@&quot; to suppress errors from a certain function and either it isn&apos;t available or has been mistyped, the script will die right there with no indication as to why.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além de outras coisas, isto significa que se você usar &quot;@&quot; para suprimir erros de certas funções e elas não estiverem disponíveis ou com tipos incorretos, o script vai parar exatamente aí sem nenhuma indicação da razão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Execution Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports one execution operator: backticks (``).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta um operador de execução: acentos graves (``).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that these are not single-quotes!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que não são apóstrofes!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP will attempt to execute the contents of the backticks as a shell command; the output will be returned (i.e., it won&apos;t simply be dumped to output; it can be assigned to a variable).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP tentará executar o conteúdo dos acentos graves como um comando do shell; a saída será retornada (isto é, ela não será simplesmente descarregada para a saída; ela pode ser atribuída a uma variável).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The backtick operator is disabled when safe mode is enabled or shell_exec() is disabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O operador de execução fica desabilitado quando o safe mode está ativo ou shell_exec() está desabilitado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also escapeshellcmd(), exec(), passthru(), popen(), shell_exec(), and system().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também: escapeshellcmd(), exec(), passthru(), popen(), shell_exec() e system().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Incrementing / Decrementing Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Incremento / Decremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 11.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, in the expression 1 + 5 * 3, the answer is 16 and not 18 because the multiplication (&quot;*&quot;) operator has a higher precedence than the addition (&quot;+&quot;) operator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Precedência de Operadores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following table lists the precedence of operators with the lowest-precedence operators listed first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, na expressão, 1 + 5 * 3, a resposta é 16 e não 18 porque o operador de multiplicação (&quot;*&quot;) tem prioridade de precedência que o operador de adição (&quot;+&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Operator Precedence</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A tabela seguinte mostra a precedência dos operadores, da menor precedência para a maior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>! ~ + + - - (int) (float) (string) (array) (object) @</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 11-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Although! has a higher precedence than =, PHP will still allow expressions similar to the following: if (!$a = foo()), in which case the output from foo() is put into $a.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Precedência dos operadores</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operador</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Home</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>esquerda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>não associativo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Expressions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>não associativo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Up</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>esquerda</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arithmetic Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>direita</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Incremento / Decremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports C-style pre - and post-increment and decrement operators.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta operadores de pré e pós-incremento e decremento no estilo C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 11-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Increment / decrement Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Incremento / Decremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Effect</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Efeito</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pre-increment</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pré-incremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Increments $a by one, then returns $a.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Incrementa $a em um, e então retorna $a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Post-increment</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pós-incremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns $a, then increments $a by one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna $a, e então incrementa $a em um.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pre-decrement</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pré-decremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Decrements $a by one, then returns $a.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Decrementa $a em um, e então retorna $a.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Post-decrement</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pós-decremento</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returns $a, then decrements $a by one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorna $a, e então decrementa $a em um.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here &apos;s a simple example script:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui está um script de exemplo simples:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo &quot;h3 Postincrement / h3&quot;; $a = 5; echo &quot;Should be 5: &quot;. $a+ +.&quot; br / \n&quot;; echo &quot;Should be 6: &quot;. $a.&quot; br / \n&quot;; echo &quot;h3 Preincrement / h3&quot;; $a = 5; echo &quot;Should be 6: &quot;. ++$a.&quot; br / \n&quot;; echo &quot;Should be 6: &quot;. $a.&quot; br / \n&quot;; echo &quot;h3 Postdecrement / h3&quot;; $a = 5; echo &quot;Should be 5: &quot;. $a- -.&quot; br / \n&quot;; echo &quot;Should be 4: &quot;. $a.&quot; br / \n&quot;; echo &quot;h3 Predecrement / h3&quot;; $a = 5; echo &quot;Should be 4: &quot;. --$a.&quot; br / \n&quot;; echo &quot;Should be 4: &quot;. $a.&quot; br / \n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php echo &quot;h3 Pós-incremento / h3&quot;; $a = 5; echo &quot;Deve ser 5: &quot;. $a+ +.&quot; br / \n&quot;; echo &quot;Deve ser 6: &quot;. $a.&quot; br / \n&quot;; echo &quot;h3 Pré-incremento / h3&quot;; $a = 5; echo &quot;Deve ser 6: &quot;. ++$a.&quot; br / \n&quot;; echo &quot;Deve ser 6: &quot;. $a.&quot; br / \n&quot;; echo &quot;h3 Pós-decremento / h3&quot;; $a = 5; echo &quot;Deve ser 5: &quot;. $a- -.&quot; br / \n&quot;; echo &quot;Deve ser 4: &quot;. $a.&quot; br / \n&quot;; echo &quot;h3 Pré-decremento / h3&quot;; $a = 5; echo &quot;Deve ser 4: &quot;. --$a.&quot; br / \n&quot;; echo &quot;Deve ser 4: &quot;. $a.&quot; br / \n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Logical Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores Lógicos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores Lógicos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 11-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if both $a and $b are TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro (TRUE) se tanto $a quanto $b são verdadeiros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if either $a or $b is TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se $a ou $b são verdadeiros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if either $a or $b is TRUE, but not both.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se $a ou $b são verdadeiros, mas não ambos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if $a is not TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se $a não é verdadeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE if both $a and $b are TRUE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verdadeiro se tanto $a quanto $b são verdadeiros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The reason for the two different variations of &quot;and&quot; and &quot;or &quot;operators is that they operate at different precedences. (See Operator Precedence.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A razão para as duas variantes dos operandos &quot;and&quot; e &quot;or &quot;é que eles operam com precedências diferentes. (Veja Precedência de Operadores.)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de String</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two string operators.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há dois operadores de string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first is the concatenation operator (&apos;.&apos;), which returns the concatenation of its right and left arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro é o operador de concatenação (&apos;.&apos;), que retorna a concatenação dos seus argumentos direito e esquerdo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second is the concatenating assignment operator (&apos;.=&apos;), which appends the argument on the right side to the argument on the left side.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo é o operador de atribuição de concatenação (&apos;.=&apos;), que acrescenta o argumento do lado direito no argumento do lado esquerdo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please read Assignment Operators for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja em Operadores de Atribuição para mais informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$a = &quot;Hello&quot;; $b = $a. &quot;World !&quot;; / / now $b contains &quot;Hello World! &quot;$a = &quot;Hello&quot;; $a .= &quot;World !&quot;; / / now $a contains &quot;Hello World! &quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = &quot;Olá&quot;; $b = $a. &quot;mundo !&quot;; / / agora $b contém &quot;Olá mundo! &quot;$a = &quot;Olá&quot;; $a .= &quot;mundo !&quot;; / / agora $a contém &quot;Olá mundo! &quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array Operators</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Operadores de Arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mixed indicates that a parameter may accept multiple (but not necesseraly all) types.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mixed</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>gettype() for example will accept all PHP types, while str_replace() will accept strings and arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>mixed indica que um parâmetro pode aceitar vários (mas não necessariamente todos) os tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>number indicates that a parameter can be either integer or float.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>gettype(), por exemplo, aceita todos os tipos do PHP, enquanto str_replace() somente aceita strings e arrays.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some functions like call_user_function() or usort() accept user defined callback functions as a parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>number indica que um parâmetro pode ser tanto um integer ou float.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-11.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-11.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Callback function examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de funções callback</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / simple callback example function foobar() {echo &quot;hello world !&quot;;} call_user_function(&quot;foobar&quot;); / / method callback examples class foo {function bar() {echo &quot;hello world !&quot;;}} $foo = new foo; call_user_function(array($foo, &quot;bar&quot;)); / / object method call call_user_function(array(&quot;foo&quot;, &quot;bar&quot;)); / / static class method call?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Exemplo simples de callback function foobar() {echo &quot;Olá mundo !&quot;;} call_user_function(&quot;foobar&quot;); / / Exemplo de métodos callback class foo {function bar() {echo &quot;Olá mundo !&quot;;}} $foo = new foo; call_user_function(array($foo, &quot;bar&quot;)); / / chamada do método do objeto call_user_function(array(&quot;foo&quot;, &quot;bar&quot;)); / / chamada do método estático da classe?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Type Juggling</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Manipulação de tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 15.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 15.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>References Explained</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que as referências não são</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As said before, references aren &apos;t pointers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como dito anteriormente, referências não são ponteiros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That means, the following construct won &apos;t do what you expect:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que o construtor seguinte não fará o que você espera:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What happens is that $var in foo will be bound with $bar in caller, but then it will be re-bound with $GLOBALS[ &quot;baz&quot;].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Acontece que $var na função foo estará apontada para $bar na chamada, mas ela será re-apontada para $GLOBALS[ &quot;baz&quot;].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There&apos; s no way to bind $bar in the calling scope to something else using the reference mechanism, since $bar is not available in the function foo (it is represented by $var, but $var has only variable contents and not name-to-value binding in the calling symbol table).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não existe maneira de apontar $bar no escopo chamador para qualquer outra coisa utilizando o mecanismo de referências, desde que $bar não está disponível na função foo (ela é representa por $var, mas $var somente tem o conteúdo da variável e não um relacionamento nome para valor na tabela simbólica).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What References Do</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O as referências fazem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Passing by Reference</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Passagem por referência</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>References in PHP are a means to access the same variable content by different names.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referências</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They are not like C pointers, they are symbol table aliases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referências, em PHP, significa acessar o mesmo conteúdo de variável através de vários nomes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that in PHP, variable name and variable content are different, so the same content can have different names.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que no PHP nomes de variáveis e conteúdo de variável são tratados diferentemente, então um mesmo conteúdo pode ter nomes diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The most close analogy is with Unix filenames and files - variable names are directory entries, while variable contents is the file itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A analogia mais próxima é a dos arquivos e seus nomes em sistemas UNIX: nomes de variáveis são o caminho completo dos arquivos, enquanto o conteúdo da variável são os dados desse arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>References can be thought of as hardlinking in Unix filesystem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, referências pode ser tomadas como os links físicos dentro do sistema de arquivos UNIX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Passagem por referência</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can pass variable to function by reference, so that function could modify its arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode passar variáveis para funções por referência, então a função poderá modificar seus argumentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax is as follows:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe é a seguinte:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function foo ($var) {$var++;} $a=5; foo ($a); / / $a is 6 here</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function foo ($var) {$var++;} $a=5; foo ($a); / / $a é 6 aqui</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Following things can be passed by reference:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As coisas a seguir podem ser passadas por referência:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable, i.e. foo( $a)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo: foo( $a)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>New statement, i.e. foo( new foobar())</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo foo( new foobar())</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reference, returned from a function, i.e.:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any other expression should not be passed by reference, as the result is undefined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma outra expressão poderá ser passada por referência, com resultados indefinidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, the following examples of passing by reference are invalid:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, o exemplo seguinte de passagem por referência é inválido:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function bar() / / Note the missing {$a = 5; return $a;} foo(bar()); foo($a = 5) / / Expression, not variable foo(5) / / Constant, not variable</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function bar() / / Note a falta do {$a = 5; return $a;} foo(bar()); foo($a = 5) / / Expressão, não é variável foo(5) / / Constante, não é variável</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What References Are Not</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que as referências não são</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returning References</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retornando referências</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retornando referências</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Returning by-reference is useful when you want to use a function to find which variable a reference should be bound to.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retorno por referência é útil quando você precisa utilizar uma função para localizar variável cuja referência precisa ser obtida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When returning references, use this syntax:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para retornar referências, utilize esta sintaxe:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>function find_var ($param) {...code... return $found_var;} $foo = find_var ($bar); $foo - x = 2;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>function procura_var ($param) {...codigo... return $variavel_encontrada;} $foo = procura_var ($bar); $foo - x = 2;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike parameter passing, here you have to use in both places - to indicate that you return by-reference, not a copy as usual, and to indicate that reference binding, rather than usual assignment, should be done for $foo.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diferentemente da passagem de parâmetros por referência, aqui você precisa utilizar em ambos os lugares -- - primeiro para indicar o retorno por referência (e não a cópia), e depois para indicar a ligação da referência (em vez da assimilação convencional) que precisa ser explícita.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unsetting References</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Destruindo referências</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many syntax constructs in PHP are implemented via referencing mechanisms, so everything told above about reference binding also apply to these constructs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vários construtores sintáticos do PHP são implementados através de mecanismos de referência, assim, tudo o explicado até aqui sobre referências também se aplica a esses construtores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some constructs, like passing and returning by-reference, are mentioned above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alguns desses construtores, como a passagem e o retorno de referências foram mencionados acima.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other constructs that use references are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outros construtores que também utilizam referências são:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you declare variable as global $var you are in fact creating reference to a global variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você declara uma variável com global, você está de fato criando um referência para a variável global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That means, this is the same as:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que isto é o mesmo que:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That means, for example, that unsetting $var won &apos;t unset global variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$this</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In an object method, $this is always reference to the caller object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Num método de objeto, $this sempre referencia o instância atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Destruindo referências</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When you unset the reference, you just break the binding between variable name and variable content.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você quebra uma referência, ela apenas pára de fazer o apontamento entre o nome da variável e o conteúdo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This does not mean that variable content will be destroyed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas isto não significa que o conteúdo da variável será destruído.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Again, it might be useful to think about this as analogous to Unix unlink call.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Novamente, é mais fácil pensar em analogia ao comando UNIX unlink.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O as referências fazem</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP references allow you to make two variables to refer to the same content.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referências PHP permitem fazer duas variáveis se referirem ao mesmo conteúdo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Meaning, when you do:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ou seja:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The same syntax can be used with functions, that return references, and with new operator (in PHP 4.0.4 and later):</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A mesma sintaxe pode ser utilizada com funções, que retornem referências, e com o operador new (a partir do PHP 4.0.4):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not using the operator causes a copy of the object to be made.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A não utilização do operador causará a cópia do objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use $this in the class it will operate on the current instance of the class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você utiliza $this em classes, ele operará na instância atual do objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The assignment without will copy the instance (i.e. the object) and $this will operate on the copy, which is not always what is desired.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A assimilação sem irá copiar a instância (o objeto em si) e $this irá operar na cópia, podendo não ser esse procedimento sempre desejável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Usually you want to have a single instance to work with, due to performance and memory consumption issues.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Normalmente você precisará trabalhar com uma instância única, seja por motivos de performance ou de consumo de memória.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>While you can use the @ operator to mute any errors in the constructor when using it as @new, this does not work when using the new While you can use the @ operator to mute any errors in the constructor when using it as @new, this does not work when using the new statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode utilizar o operador @ para esconder quaisquer erros em construtores na forma @new, mas isto não funciona quando utilizada a instrução new.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a limitation of the Zend Engine and will therefore result in a parser error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma limitação da Zend Engine e irá gerar um erro de interpretação (parser error).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The second thing references do is to pass variables by-reference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A segunda coisa que referências permitem é passar variáveis por referência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is done by making a local variable in a function and a variable in the calling scope reference to the same content.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é feito marcando uma variável local de uma função e a variável do escopo chamador como referências ao mesmo conteúdo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The third thing reference can do is return by reference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em terceiro lugar, referências permitem também retorno por referência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array in PHP is actually an ordered map.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A map is a type that maps values to keys.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um array no PHP é atualmente um mapa ordenado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because you can have another PHP-array as a value, you can also quite easily simulate trees.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este tipo é otimizado de várias maneiras, então você pode usá-lo como um array real, ou uma lista (vetor), hashtable (que é uma implementação de mapa), dicionário, coleção, pilha, fila e provavelmente mais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information we refer you to external literature about this broad topic.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A explicação dessas estruturas estão além do escopo desse manual, mas você pode encontrar exemplos para cada uma dessas estruturas a seguir.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An array can be created by the array() An array can be created by the array() language-construct.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para mais informações sobre estruturas, refira-se a literatura externa sobre esses tópicos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It takes a certain number of comma-separated key = value pairs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array( [key =] value,...) / / key is either string or nonnegative integer / / value can be anything</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Especificando com array()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $arr = array( &quot;foo &quot;= &quot;bar&quot;, 12 = true); echo $arr[&quot;foo&quot;]; / / bar echo $arr[12]; / / 1?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um array pode ser criado com o construtor de linguagem array().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A key is either an integer or a string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele pega um certo número de pares separados por vírgula chave = valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are no different indexed and associative array types in PHP, there is only one array type, which can both contain integer and string indices.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a chave é uma representação padrão de um inteiro, ele será interpretado assim (por exemplo, &quot;8 &quot;será interpretado como 8, enquanto &quot;08&quot; será interpretado como &quot;08 &quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A value can be of any PHP type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor pode ser qualquer coisa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $arr = array( &quot;somearray &quot;= array(6 = 5, 13 = 9, &quot;a&quot; = 42)); echo $arr[&quot;somearray&quot;][6]; / / 5 echo $arr[&quot;somearray&quot;][13]; / / 9 echo $arr[&quot;somearray&quot;][&quot;a&quot;]; / / 42?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se omitir a chave, o maior índice inteiro é obtido, e a nova chave será esse máximo + 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you omit a key, the maximum of the integer-indices is taken, and the new key will be that maximum + 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como inteiros podem ser negativos, isto também é verdadeiro para índices negativos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As integers can be negative, this is also true for negative indices.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sendo, por exemplo, o maior índice -6, resultará em um novo índice -5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Having e.g. the highest index being -6 will result in -5 being the new key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum índice inteiro existir ainda, a chave será 0 (zero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you specify a key that already has a value assigned to it, that value will be overwritten.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você especifica uma chave que já possui um valor assimilada a ela, então o valor é sobrescrito.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / This array is the same as... array( 5 = 43, 32, 56, &quot;b &quot;= 12); / / ...this array array(5 = 43, 6 = 32, 7 = 56, &quot;b&quot; = 12);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizar true como chave será interpretado como inteiro 1 Utilizar true como chave será interpretado como inteiro 1 na chave.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using TRUE as a key will evalute to integer 1 Using TRUE as a key will evalute to integer 1 as key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando false como chave será avaliado como o inteiro 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using FALSE as a key will evalute to integer 0 as key.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usar NULL como chave é interpretado como uma string vazia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using an emptry string as key will create (or overwrite) a key with an empty string and its value, it is not the same as using empty brackets.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usar uma string vazia como chave irá criar (ou sobrescerver) uma chave com uma string vazia e seu valor, e isto não é o mesmo que usar colchetes vazios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot use arrays or objects as keys.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode usar arrays ou objetos como chaves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Doing so will result in a warning:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fazendo isso resultará em um alerta:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also modify an existing array, by explicitly setting values in it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>array( [chave =] valor,...) / / chave pode ser string ou integer não negativo / / valor pode ser qualquer coisa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is done by assigning values to the array while specifying the key in brackets.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Criando / modificando com a sintaxe de colchetes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also omit the key, add an empty pair of brackets (&quot;[]&quot;) to the variable-name in that case.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode também modificar um array existente, explicitando assimilando valores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$arr[ key] = value; $arr[] = value; / / key is either string or nonnegative integer / / value can be anything</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é feito apenas assimilando valores para o array enquanto especificando a chave em colchetes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $arr = array( 5 = 1, 12 = 2); $arr[] = 56; / / This is the same as $arr[13] = 56; / / at this point of the script $arr[&quot;x&quot;] = 42; / / This adds a new element to / / the array with key &quot;x &quot;unset($arr[5]); / / This removes the element from the array unset($arr); / / This deletes the whole array?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$arr[ chave] = valor; $arr[] = valor; / / chave tanto um string ou inteiro não negativo / / valor pode ser qualquer coisa</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are quite some useful function for working with arrays, see the array functions section.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções úteis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The unset() function allows unsetting keys of an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há uma série de funções muito úteis para trabalhar com arrays, veja a seção sobre arrays.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Be aware that the array will NOT be reindexed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you only use &quot;usual integer indices&quot; (starting from zero, increasing by one), you can achive the reindex effect by using array_values().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esteja avisado que o array NÃO vai ser reindexado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = array( 1 = &apos;one&apos;, 2 = &apos;two&apos;, 3 = &apos;three&apos;); unset($a[2]); / * will produce an array that would have been defined as $a = array(1 = &apos;one&apos;, 3 = &apos;three&apos;); and NOT $a = array(1 = &apos;one&apos;, 2 = &apos;three&apos;); * / $b = array_values($a); / / Now b is array(1 = &apos;one&apos;, 2 = &apos;three&apos;)?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = array( 1 = &apos;um&apos;, 2 = &apos;dois&apos;, 3 = &apos;três &apos;); unset ($a[2]); / * irá produzir um array que pode ser definido como $a = array (1= &apos;um&apos;, 3= &apos;três&apos;); e NÃO $a = array (1 = &apos;um&apos;, 2 = &apos;três&apos;); * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The foreach control structure exists specifically for arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>foreach foreach existe especificamente para lidar com arrays.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It provides an easy way to traverse an array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele provém uma maneira fácil de percorrer qualquer array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should always use quotes around an associative array index.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array: faça e não faça</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, use $foo[ &apos;bar&apos;] and not $foo[bar].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Porque $foo[ bar] está errado?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You might have seen the following syntax in old scripts:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você sempre deve usar delimitadores em volta um índice de um array associativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo[ bar] = &apos;enemy&apos;; echo $foo[bar]; / / etc?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, utilizar $foo[ &apos;bar&apos;] e não $foo[bar].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More examples to demonstrate this fact:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas porque $foo[ bar] está errado?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Let&apos; s show all errors error_reporting(E_ALL); $arr = array(&apos;fruit &apos;= &apos;apple&apos;, &apos;veggie&apos; = &apos;carrot&apos;); / / Correct print $arr[&apos;fruit&apos;]; / / apple print $arr[&apos;veggie&apos;]; / / carrot / / Incorrect.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$foo[ bar] = &apos;inimigo&apos;; echo $foo[bar]; / / etc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This works but also throws a PHP error of / / level E_NOTICE because of an undefined constant named fruit / / / / Notice:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como explicado na seção sintaxe, a chave precisa estar entre colchetes (&apos;[&apos; e &apos;]&apos;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use of undefined constant fruit - assumed &apos;fruit&apos; in... print $arr[fruit]; / / apple / / Let&apos;s define a constant to demonstrate what&apos;s going on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que você pode escrever coisas como isso:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Constants are not / / looked for within strings so no E_NOTICE error here print &quot;Hello $arr[fruit]&quot;; / / Hello apple / / With one exception, braces surrounding arrays within strings / / allows constants to be looked for print &quot;Hello {$arr[fruit]}&quot;; / / Hello carrot print &quot;Hello {$arr[&apos;fruit&apos;]}&quot;; / / Hello apple / / This will not work, results in a parse error such as: / / Parse error: parse error, expecting T_STRING &apos;or T_VARIABLE&apos; or T_NUM_STRING &apos;/ / This of course applies to using autoglobals in strings as well print &quot;Hello $arr[&apos;fruit&apos;]&quot;; print &quot;Hello $_GET[&apos;foo&apos;]&quot;; / / Concatenation is another option print &quot;Hello&quot;. $arr[&apos;fruit&apos;]; / / Hello apple?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo $arr[ foo(true)];</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By default, error_reporting is turned down to not show them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$error_descriptions[ E_ERROR] = &quot;Um erro fatal ocorreu&quot;; $error_descriptions[E_WARNING] = &quot;O PHP emitiu um alarme&quot;; $error_descriptions[E_NOTICE] = &quot;Apenas um aviso informal&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That means that you can write things like this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$error_descriptions[ 1] = &quot;Um erro fatal ocorreu&quot;; $error_descriptions[2] = &quot;O PHP emitiu um alarme&quot;; $error_descriptions[8] = &quot;Apenas um aviso informal&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo $arr[ somefunc($bar)];?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então, como é possível que $foo[ bar] funcione?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $error_descriptions[ E_ERROR] = &quot;A fatal error has occured&quot;; $error_descriptions[E_WARNING] = &quot;PHP issued a warning&quot;; $error_descriptions[E_NOTICE] = &quot;This is just an informal notice&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funciona porque bar, na sintaxe onde é utilizada é esperada como uma expressão constante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As we already explained in the above examples, $foo[ bar] still works but is wrong.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP, hoje, assume que você quer bar literalmente, como a string &quot;bar&quot;, mas que você esqueceu de escrever os delimitadores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It works, because bar is due to its syntax expected to be a constant expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então, porque isso é tão mal?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP now assumes that you meant bar literally, as the string &quot;bar&quot;, but that you forgot to write the quotes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se em algum ponto do futuro, o time do PHP quiser acrescentar outra constante ou palavra chave, você terá problemas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, you already cannot use the words empty and default this way, since they are special reserved keywords.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, se você já não pode utilizar as palavras empty e default dessa maneira, desde que elas são palavras reservadas especiais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the above examples for details on why as well as the section on variable parsing in strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando você liga error_reporting em E_ALL, você irá ver as notícias que o PHP gera quando um índice é utilizado sem ser definido (coloque a linha error_reporting(E_ALL); em seu script).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For any of the types: integer, float, string, boolean and resource, if you convert a value to an array, you get an array with one element (with index 0), which is the scalar value you started with.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com string s delimitadas por aspas, uma outra sintaxe é válida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you convert an object If you convert an object to an array, you get the properties (member variables) of that object as the array&apos;s elements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you convert a NULL value to an array, you get an empty array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tipo array do PHP é muito versátil, por isso temos aqui alguns exemplos para mostrar todo o poder dos arrays.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / this $a = array( &apos;color &apos;= &apos;red&apos;, &apos;taste&apos; = &apos;sweet&apos;, &apos;shape &apos;= &apos;round&apos;, &apos;name&apos; = &apos;apple&apos;, 4 / / key will be 0); / / is completely equivalent with $a[&apos;color&apos;] = &apos;red&apos;; $a[&apos;taste&apos;] = &apos;sweet&apos;; $a[&apos;shape&apos;] = &apos;round&apos;; $a[&apos;name&apos;] = &apos;apple&apos;; $a[] = 4; / / key will be 0 $b[] = &apos;a&apos;; $b[] = &apos;b&apos;; $b[] = &apos;c&apos;; / / will result in the array array(0 = &apos;a &apos;, 1 = &apos;b&apos;, 2 = &apos;c&apos;), / / or simply array(&apos;a&apos;, &apos;b&apos;, &apos;c&apos;)?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / isto $a = array( &apos;color &apos;= &apos;vermelha&apos;, &apos;taste &apos;= &apos;doce&apos;, &apos;shape &apos;= &apos;redonda&apos;, &apos;name &apos;= &apos;maçã&apos;, 4 / / a chave será 0); / / isto é equivalente a acima $a[&apos;cor&apos;] = &apos;vermelha&apos;; $a[&apos;sabor&apos;] = &apos;doce&apos;; $a[&apos;formato&apos;] = &apos;redonda&apos;; $a[&apos;nome&apos;] = &apos;maçã&apos;; $a[] = 4; / / a chave será 0 $b[] = &apos;a&apos;; $b[] = &apos;b&apos;; $b[] = &apos;c&apos;; / / o mesmo de array (0 = &apos;a &apos;, 1 = &apos;b&apos;, 2 = &apos;c &apos;), / / ou simplesmente array(&apos;a&apos;, &apos;b&apos;, &apos;c&apos;)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using array()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando array()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Array as (property -)map $map = array (&apos;version &apos;= 4, &apos;OS&apos; = &apos;Linux&apos;, &apos;lang &apos;= &apos;english&apos;, &apos;short_tags&apos; = true); / / strictly numerical keys $array = array (7, 8, 0, 156, -10); / / this is the same as array(0 = 7, 1 = 8,...) $switching = array (10, / / key = 0 5 = 6, 3 = 7, &apos;a &apos;= 4, 11, / / key = 6 (maximum of integer-indices was 5) &apos;8&apos; = 2, / / key = 8 (integer!) &apos;02 &apos;= 77, / / key = &apos;02&apos; 0 = 12 / / the value 10 will be overwritten by 12); / / empty array $empty = array();?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / Array como (propriedade -)mapa $map = array (&apos;versão &apos;= 4, &apos;OS&apos; = &apos;Linux &apos;, &apos;lang&apos; = &apos;inglês &apos;, &apos;short_tags&apos; = true); / / apenas chaves numéricas $array = array (7, 8, 0, 156, -10); / / que é o mesmo que array (0 = 7, 1 = 8,...) $switching = array (10 / / chave = 0, 5 = 6, 3 = 7, &apos;a &apos;= 4, 11 / / chave = 6 (o índice máximo era 5), &apos;8&apos; = 2 / / chave = 8 (inteiro!), &apos;02 &apos;= 77 / / chave = &apos;02&apos;, 0 = 12 / / o valor 10 será sobrescrito por 12); / / array vazio $empty = array();</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Collection</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Coleção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $colors = array( &apos;red&apos;, &apos;blue&apos;, &apos;green&apos;, &apos;yellow&apos;); foreach ($colors as $color) {echo &quot;Do you like $color?\n&quot;;} / * output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$cores = array( &apos;vermelho&apos; ,&apos;azul&apos; ,&apos;verde&apos; ,&apos;amarelo&apos;); foreach ($cores as $cor) {echo &quot;Você gosta de $cor?\n&quot;;} / * saida:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do you like red?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você gosta de vermelho?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do you like blue?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você gosta de azul?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do you like green?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você gosta de verde?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do you like yellow? * /?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você gosta de amarelo? * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that it is currently not possible to change the values of the array directly in such a loop.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que atualmente não se pode mudar os valores de um array diretamente dentro de um loop.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A workaround is the following:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Superar essa limitação é possível da seguinte forma:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php foreach ($colors as $key = $color) {/ / won&apos;t work: / /$color = strtoupper($color); / / works: $colors[$key] = strtoupper($color);} print_r($colors); / * output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>foreach ($cores as $key = $cor) {/ / não funciona: / /$cor = strtoupper($cor); / /funciona: $cores[$key] = strtoupper($cor);} print_r($cores); / * saida:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([0] = RED [1] = BLUE [2] = GREEN [3] = YELLOW) * /?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([0] = VERMELHO [1] = AZUL [2] = VERDE [3] = AMARELO) * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example creates a one-based array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este exemplo cria um array na base 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One-based index</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array baseado em 1</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $firstquarter = array( 1 = &apos;January&apos;, &apos;February&apos;, &apos;March&apos;); print_r($firstquarter); / * output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$primeiroquarto = array( 1 = &apos;Janeiro&apos;, &apos;Fevereiro&apos;, &apos;Março&apos;); print_r($primeiroquarto); / * saida:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array ([1] = &apos;January &apos;[2] = &apos;February&apos; [3] = &apos;March &apos;) * /</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array ([1] = &apos;Janeiro &apos;[2] = &apos;Fevereiro&apos; [3] = &apos;Março &apos;) * /</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Filling an array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Preenchendo um array real</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / fill an array with all items from a directory $handle = opendir( &apos;.&apos;); while ($file = readdir($handle)) {$files[] = $file;} closedir($handle);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>/ / preenchendo um array com todos os itens de um diretório $handle = opendir( &apos;.&apos;); while ($file = readdir($handle)) {$files[] = $file;} closedir($handle);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arrays are ordered.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arrays são ordenados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the array functions section for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode mudar sua ordem utilizando vários funções de ordenação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can count the number of items in an array using the count() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja as funções de arrays para mais informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-9.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ordenando arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php sort( $files); print_r($files);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sort( $files); print_r($files);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because the value of an array can be everything, it can also be another array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Porque o valor de um array pode ser qualquer coisa, isto pode ser outro array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode criar arrays recursivos e multidimensionais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Recursive and multi-dimensional arrays</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You should be aware, that array assignment always involves value copying.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arrays recursivos e multidimensionais</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $arr1 = array( 2, 3); $arr2 = $arr1; $arr2[] = 4; / / $arr2 is changed, / / $arr1 is still array(2,3) $arr3 = $arr1; $arr3[] = 4; / / now $arr1 and $arr3 are the same?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$fruits = array (&quot;frutas &quot;= array (&quot;a&quot; = &quot;laranja &quot;, &quot;b&quot; = &quot;banana &quot;, &quot;c&quot; = &quot;maçã &quot;), &quot;numeros&quot; = array (1, 2, 3, 4, 5, 6), &quot;buracos &quot;= array (&quot;primeiro&quot;, 5 = &quot;segundo &quot;, &quot;terceiro&quot;));</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Objects</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the easiest type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Booleanos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A boolean A boolean expresses a truth value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Umbooleano expressa um valor de verdade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It can be either TRUE or FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ele pode ser TRUE ou FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The boolean type was introduced in PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tipo booleano foi introduzido no PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To specify a boolean literal, use either the keyword TRUE or FALSE.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para especificar um literal booleano, use as palavras chave TRUE ou FALSE.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Both are case-insensitive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ambas são insensitivas ao caso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = True; / / assign the value TRUE to $foo?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$foo = True; / / assimila o valor TRUE para $foo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Usually you use some kind of operator which returns a boolean value, and then pass it on to a control structure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usualmente você pode utilizar algum tipo de operador que retorne um valor booleano, e passá-lo para uma estrutura de controle.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / == is an operator which test / / equality and returns a boolean if ($action == &quot;show_version&quot;) {echo &quot;The version is 1.23&quot;;} / / this is not necessary... if ($show_separators == TRUE) {echo &quot;hr \n&quot;;} / / ...because you can simply type if ($show_separators) {echo&quot; hr \n&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Convertendo para booleano</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To explicitly convert a value to boolean, use either the (bool) or the (boolean) cast.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para converter explicitamente um valor para booleano, utilize-se dos modificadores (bool) ou (boolean).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also Type Juggling.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, na maioria dos casos, você não precisa utilizar o modificador, desde que qualquer valor será convertido automaticamente se um operador, função ou estrutura de controle requerer um argumento booleano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When converting to boolean, the following values are considered FALSE:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também Manipulação de tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>the integer 0 (zero)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando convertendo para booleano, os seguintes valores são considerados FALSE:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>the float 0.0 (zero)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>o booleano FALSE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>the empty string, and the string &quot;0&quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>o inteiro 0 (zero)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>an array with zero elements</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>o ponto flutuante 0.0 (zero)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>an object with zero member variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>uma string vazia e a string &quot;0&quot;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>the special type NULL (including unset variables)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>um array sem elementos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>um objeto sem elementos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>-1 is considered TRUE, like any other non-zero (whether negative or positive) number!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>o tipo especial NULL (incluindo variáveis não definidas)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo gettype( (bool) &quot;&quot;); / / bool(false) echo gettype((bool) 1); / / bool(true) echo gettype((bool) -2); / / bool(true) echo gettype((bool) &quot;foo&quot;); / / bool(true) echo gettype((bool) 2.3e5); / / bool(true) echo gettype((bool) array(12)); / / bool(true) echo gettype((bool) array()); / / bool(false)?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>-1 é considerado TRUE, como qualquer valor não zero (negativos ou positivos)!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Integers</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Inteiros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1.234; $b = 1.2e3; $c = 7E-10;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Números de ponto flutuante (AKA &quot;floats&quot;, &quot;doubles &quot;ou &quot;números reais&quot;) podem ser especificados utilizando qualquer uma das sintaxes seguintes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LNUM [0-9] + DNUM ([0-9]*[\ .]{LNUM}) _BAR_ ({LNUM}[\ .][0-9]*) EXPONENT_DNUM (({LNUM} _BAR_ {DNUM}) [eE][+ -]? {LNUM})</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = 1.234; $a = 1.2e3; $a = 7E-10;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Floating point precision</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Precisão de números de ponto flutuante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is quite usual that simple decimal fractions like 0.1 or 0.7 cannot be converted into their internal binary counterparts without a little loss of precision.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É sabido que frações simples como 0.1 ou 0.7 não podem ser convertidos em sua representação binária interna sem uma pequena perda de precisão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can lead to confusing results: for example, floor( (0.1+0.7)*10) will usually return 7 instead of the expected 8 as the result of the internal representation really being something like 7.9999999999....</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode causar erros confusos: por exemplo, floor( (0.1+0.7)*10) irá retornar 7 em vez do esperado 8, como resultado da representação interna realmente ser algo como 7.9999999999....</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, 1 / 3 in decimal form becomes 0.3333333....</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto está relacionado ao fato de que é impossível expressar, exatamente, algumas frações em notação decimal com um número finito de dígitos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So never trust floating number results to the last digit and never compare floating point numbers for equality.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, 1 / 3 na forma decimal se torna 0.3333333....</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For information on when and how strings are converted to floats, see the section titled String conversion to numbers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então, nunca confie em resultados com números de ponto flutuante até a última casa e nunca compare números de ponto flutuante em igualdades.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Converting to integer section for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você realmente precisar de alta precisão, você pode utilizar as funções matemáticas de precisão arbitrária ou as funções relacionadas ao gmp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP supports eight primitive types.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Four scalar types:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>integer</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>floating-point number (float)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta os oitos tipos primitivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>string</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>São quatros tipos básicos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>booleano</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>object</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>inteiro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>número com ponto flutuante (float)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>callback</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>objeto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you simply want a human-readable representation of the type for debugging, use gettype().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tipo da variável geralmente não é configurado pelo programador: isto é decidido em tempo de execução pelo PHP, dependendo do contexto no qual a variável é usada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quiser checar o tipo e valor de uma certa expressão, utilize var_dump().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $bool = TRUE; / / a boolean $str = &quot;foo&quot;; / / a string $int = 12; / / an integer echo gettype($bool); / / prints out &quot;boolean &quot;echo gettype($str); / / prints out &quot;string&quot; / / If this is an integer, increment it by four if (is_int($int)) {$int += 4;} / / If $bool is a string, print it out / / (does not print out anything) if (is_string($bool)) {echo &quot;String: $bool&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para verificar por certos tipos, não use gettype(), mas sim as funções is_ type.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to force a variable to be converted to a certain type, you may either cast the variable or use the settype() function on it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quiser forçar a conversão de uma variável para um certo tipo, você pode moldar (casting) a variável ou usar a função settype() nela.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that a variable may be evaluated with different values in certain situations, depending on what type it is at the time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que uma variável pode se comportar de maneiras diferentes em certas situações, dependendo de qual tipo ela é no momento.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information, see the section on Type Juggling.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para mais informações, veja a seção Manipulação de tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Booleans</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Booleanos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An integer is a number of the set Z = {..., -2, -1, 0, 1, 2,...}.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um inteiro é um número do conjunto Z = {..., -2, -1, 0, 1, 2,...}.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arbitrary length integers and Floating point numbers</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Inteiros de tamanho arbitrário e Números de ponto flutuante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Integers can be specified in decimal (10-based), hexadecimal (16-based) or octal (8-based) notation, optionally preceded by a sign (- or +).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Inteiros podem ser especificados em notação decimal (base 10), hexadecimal (base 16) ou octal (base 8), opcionalmente precedido de sinal (- ou +).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use the octal notation, you must precede the number with a 0 (zero), to use hexadecimal notation precede the number with 0x.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para utilizar a notação hexadecimal, preceda número com 0x.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Integer literals</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Literais inteiras</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1234; # decimal number $a = -123; # a negative number $a = 0123; # octal number (equivalent to 83 decimal) $a = 0x1A; # hexadecimal number (equivalent to 26 decimal)?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = 1234; # número decimal $a = -123; # um número negativo $a = 0123; # número octal (equivalente a 83 em decimal) $a = 0x1A; # número hexadecimal (equivalente a 26 em decimal)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php decimal: [1-9][0-9]* _BAR_ 0 hexadecimal:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Overflow de inteiros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>0[ 0-7] + integer: [+ -]?decimal _BAR_ [+ -]?hexadecimal _BAR_ [+ - ]?octal?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você especifica um número além dos limites do tipo inteiro, ele será interpretado como um ponto flutuante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you specify a number beyond the bounds of the integer type, it will be interpreted as a float If you specify a number beyond the bounds of the integer type, it will be interpreted as a float instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, se você realizar uma operação que resulte em um número além dos limites do tipo inteiro, um ponto flutuante será retornado também.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $large_number = 2147483647; var_dump($large_number); / / output: int(2147483647) $large_number = 2147483648; var_dump($large_number); / / output: float(2147483648) / / this goes also for hexadecimal specified integers: var_dump (0x80000000); / / output: float(2147483648) $million = 1000000; $large_number = 50000 * $million; var_dump($large_number); / / output: float(50000000000)?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$numero_grande = 2147483647; var_dump($numero_grande); / / saida: int(2147483647) $numero_grande = 2147483648; var_dump($numero_grande); / / saida: float(2147483648) / / isto também é permitido para especificação de números hexadecimais: var_dump (0x80000000); / / saida: float(2147483648) $milhao = 1000000; $numero_grande = 50000 * $milhao; var_dump($numero_grande); / / saida: float(50000000000)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unfortunately, there was a bug in PHP so that this does not always work correctly when there are negative numbers involved.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Infelizmente, há um bug no PHP que faz que ele nem sempre trabalhe corretamente quando há números negativos envolvidos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example: when you do -50000 * $million, the result will be -429496728.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, quando você faz -50000 * $milhao, o resultado será -429496728.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, when both operands are positive there is no problem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, quando ambos os operadores são positivos, isso não ocorre.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is solved in PHP 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto foi resolvido no PHP 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no integer division operator in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há operador de divisão inteira no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 / 2 yields the float 0.5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>1 / 2 retorna o ponto flutuante 0.5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can cast the value to an integer to always round it downwards, or you can use the round() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Convertendo para inteiro</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php var_dump( 25 / 7); / / float(3.5714285714286) var_dump((int) (25 / 7)); / / int(3) var_dump(round(25 / 7)); / / float(4)?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para converter explicitamente um valor para inteiro, utilize-se dos modificadores (int) ou (integer).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, in most cases you do not need to use the cast, since a value will be automatically converted if an operator, function or control structure requires an integer argument.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também Manipulação de tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also convert a value to integer with the function intval().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>de booleanos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also type-juggling.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>FALSE será retornado como 0 (zero), e TRUE como 1 (um).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FALSE will yield 0 (zero), and TRUE will yield 1 (one).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De números de ponto flutuante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When converting from float to integer, the number will be rounded towards zero.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando convertendo de números de ponto flutuante para inteiros, o número será truncado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the float is beyond the boundaries of integer (usually + / - 2.15e+9 = 2^31), the result is undefined, since the float hasn&apos;t got enough precision to give an exact integer result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o número convertido estiver além dos limites de um inteiro (usualmente + / - 2.15e+9 = 2^31), o resultado é indefinido, mesmo porque o ponto flutuante não tem a mesma precisão para fornecer um resultado inteiro exato.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No warning, not even a notice will be issued in this case!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não se preocupe, pois nenhum aviso será emitido neste caso!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Never cast an unknown fraction to integer, as this can sometimes lead to unexpected results.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo (int) ((0.1+0.7) * 10); / / imprime 7!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php echo (int) ((0.1+0.7) * 10); / / echoes 7!?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Conversão de strings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See String conversion to numbers</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De outros tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Behaviour of converting to integer is undefined for other types.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comportamento da conversão de um inteiro é indefinido de outros tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently, the behaviour is the same as if the value was first converted to boolean.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atualmente, o comportamento é o mesmo como se primeiro o valor fosse convertido para booleano.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, do not rely on this behaviour, as it can change without notice.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, não confie neste comportamento, pois ele pode mudar sem aviso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Floating point numbers</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Números de ponto flutuante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The special NULL value represents that a variable has no value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor especial NULL O valor especial NULL representa que a variável não tem valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL is the only possible value of type NULL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>NULL é o único valor possível do tipo NULL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The null type was introduced in PHP 4</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tipo NULL foi incluído no PHP 4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A variable is considered to be NULL if</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A variável é considerada NULL se</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>it has been assigned the constant NULL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ela foi assimilada com a constante NULL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>it has not been set to any value yet.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ela ainda não recebeu nenhum valor ainda.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>it has been unset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ela foi apagada com unset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is only one value of type NULL, and that is the case-insensitive keyword NULL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há apenas um único valor do tipo NULL, e é a palavra (insensitiva ao caso) NULL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $var = NULL;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$var = NULL;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_null() and unset().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_null() e unset().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Pseudo-types used in this documentation</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pseudo-tipos utilizados nesta documentação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Types</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To initialize an object, you use the new statement to instantiate the object to a variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Inicialização de objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a full discussion, please read the section Classes and Objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para inicializar um objeto, você usa a instrução new, criando uma instância do objeto em uma variável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a value of any other type is converted to an object, a new instace of the stdClass built in class is created.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php class foo {function do_foo() {echo &quot;Fazendo foo .&quot;;}} $bar = new foo; $bar - do_foo();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For any other value, a member variable named scalar will contain the value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma explicação completa, consulte a seção Classes e Objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $obj = (object) &apos;ciao&apos;; echo $obj - gt;scalar; / / outputs&apos;ciao &apos;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Anterior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Principal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A resource is a special variable, holding a reference to an external resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Recurso é uma variável especial, mantendo uma referência de recurso externo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Resources are created and used by special functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Recursos são criados e utilizados por funções especiais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the appendix for a listing of all these functions and the corresponding resource types.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja o apêndice para uma lista de todas essas funções e seus tipos correspondentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The resource type was introduced in PHP 4</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O tipo resource foi incluído no PHP 4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As resource types hold special handlers to opened files, database connections, image canvas areas and the like, you cannot convert any value to a resource.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Liberando recursos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Due to the reference-counting system introduced with PHP4&apos; s Zend-engine, it is automatically detected when a resource is no longer referred to (just like Java).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Através do sistema de contagem de referências introduzido com o engine da Zend no PHP 4, é automaticamente detectado quando um recurso não mais é referenciado (assim como o Java).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When this is the case, all resources that were in use for this resource are made free by the garbage collector.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando isto acontece, todos os recursos em uso por esse resource são liberados pelo coletor de lixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For this reason, it is rarely ever necessary to free the memory manually by using some free_result function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por essa razão, é raramente necessário liberar memória manualmente utilizando alguma função free_result.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Persistent database links are special, they are not destroyed by the garbage collector.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Eles não são destruídos pelo coletor de lixo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the section about persistent connections.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também conexões permanentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A string is series of characters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Strings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This also implies that PHP has no native support of Unicode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP, um caracter é o mesmo que um byte, ou seja, há exatamente 256 caracteres diferentes possíveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See utf8_encode() and utf8_decode() for some Unicode support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto implica que o PHP não tem suporte nativo ao Unicode.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is no problem for a string to become very large.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há nenhum problema nas strings se tornarem muito grandes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no practical bound to the size of strings imposed by PHP, so there is no reason at all to worry about long strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A string literal can be specified in three different ways.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma string literal pode ser especificada de três formas diferentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>single quoted</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>aspas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>double quoted</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sintaxe heredoc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>heredoc syntax</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apóstrofos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The easiest way to specify a simple string is to enclose it in single quotes (the character &apos;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A maneira mais simples para especificar uma string é delimitá-la entre apóstrofos (o caracter &apos;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To specify a literal single quote, you will need to escape it with a backslash (\), like in many other languages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para especificar um apóstrofo. você precisará &quot;escapá-la&quot; com uma contra barra (\), como em muitas outras linguagens.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a backslash needs to occur before a single quote or at the end of the string, you need to double it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se uma contra barra precisa ocorrer antes de um apóstrofo ou no final da string, você precisa duplicá-la.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that if you try to escape any other character, the backslash will also be printed!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que se você tentar escapar qualquer outro caracter, a contra barra também será impressa!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So usually there is no need to escape the backslash itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então geralmente não é necessário escapar a própria contra barra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, a warning will be issued at the E_NOTICE level when this happens.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, um aviso com nível E_NOTICE será emitido quando isto acontecer.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike the two other syntaxes, variables will not be expanded when they occur in single quoted strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diferentemente das duas outras sintaxes, variáveis não serão substituídas quando elas ocorrerem dentro de strings delimitadas por apóstrofes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You deleted C:\*.*? echo &apos;You deleted C:\\*.* ?&apos;; / / Outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo &apos;isto é uma string comum&apos;; echo &apos;Você pode incluir novas linhas em strings, dessa maneira&apos;; echo &apos;Arnold disse uma vez: &quot;I\&apos;ll be back&quot;&apos;; / / saida:... &quot;I&apos;ll be back &quot;echo &apos;Você tem certeza em apagar C:\\*.* ?&apos;; / / saida:... apagar C:\*.*? echo &apos;Você tem certeza em apagar C:\*.* ?&apos;; / / output:... apagar C:\*.*? echo &apos;Estou tentando incluir uma nova linha \n neste ponto&apos;; / / output:... nova linha \n neste ponto</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You deleted C:\*.*? echo &apos;You deleted C:\*.* ?&apos;; / / Outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aspas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables do not $expand $either echo &apos;Variables do not $expand $either&apos;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a string é delimitada entre aspas (&quot;), o PHP entende mais seqüências de escape para caracteres especiais:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the string is enclosed in double-quotes (&quot;), PHP understands more escape sequences for special characters:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 7-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 7-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Seqüências de escape</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Escaped characters</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Seqüência</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sequence</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Significado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>linefeed (LF or 0x0A (10) in ASCII)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>fim de linha (linefeed ou LF ou 0x0A (10) em ASCII)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>carriage return (CR or 0x0D (13) in ASCII)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>retorno de carro (carriage return ou CR ou 0x0D (13) em ASCII)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>horizontal tab (HT or 0x09 (9) in ASCII)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>TAB horizontal (HT ou 0x09 (9) em ASCII)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>backslash</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>contra barra ou barra invertida</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>dollar sign</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>sinal de cifrão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>double-quote</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>aspas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>the sequence of characters matching the regular expression is a character in octal notation</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>a seqüência de caracteres batendo a expressão regular dos caracteres em notação octal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>the sequence of characters matching the regular expression is a character in hexadecimal notation</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>a seqüência de caracteres batendo a expressão regular de um caracter em notação hexadecimal</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Again, if you try to escape any other character, the backslash will be printed too!</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Novamente se você tentar escapar qualquer outro caracter, a contra barra será impressa também!</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See string parsing for details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mas o mais importante dado a respeito de strings delimitadas por aspas está no fato de que nome de variáveis serão substituídos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another way to delimit strings is by using heredoc syntax (&quot;&quot;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja interpretação de strings para detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One should provide an identifier after, then the string, and then the same identifier to close the quotation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Heredoc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The closing identifier must begin in the first column of the line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outra maneira para delimitar strings é utilizando a sintaxe heredoc (&quot;&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É informado um identificador depois de, então a string, e então o mesmo identificador para fechar a delimitação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is very important to note that the line with the closing identifier contains no other characters, except possibly a semicolon (;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O identificador de fechamento precisa começar na primeira coluna da linha.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It &apos;s also important to realize that the first character before the closing identifier must be a newline as defined by your operating system.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além, o identificador utilizado precisa seguir as mesmas regras de nomeação que qualquer outro rótulo no PHP: só pode conter caracteres alfanuméricos e sublinhados, e precisa começar com um caracter não numérico ou sublinhado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is \r on Macintosh for example.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atenção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this rule is broken and the closing identifier is not &quot;clean&quot; then it&apos;s not considered to be a closing identifier and PHP will continue looking for one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É muito importante verificar que a linha do identificador de fechamento não contenha nenhum outro caracter, exceto, possivelmente um ponto e vírgula (;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If in this case a proper closing identifier is not found then a parse error will result with the line number being at the end of the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que significa que o identificador não pode ser endentado, e que não pode haver nenhum espaço ou tabulações antes ou depois do ponto e vírgula.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Heredoc text behaves just like a double-quoted string, without the double-quotes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Textos heredoc se comportam como strings delimitadas por aspas, com apenas uma diferença.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that you do not need to escape quotes in your here docs, but you can still use the escape codes listed above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa escapar apóstrofos e aspas em seus heredocs, mas você ainda pode continuar utilizando os códigos de escape listados acima.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables are expanded, but the same care must be taken when expressing complex variables inside a here doc as with strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis são substituídas, mas o mesmo cuidado precisa ser tomado quando expressando variáveis complexas dentro de heredocs assim como nas strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 7-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 7-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Heredoc string quoting example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo de delimitação de strings heredoc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $str = EOD Example of string spanning multiple lines using heredoc syntax.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $str = EOD Exemplo de uma string distribuída em várias linhas utilizando a sintaxe heredoc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>EOD; / * More complex example, with variables. * / class foo {var $foo; var $bar; function foo() {$this - foo = &apos;Foo&apos;; $this - bar = array(&apos;Bar1&apos;, &apos;Bar2&apos;, &apos;Bar3&apos;);}} $foo = new foo(); $name = &apos;MyName&apos;; echo EOT My name is &quot;$name &quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>EOD; / * Exemplo mais complexo, com variáveis * / class foo {var $foo; var $bar; function foo() {$this - foo = &apos;Foo&apos;; $this - bar = array(&apos;Bar1&apos;, &apos;Bar2&apos;, &apos;Bar3&apos;);}} $foo = new foo(); $name = &apos;Meu nome&apos;; echo EOT Meu nome é &quot;$name &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>I am printing some $foo - foo.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Eu estou imprimindo $foo - foo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Now, I am printing some {$foo - bar[1]}.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Agora, eu estou imprimindo {$foo - bar[1]}.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This should print a capital &apos;A&apos;: \x41 EOT;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto deve imprimir um &apos;A&apos; maiúsculo: \x41 EOT;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Heredoc support was added in PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O suporte a heredoc foi acrescentado no PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a string is specified in double quotes or with heredoc, variables are parsed within it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Interpretação de variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The simple syntax is the most common and convenient, it provides a way to parse a variable, an array value, or an object property.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há dois tipos de sintaxe, um simples e um complexo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The complex syntax was introduced in PHP 4, and can be recognised by the curly braces surrounding the expression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe simples é a mais comum e conveniente, provendo uma maneira de interpretar uma variável, um valor de array ou uma propriedade de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a dollar sign ($) is encountered, the parser will greedily take as much tokens as possible to form a valid variable name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe completa foi introduzida no PHP 4, e pode ser reconhecida por chaves ({}) envolvendo a expressão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Enclose the variable name in curly braces if you want to explicitly specify the end of the name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe simples</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $beer = &apos;Heineken&apos;; echo &quot;$beer&apos;s taste is great&quot;; / / works, &quot;&apos;&quot;is an invalid character for varnames echo &quot;He drank some $beers&quot;; / / won&apos;t work, &apos;s&apos; is a valid character for varnames echo &quot;He drank some ${beer}s&quot;; / / works echo &quot;He drank some {$beer}s&quot;; / / works?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se um sinal de cifrão ($) é encontrado, o interpretador tentará obter tantos identificadores quanto possíveis para formar um nome de variável válido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Similarly, you can also have an array index or an object property parsed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Envolva o nome da variável com chaves se você deseja explicitamente especificar o fim do nome.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For object properties the same rules apply as to simple variables, though with object properties there doesn &apos;t exist a trick like the one with variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$cerveja = &apos;Heineken&apos;; echo &quot;O sabor das &apos;$cerveja&apos;s é otimo&quot;; / / funciona, &quot;&apos;&quot;é um caracter inválido para nome de variáveis echo &quot;Ele bebeu algumas $cervejas&quot;; / / não funciona, &apos;s&apos; é um caracter válido para nome de variáveis echo &quot;Ele bebeu algumas ${cerveja}s&quot;; / / funciona</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This results in a parse error. echo &quot;A banana is $fruits[&apos;banana&apos;] .&quot;; / / Works echo &quot;A banana is&quot;. $fruits[&apos;banana&apos;]. &quot;.&quot;; / / Works echo &quot;This square is $square - width meters broad .&quot;; / / Won&apos;t work.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Similarmente, você também pode interpretar um índice de array ou uma propriedade de objeto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a solution, see the complex syntax. echo &quot;This square is $square - width00 centimeters broad .&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com índices de arrays, o colchete de fechamento (]) marca o final do índice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This isn &apos;t called complex because the syntax is complex, but because you can include complex expressions this way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para propriedades de objetos se aplicam as mesmas regras das variáveis comuns, embora não exista um truque para as propriedades de objetos como para as variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You simply write the expression the same way as you would outside the string, and then include it in {and}.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$frutas = array( &apos;morangos &apos;= &apos;vermelho&apos;, &apos;banana &apos;= &apos;amarelo&apos;); / / note que isto funciona diferentemente fora de delimitadores de string echo &quot;Uma banana é $frutas[banana] .&quot;; echo &quot;Este quadrado tem $square - width metros de lado .&quot;; / / Não funciona.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples to make it clear:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma solução, veja a sintaxe complexa. echo &quot;Este quadrado tem $square - width00 centímetros de lado .&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Let&apos; s show all errors error_reporting(E_ALL); $great = &apos;fantastic&apos;; / / Won&apos;t work, outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para qualquer coisa mais complexa, você precisa utilizar a sintaxe complexa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is {fantastic} echo &quot;This is {$great}&quot;; / / Works, outputs:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sintaxe complexa (chaves)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is fantastic echo &quot;This is {$great}&quot;; echo &quot;This is ${great}&quot;; / / Works echo &quot;This square is {$square - width}00 centimeters broad .&quot;; / / Works echo &quot;This works: {$arr[4][3]}&quot;; / / This is wrong for the same reason as $foo[bar] is wrong / / outside a string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto não é chamado sintaxe complexa porque a sintaxe em si é complexa, mas porque você pode incluir expressões complexas desta maneira.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In otherwords, it will still work but / / because PHP first looks for a constant named foo, it will / / throw an error of level E_NOTICE (undefined constant). echo &quot;This is wrong: {$arr[foo][3]}&quot;; / / Works.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De fato, você pode incluir qualquer valor no que esteja no espaço de nomes dentro de strings com esta sintaxe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Characters within strings may be accessed by specifying the zero-based offset of the desired character after the string in curly braces.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde que você não pode escapar &apos;{&apos;, esta sintaxe somente será reconhecida quando o $é imediatamente seguido de um {. (Utilize &quot;{\$ &quot;ou &quot;\{$&quot; para obter um literal &quot;{$&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alguns exemplos para tornar isso mais claro:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, this syntax is deprecated as of PHP 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$maravilhoso = &apos;fantástico&apos;; echo &quot;Isto é {$maravilhoso}&quot;; / / não funciona, imprime:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some string examples</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é {fantástico} echo &quot;Isto é {$maravilhoso}&quot;; / / funciona, imprime:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Strings may be concatenated using the &apos;.&apos; (dot) operator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é fantástico echo &quot;Este quadrado tem {$square - width}00 centímetros de lado .&quot;; echo &quot;E isto funciona: {$arr[4][3]}&quot;; / / E isto está errado pela mesma razão / / como $foo[bar] é incorreto fora de uma string. echo &quot;Isto está errado: {$arr[foo][3]}&quot;; echo &quot;Você deve fazer desta maneira: {$arr[&apos;foo&apos;][3]}&quot;; echo &quot;Você pode sempre escrever {$obj - values[3] - name}&quot;; echo &quot;Este é o valor da variável chamada $name: {${$name}}&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the &apos;+&apos; (addition) operator will not work for this.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Acesso a caracteres da string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are a lot of useful functions for string modification.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Caracteres nas strings podem ser acessados apenas especificando o deslocamento baseado em zero do caracter desejado depois da string dentro de chaves.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Perl and POSIX extended).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para manutenção de compatibilidade, você ainda pode utilizar colchetes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are also functions for URL-strings, and functions to encrypt / decrypt strings (mcrypt and mhash).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, esta sintaxe for marcada como em extinção desde o PHP 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Finally, if you still didn&apos; t find what you&apos;re looking for, see also the character type functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alguns exemplos com strings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>String conversion is automatically done in the scope of an expression for you where a string is needed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Assimilando uma string. * / $str = &quot;Isto é uma string&quot;; / * Anexando a ela. * / $str = $str.&quot; com uma pouco mais de texto&quot;; / * Outra maneira de acrescentar, incluindo uma nova linha. * / $str .= &quot;e um fim de linha no final (duh).\n&quot;; / * Esta string será mostrada assim &apos;p Número:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Reading the manual sections on Types and Type Juggling will make the following clearer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>9 / p &apos;* / $num = 9; $str = &quot;p Número: $num / p&quot;; / * Isto será apenas&apos; p Número: $num / p &apos;* / $num = 9; $str =&apos; p Número: $num / p &apos;; / * Pega o primeiro caracter de uma string * / $str = &apos;Isto é um teste .&apos;; $first = $str{0}; / * Pega o último caracter da string. * / $str = &apos;Isto ainda é um teste .&apos;; $last = $str{strlen($str)-1};?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A boolean TRUE value is converted to the string &quot;1&quot;, the FALSE value is represented as &quot;&quot; (empty string).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções úteis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This way you can convert back and forth between boolean and string values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Strings podem ser concatenados utilizando o operador &apos;.&apos; (ponto).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An integer or a floating point number (float) is converted to a string representing the number with its digits (including the exponent part for floating point numbers).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que o operador &apos;+&apos; (adição) não funciona para isso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arrays are always converted to the string &quot;Array&quot;, so you cannot dump out the contents of an array with echo() or print() to see what is inside them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja operadores de string para mais informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See below for tips on dumping / viewing the entire contents.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há uma grande quantidade de funções úteis para modificação de strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to print out the member variable values of an object If you would like to print out the member variable values of an object for debugging reasons, read the paragraphs below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a seção de funções de string para funções gerais e funções de expressões regulares para busca e substituição avançada. (em dois sabores:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to find out the class name of which an object is an instance of, use get_class().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Perl e POSIX estendido).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Resources are always converted to strings with the structure &quot;Resource id #1&quot; where 1 is the unique number of the resource assigned by PHP during runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há também funções para strings URL e funções para criptografia e descriptografia de strings (mcrypt e mhash).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL is always converted to an empty string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Finalmente, se você ainda não encontrar o que está procurando, veja também as funções de tipos de caracteres.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As you can see above, printing out the arrays, objects or resources does not provide you any useful information about the values themselfs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Conversão de strings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also convert PHP values to strings to store them permanently.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando uma string é avaliada como um valor numérico, o valor resultante e o tipo é determinado como segue.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can also serialize PHP values to XML structures, if you have WDDX support in your PHP setup.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string será avaliada como um ponto flutuante se conter qualquer um dos caracteres &apos;.&apos;, &apos;e&apos;, ou &apos;E&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a string is evaluated as a numeric value, the resulting value and type are determined as follows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outros casos, ela será avaliada como um inteiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The string will evaluate as a float if it contains any of the characters&apos; .&apos;, &apos;e&apos;, or&apos;E &apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor é obtido da porção inicial da string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value is given by the initial portion of the string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a string começa com dados numéricos válidos, esse será o valor utilizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the string starts with valid numeric data, this will be the value used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em outro caso, o valor será 0 (zero).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Valid numeric data is an optional sign, followed by one or more digits (optionally containing a decimal point), followed by an optional exponent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dados numéricos válidos são: um sinal opcional, seguido por um ou mais dígitos (opcionalmente contendo um ponto decimal), seguido de um expoente, também opcional.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The exponent is an &apos;e&apos; or&apos;E &apos;followed by one or more digits.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O expoente é um &apos;e&apos; ou &apos;E &apos;seguido de um ou mais dígitos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information on this conversion, see the Unix manual page for strtod( 3).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$foo = 1 + &quot;10.5&quot;; / / $foo é ponto flutuante (11.5) $foo = 1 + &quot;-1.3e3&quot;; / / $foo é ponto flutuante (-1299) $foo = 1 + &quot;bob-1.3e3&quot;; / / $foo é ponto inteiro (1) $foo = 1 + &quot;bob3&quot;; / / $foo é ponto inteiro (1) $foo = 1 + &quot;10 Small Pigs&quot;; / / $foo é ponto inteiro (11) $foo = 4 + &quot;10.2 Little Piggies&quot;; / / $foo é ponto flutuante (14.2) $foo = &quot;10.0 pigs&quot; + 1; / / $foo é ponto flutuante (11) $foo = &quot;10.0 pigs &quot;+ 1.0; / / $foo é ponto flutuante (11)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to test any of the examples in this section, you can cut and paste the examples and insert the following line to see for yourself what &apos;s going on:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para mais informações sobre esta conversão, veja página do manual UNIX de strtod( 3).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Do not expect to get the code of one character by converting it to integer (as you would do in C for example).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você deseja testar qualquer um dos exemplo dessa seção, você pode copiar e colar os exemplos e inserir as linhas seguintes para ver por si mesmo como isso funciona.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use the functions ord() and chr() to convert between charcodes and characters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>echo &quot;\$foo==$foo; tipo&quot;. gettype ($foo). &quot;br / \n&quot;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is to say, if you assign a string value to variable $var, $var becomes a string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP não requer (ou suporta) a definição de tipo explicita na declaração de variáveis: o tipo de uma variável é determinado pelo contexto em que a variável é utilizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you then assign an integer value to $var, it becomes an integer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que, se você assimila um valor string para a variável var, var se torna uma string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example of PHP&apos; s automatic type conversion is the addition operator &apos;+ &apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você então assimila um valor inteiro para var, ela se torna um inteiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If any of the operands is a float, then all operands are evaluated as floats, and the result will be a float.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo da conversão automática do PHP é o operador de adição &apos;+&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Otherwise, the operands will be interpreted as integers, and the result will also be an integer.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se qualquer um dos operadores for float, então todos os operadores são avaliados como floats, e o resultado será um float.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that this does NOT change the types of the operands themselves; the only change is in how the operands are evaluated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>De outra forma, se os operadores forem interpretados como inteiros então o resultado será um inteiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = &quot;0&quot;; / / $foo is string (ASCII 48) !- - bad example, no real operator (must be used with variable, modifies it too) $foo++; / / $foo is the string &quot;1&quot; (ASCII 49) - - $foo += 2; / / $foo is now an integer (2) $foo = $foo + 1.3; / / $foo is now a float (3.3) $foo = 5 + &quot;10 Little Piggies&quot;; / / $foo is integer (15) $foo = 5 + &quot;10 Small Pigs&quot;; / / $foo is integer (15) !- - TODO: explain ++ / - - behaviour with strings examples: ++&apos;001 &apos;= &apos;002&apos; ++&apos;abc &apos;= &apos;abd&apos; ++&apos;xyz &apos;= &apos;xza&apos; ++&apos;9.9 &apos;= &apos;9.0&apos; ++&apos;-3 &apos;= &apos;-4&apos; - -&apos;9 &apos;= 8 (integer!) - -&apos;5.5&apos; = &apos;5.5 &apos;- -&apos;-9&apos; = -10 (integer) - -&apos;09 &apos;= 8 (integer) - -&apos;abc&apos; = &apos;abc &apos;- -?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$foo = &quot;0&quot;; / / $foo é string (ASCII 48) $foo += 2; / / $foo é agora um inteiro (2) $foo = $foo + 1.3; / / $foo é agora um float (3.3) $foo = 5 + &quot;10 Little Piggies&quot;; / / $foo é inteiro (15) $foo = 5 + &quot;10 Small Pigs&quot;; / / $foo é inteiro (15)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the last two examples above seem odd, see String conversion to numbers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se os últimos dois exemplos lhe parecerem estranhos, veja Conversão de strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you wish to force a variable to be evaluated as a certain type, see the section on Type casting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você deseja forçar uma variável para ser avaliada como um certo tipo, veja a seção Moldando o tipo (casting).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you wish to change the type of a variable, see settype().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você deseja mudar o tipo de uma variável, veja settype().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would like to test any of the examples in this section, you can use the var_dump() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se quiser testar qualquer um dos exemplo desta seção, você pode usar a função var_dump().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of an automatic conversion to array is currently undefined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comportamento de uma conversão automática para array é atualmente indefinida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = &quot;1&quot;; / / $a is a string $a[0] = &quot;f&quot;; / / What about string offsets?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$a = &quot;1&quot;; / / $a é uma string $a[0] = &quot;f&quot;; / / E com relação aos índices da string?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What happens??</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O que acontece?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since PHP (for historical reasons) supports indexing into strings via offsets using the same syntax as array indexing, the example above leads to a problem: should $a become an array with its first element being &quot;f&quot;, or should &quot;f &quot;become the first character of the string $a?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde que o PHP suporta indexação de strings através de offsets utilizando a mesma sintaxe da indexação de arrays, o exemplo acima nos deixa um problema: $a se tornou um array sendo o primeiro elemento &quot;f&quot;, ou será que &quot;f&quot; se tornou o primeiro caracter da string $a?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current versions of PHP interpret the second assignment as a string offset identification, so $a becomes &quot;f&quot;, the result of this automatic conversion however should be considered undefined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Correções, entretanto, estão sendo discutidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = &quot;abc&quot;; / / $a is a string $a{1} = &quot;f&quot;; / / $a is now &quot;afc&quot;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A moldagem de tipos no PHP funciona como no C: o nome de um tipo desejado é escrito entre parênteses antes da variável em que se deseja a moldagem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Type casting in PHP works much as it does in C: the name of the desired type is written in parentheses before the variable which is to be cast.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As moldagens permitidas são:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = 10; / / $foo is an integer $bar = (boolean) $foo; / / $bar is a boolean?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>(bool), (boolean) - molde para booleano</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The casts allowed are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>(float), (double), (real) - molde para número de ponto flutuante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(int), (integer) - cast to integer</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>(string) - molde para string</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(bool), (boolean) - cast to boolean</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>(array) - molde para array</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(float), (double), (real) - cast to float</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(array) - cast to array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em vez de moldar uma variável para string, você também pode circundar a variável entre aspas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that tabs and spaces are allowed inside the parentheses, so the following are functionally equivalent:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$foo = (int) $bar; $foo = (int) $bar;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pode não ser tão óbvio o que exatamente ocorre quando se molda entre certos tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead of casting a variable to string, you can also enclose the variable in double quotes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Convertendo para booleano</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = 10; / / $foo is an integer $str = &quot;$foo&quot;; / / $str is a string $fst = (string) $foo; / / $fst is also a string / / This prints out that &quot;they are the same &quot;if ($fst === $str) {echo &quot;they are the same&quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando moldando ou forçando a conversão de um array para string, o resultado será a palavra Array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It may not be obvious exactly what will happen when casting between certain types.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando moldando ou forçando o tipo de um objeto para string, o resultado será a palavra Object.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting to boolean</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando moldando de uma variável escalar ou string para um array, a variável se torna o primeiro elemento do array:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting to float</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$var = &apos;ciao&apos;; $arr = (array) $var; echo $arr[0]; / / outputs &apos;ciao&apos;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting to array</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando moldando de uma variável escalar ou string para um objeto, a variável se torna um atributo do objeto: o nome do atributo se chamará &apos;scalar&apos;:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Converting to resource</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$var = &apos;ciao&apos;; $obj = (object) $var; echo $obj - scalar; / / imprime &apos;ciao&apos;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When a form is submitted to a PHP script, the information from that form is automatically made available to the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Formulários HTML (GET and POST)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are many ways to access this information, for example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando um formulário é submetido para um script PHP, qualquer variável do formulário será automaticamente disponível para o script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 8-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há várias maneiras de acessar estas informações, por exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple HTML form</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 8-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>form action=&quot; foo.php &quot;method=&quot;post&quot; Name: input type=&quot;text &quot;name=&quot;username&quot; br Email: input type=&quot;text &quot;name=&quot;email&quot; br input type=&quot;submit &quot;name=&quot;submit&quot; value=&quot;Submit me! &quot;/ form</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>form action=&quot; foo.php &quot;method=&quot;post&quot; Nome: input type=&quot;text &quot;name=&quot;username&quot; br Email: input type=&quot;text &quot;name=&quot;email&quot; br input type=&quot;submit &quot;name=&quot;submit&quot; value=&quot;Me aperte! &quot;/ form</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some examples are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dependendo da configuração local e suas preferencias pessoais, essas são as vias pela qual você pode acessar os dados de seus formulários:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 8-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 8-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Accessing data from a simple POST HTML form</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Acessando dados de um formulário HTML via POST</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of / / PHP 4.2.0 the default value of register_globals = off. / / Using / relying on this method is not preferred. print $username;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / / Disponível desde o PHP 4.1.0 print $_POST[ &apos;username&apos;]; print $_REQUEST[&apos;username&apos;]; import_request_variables(&apos;p&apos;, &apos;p_&apos;); print $p_username; / / Disponível deste o PHP 3. print $HTTP_POST_VARS[&apos;username&apos;]; / / Disponível se a diretiva register_globals = on. / / Desde o PHP 4.2.0 o valor default de register_globals é off / / Usar / manter esse método é preferível. print $username;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using a GET form is similar except you &apos;ll use the appropriate GET predefined variable instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizar um formulário GET é similar, exceto que você use a variável GET predefinida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>GET also applies to the QUERY_STRING (the information after the &apos;?&apos; in an URL).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O metodo GET obtem os dados da QUERY_STRING (a informação depois do &apos;?&apos; numa URL).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, for example, http: / /www.example.com / test.php?id=3 contains GET data which is accessible with $_GET[ &apos;id&apos;].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então, por exemplo, http: / /www.example.com / test.php?id=3 contém os dados GET que serão acessíveis com $_GET[ &apos;id&apos;].</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also $_REQUEST and import_request_variables().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também $_REQUEST e import_request_variables().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Superglobal arrays, like $_POST and $_GET, became available in PHP 4.1.0</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arrays superglobais, como $_POST e $_GET, estão disponíveis desde o PHP 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As shown, before PHP 4.2.0 the default value for register_globals was on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como explicado, antes do PHP 4.2.0 o valor default de register_globals era on.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>And, in PHP 3 it was always on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E no PHP ele era sempre on.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP community is encouraging all to not rely on this directive as it&apos; s preferred to assume it&apos;s off and code accordingly.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A comunidade PHP está encorajando todos a não alterarem essa diretiva, assumindo-a sempre como off e codificando em conformidade com isso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The magic_quotes_gpc configuration directive affects Get, Post and Cookie values.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A diretiva de configuração magic_quotes_gpc afeta os valores de GET, POST e Cookies.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If turned on, value (It&apos;s &quot;PHP !&quot;) will automagically become (It\&apos;s \&quot;PHP!\&quot;).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se estiver ativada, o valor (It&apos;s &quot;PHP !&quot;) se tornará automaticamente (It\&apos;s \&quot;PHP!\&quot;).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Escaping is needed for DB insertion.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Escaping é necessário para inserção em bancos de dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also addslashes(), stripslashes() and magic_quotes_sybase.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também addslashes(), stripslashes() e magic_quotes_sybase.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also understands arrays in the context of form variables (see the related faq).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP entende arrays no contexto de variáveis de formulários (veja o FAQ O PHP entende arrays no contexto de variáveis de formulários (veja o FAQ relacionado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may, for example, group related variables together, or use this feature to retrieve values from a multiple select input.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode, por exemplo, agrupar variáveis relacionadas juntas, ou usar esse recurso para receber valores de um campo de seleção múltipla.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, let &apos;s post a form to itself and upon submission display the data:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, podemos ter um formulario que manda informações para si mesmo até um comando submetido para mostrar todos os dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 8-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 8-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More complex form variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis de formulários mais complexos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php if ($HTTP_POST_VARS[&apos;action&apos;] == &apos;submitted&apos;) {print &apos;pre&apos;; print_r($HTTP_POST_VARS); print &apos;a href=&quot;&apos;. $HTTP_SERVER_VARS[&apos;PHP_SELF&apos;] .&apos; &quot;Please try again / a&apos;; print &apos;/ pre&apos;;} else {? form action=&quot; ?php echo $HTTP_SERVER_VARS[&apos;PHP_SELF&apos;];? &quot;method=&quot;post&quot; Name: input type=&quot;text &quot;name=&quot;personal[name]&quot; br Email: input type=&quot;text &quot;name=&quot;personal[email]&quot; br Beer: br select multiple name=&quot;beer[] &quot;option value=&quot;warthog&quot; Warthog / option option value=&quot;guinness &quot;Guinness / option option value=&quot;stuttgarter&quot; Stuttgarter Schwabenbräu / option / select br input type=&quot;hidden &quot;name=&quot;action&quot; value=&quot;submitted &quot;input type=&quot;submit&quot; name=&quot;submit &quot;value=&quot;submit me!&quot; / form ?php}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, os arrays variáveis de formulários eram limitados a uma dimensão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, the array form variable usage is limited to single-dimensional arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4, essa restrição não existe mais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, no such restriction applies.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nomes de variáveis SUBMIT IMAGE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When submitting a form, it is possible to use an image instead of the standard submit button with a tag like:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando submetendo um formulário, é possível de se utilizar imagens ao invés do botão de submit padrão com uma tag do tipo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the user clicks somewhere on the image, the accompanying form will be transmitted to the server with two additional variables, sub_x and sub_y.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o usuário clica em algum lugar da imagem, o formulário que o acompanha é transmitido para o servidor com duas variáveis adicionais, sub_x e sub_y.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These contain the coordinates of the user click within the image.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Eles contém a coordenadas do clique do usuário na imagem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The experienced may note that the actual variable names sent by the browser contains a period rather than an underscore, but PHP converts the period to an underscore automatically.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cookies HTTP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP transparently supports HTTP cookies as defined by Netscape &apos;s Spec.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP suporta transparentemente cookies HTTP como os definidos pela especificação da Netscape.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies are a mechanism for storing data in the remote browser and thus tracking or identifying return users.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cookies são um mecanismo de armazenamento de dados no browser cliente e permite o rastreamento ou identificação do retorno de usuários.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can set cookies using the setcookie() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode criar cookies com a função setcookie().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies are part of the HTTP header, so the SetCookie function must be called before any output is sent to the browser.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cookies são parte do header HTTP, então, a função setcookie() precisa ser chamada antes de qualquer saída ser enviada ao browser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is the same restriction as for the header() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é a mesma restrição da função header().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookie data is then available in the appropriate cookie data arrays, such as $_COOKIE, $HTTP_COOKIE_VARS as well as in $_REQUEST.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dados de cookies são disponíveis nos arrays de dados de cookies apropriados, como $_COOKIE, $HTTP_COOKIE_VARS como também em $_REQUEST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the setcookie() manual page for more details and examples.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja o manual de setcookie() para mais detalhes e exemplos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você deseja assimilar vários valores para uma única variável cookie, você pode fazer dele um array:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php setcookie( &quot;MyCookie[foo]&quot;, &quot;Testing 1&quot;, time()+3600); setcookie(&quot;MyCookie[bar]&quot;, &quot;Testing 2&quot;, time()+3600);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php setcookie( &quot;MeuCookie[foo]&quot;, &quot;Testando 1&quot;, time()+3600); setcookie(&quot;MeuCookie[bar]&quot;, &quot;Testando 2&quot;, time()+3600);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That will create two seperate cookies although MyCookie will now be a single array in your script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso irá criar dois cookies separados enquanto MeuCookie será um único array em seu script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you want to set just one cookie with multiple values, consider using serialize() or explode() on the value first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você quiser colocar em apenas um cookie vários valores, considere utilizar serialize() ou explode() nos valores primeiro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that a cookie will replace a previous cookie by the same name in your browser unless the path or domain is different.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que um cookie substituirá um anterior com o mesmo nome em seu browser mesmo se o nome ou o caminho for diferente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>So, for a shopping cart application you may want to keep a counter and pass this along. i.e.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então, para uma aplicação de carrinho de compras em que você quer ter um contador e repassá-lo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 8-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 8-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A setcookie() example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo setcookie()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $count++; setcookie(&quot;count&quot;, $count, time()+3600); setcookie(&quot;Cart[$count]&quot;, $item, time()+3600);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pontos em nomes de variáveis postadas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Typically, PHP does not alter the names of variables when they are passed into a script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Normalmente o PHP não altera o nome de variáveis quando elas são passadas para o script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, it should be noted that the dot (period, full stop) is not a valid character in a PHP variable name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, é necessário notar que o ponto (ponto final) não é um caracter válido no nomes de variáveis do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the reason, look at it:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para ilustrar, veja o seguinte exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $varname.ext; / * invalid variable name * /?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $varname.ext; / * nome de variável inválido * /?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For this reason, it is important to note that PHP will automatically replace any dots in incoming variable names with underscores.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nessa situação, é importante saber que o PHP automaticamente substituirá qualquer ponto nos nomes de variáveis recebidas com sublinhados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because PHP determines the types of variables and converts them (generally) as needed, it is not always obvious what type a given variable is at any one time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Porque o PHP determina os tipos de variáveis e faz conversões (geralmente) quando necessárias, nem sempre é óbvio o tipo de uma variável tem em todos os momentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP includes several functions which find out what type a variable is, such as: gettype(), is_array(), is_float(), is_int(), is_object(), and is_string().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP incluí várias funções que permitem determinar qual o tipo de uma variável, por exemplo: gettype(), is_array(), is_float(), is_int(), is_object(), e is_string().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also the chapter on Types.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também o capítulo Tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables in PHP are represented by a dollar sign followed by the name of the variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The variable name is case-sensitive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable names follow the same rules as other labels in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A valid variable name starts with a letter or underscore, followed by any number of letters, numbers, or underscores.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As variáveis no PHP são representadas por um cifrão ($) seguido pelo nome da variável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os nomes de variável no PHP fazem distinção entre maiúsculas e minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os nomes de variável seguem as mesmas regras como outros rótulos no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $var = &quot;Bob&quot;; $Var = &quot;Joe&quot;; echo &quot;$var, $Var&quot;; / / outputs &quot;Bob, Joe&quot; $4site = &apos;not yet&apos;; / / invalid; starts with a number $_4site = &apos;not yet&apos;; / / valid; starts with an underscore $täyte = &apos;mansikka&apos;; / / valid; &apos;ä &apos;is ASCII 228.?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em uma expressão regular isto poderia ser representado desta forma: &apos;[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*&apos;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, variables are always assigned by value.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is to say, when you assign an expression to a variable, the entire value of the original expression is copied into the destination variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para nossos propósitos, as letras a-z, A-Z e os caracteres ASCII de 127 a 255 (0x7f-0xff).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more information on this kind of assignment, see the chapter on Expressions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $var = &quot;Bob&quot;; $Var = &quot;Joe&quot;; echo &quot;$var, $Var&quot;; / / exibe &quot;Bob, Joe&quot; $4site = &apos;not yet&apos;; / / inválido; começa com um número $_4site = &apos;not yet&apos;; / / válido; começa com um sublinhado $täyte = &apos;mansikka&apos;; / / válido; &apos;ä &apos;é um caracter ASCII 228.?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 offers another way to assign values to variables: assign by reference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 3, as variáveis são sempre atribuídas por valor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means that the new variable simply references (in other words, &quot;becomes an alias for &quot;or &quot;points to&quot;) the original variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que quando você atribui uma expressão a uma variável, o valor da expressão original é copiado integralmente para a variável de destino.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changes to the new variable affect the original, and vice versa.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa também que, após atribuir o valor de uma variável a outra, a alteração de uma destas variáveis não afetará a outra.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This also means that no copying is performed; thus, the assignment happens more quickly.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações sobre este tipo de atribuição, veja o capítulo em Expressões.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, any speedup will likely be noticed only in tight loops or when assigning large arrays or objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP 4 oferece um outro meio de atribuir valores a variáveis: a atribuição por referência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To assign by reference, simply prepend an ampersand () to the beginning of the variable which is being assigned (the source variable).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que a nova variável simplesmente referencia (em outras palavras, &quot;torna-se um apelido para &quot;ou &quot;aponta para&quot;) a variável original.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, the following code snippet outputs&apos; My name is Bob &apos;twice:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alterações na nova variável afetam a original e vice versa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One important thing to note is that only named variables may be assigned by reference.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, qualquer aumento de velocidade só será realmente notado em *loops* complexos ou em atribuições de grandes arrays ou objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $foo = 25; $bar = $foo; / / This is a valid assignment. $bar = (24 * 7); / / Invalid; references an unnamed expression. function test() {return 25;} $bar = test(); / / Invalid.?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para atribuir por referência, simplesmente adicione um e-comercial () na frente do nome da variável que estiver sendo atribuída (variável de origem) Por exemplo, o trecho de código abaixo imprime &apos;My name is Bob &apos;duas vezes:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, in Perl &apos;Z&apos;+1 turns into&apos;AA&apos;, while in C&apos;Z&apos;+1 turns into &apos;[&apos; {ord(&apos;Z&apos;) == 90, ord(&apos;[&apos;) == 91).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $foo = &apos;Bob&apos;; / / Atribui o valor &apos;Bob&apos; a variável $foo $bar = $foo; / / Referecia $foo através de $bar. $bar = &quot;My name is $bar&quot;; / / Altera $bar... echo $bar; echo $foo; / / $foo é alterada também.?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arithmetric Operations on Character Variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma observação importante a se fazer: somente variáveis nomeadas podem ser atribuídas por referência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>X Y Z AA AB AC * /?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $foo = 25; $bar = $foo; / / Esta atribuição é válida. $bar = (24 * 7); / / Inválido; referencia uma expressão sem nome. function test() {return 25;} $bar = test(); / / Inválido.?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Predefined variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP provides a large number of predefined variables to any script which it runs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PHP oferece um grande número de variáveis predefinidas para qualquer script que ele execute.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many of these variables, however, cannot be fully documented as they are dependent upon which server is running, the version and setup of the server, and other factors.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Muitas destas variáveis, entretanto, não podem ser completamente documentadas uma vez dependem de diversos fatores, como o servidor no qual scripts são executados, a versão e configuração deste servidor e outros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some of these variables will not be available when PHP is run on the command line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Algumas destas variáveis não estarão disponíveis quando o PHP for executado na linha de comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a listing of these variables, please see the section on Reserved Predefined Variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma lista destas variáveis, veja a seção Variáveis reservadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.2.0 and later, the default value for the PHP directive register_globals is off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4.2.0 e posteriores, o valor default da diretiva register_globals é off.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a major change in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é a maior modificação no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Having register_globals off affects the set of predefined variables available in the global scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tendo register_globals off Tendo register_globals off afeta o conjunto de variáveis predefinidas disponíveis no escopo global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, to get DOCUMENT_ROOT you&apos; ll use $_SERVER[&apos;DOCUMENT_ROOT&apos;] instead of $DOCUMENT_ROOT, or $_GET[&apos;id&apos;] from the URL http: / /www.example.com / test.php?id=3 instead of $id, or $_ENV[&apos;HOME&apos;] instead of $HOME.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>POr exemplo, para ler DOCUMENT_ROOT você usará $_SERVER[ &apos;DOCUMENT_ROOT&apos;] em vez de $DOCUMENT_ROOT, ou $_GET[&apos;id&apos;] da URL http: / /www.example.com / test.php?id=3 em vez de $id, or $_ENV[&apos;HOME&apos;] em vez de $HOME.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For related information on this change, read the configuration entry for register_globals, the security chapter on Using Register Globals, as well as the PHP 4.1.0 and 4.2.0 Release Announcements.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para informações relacionadas desta modificação, veja detalhes da diretiva register_globals, no capítulo de segurança em Usando register_globals, assim como o detalhamento de lançamento das versões do PHP 4.1.0 e 4.2.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using the available PHP Reserved Predefined Variables, like the superglobal arrays, is preferred.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizar as Variáveis Predefinidas do PHP, como os arrays superglobais, é muito mais preferível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>From version 4.1.0 onward, PHP provides an additional set of predefined arrays containing variables from the web server (if applicable), the environment, and user input.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde a versão 4.1.0, o PHP fornece um conjunto adicional de arrays predefinidos contendo as variáveis do servidor web (se aplicável), as variáveis ambiente e as entradas do usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These new arrays are rather special in that they are automatically global--i.e., automatically available in every scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esses novos arrays são especiais pelo motivo que são automaticamente globais (significa que são automaticamente disponíveis em qualquer escopo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, you&apos; ll notice how the older predefined variables ($HTTP_*_VARS) still exist.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, para uma explicação de seu conteúdo e detalhes sobre as variáveis predefinidas do PHP e sua natureza, veja a seção Variáveis Predefinidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Superglobals cannot be used as variable variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também que todas as outras variáveis predefinidas antigas ($HTTP_*_VARS) ainda existem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If certain variables in variables_order are not set, their appropriate PHP predefined arrays are also left empty.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se todos os indicadores não estiverem configurados no variables_order, seus arrays superglobais predefinidos respectivos estarão vazios.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Superglobals</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Superglobais do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contains a reference to every variable which is currently available within the global scope of the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém um referência para todas as variáveis que são atualmente disponíveis dentro do escopo global do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The keys of this array are the names of the global variables. $GLOBALS has existed since PHP 3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As chaves desse array são os nomes das variáveis globais. $GLOBALS existe desde o PHP 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables set by the web server or otherwise directly related to the execution environment of the current script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis criadas pelo servidor web ou diretamente relacionadas ao ambiente de execução do script atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_SERVER_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Análogo ao antigo array $HTTP_SERVER_VARS (que ainda continua disponível, mas em decadência).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via HTTP GET.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis postadas para o script via método HTTP GET.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_GET_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Análogo ao antigo array $HTTP_GET_VARS (que ainda continua disponível, mas em decadência).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via HTTP POST.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis postadas para o script via método HTTP POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_POST_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Análogo ao antigo array $HTTP_POST_VARS (que ainda continua disponível, mas em decadência).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via HTTP cookies.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis postadas para o script via cookies HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_COOKIE_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Análogo ao antigo array $HTTP_COOKIE_VARS (que ainda continua disponível, mas em decadência).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via HTTP post file uploads.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis postadas para o script via transferência de arquivos HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_POST_FILES array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Análogo ao antigo array $HTTP_POST_FILES (que ainda continua disponível, mas em decadência).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See POST method uploads for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja uploads via método POST para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via the environment.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis disponíveis no script do ambiente de execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_ENV_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Análogo ao antigo array $HTTP_ENV_VARS (que ainda continua disponível, mas em decadência).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables provided to the script via any user input mechanism, and which therefore cannot be trusted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis postadas para o script por todas os mecanismos de input, e que não podem ter seu conteúdo garantido de qualquer forma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The presence and order of variable inclusion in this array is defined according to the variables_order configuration directive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A presença e a ordem de inclusão das variáveis nesse array é definida de acordo com a diretiva de configuração variables_order.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This array has no direct analogue in versions of PHP prior to 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este array não tem um equivalente nas versões anteriores do PHP 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also import_request_variables().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também import_request_variables().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When running on the command line, this will not include the argv and argc entries; these are present in the $_SERVER array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando executando na linha de comando, isto não inclui as entradas argv e argc; elas estão presentes no array $_SERVER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables which are currently registered to a script &apos;s session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis que estão atualmente registradas na sessão do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Analogous to the old $HTTP_SESSION_VARS array (which is still available, but deprecated).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Análogo ao antigo array $HTTP_SESSION_VARS (que ainda continua disponível, mas em decadência).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Session handling functions section for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a sessão funções de manipulação de Sessões para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variable scope</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Escopo de variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Escopo de variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The scope of a variable is the context within which it is defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O escopo de uma variável é o contexto onde ela foi definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For the most part all PHP variables only have a single scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A maior parte das variáveis do PHP tem somente escopo local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This single scope spans included and required files as well.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este escopo local inclui os arquivos incluídos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here the $a variable will be available within the included b.inc Here the $a variable will be available within the included b.inc script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui a variável $a estará disponível no script incluído b.inc.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, within user-defined functions a local function scope is introduced.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Entretanto, com as funções definidas pelo usuário, um escopo local é introduzido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Any variable used inside a function is by default limited to the local function scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quaisquer variáveis utilizadas dento da função é por default limitada dentro do escopo local da função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1; / * global scope * / function Test() {echo $a; / * reference to local scope variable * /} Test();?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $a = 1; / * escopo global * / function Teste() {echo $a; / * referencia uma variável do escopo local (não definida) * /} Test();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This script will not produce any output because the echo statement refers to a local version of the $a variable, and it has not been assigned a value within this scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este script não produz nenhuma saída porque a instrução echo() refere-se a uma versão local da variável $a, e ela não tem nenhum valor assimilado nesse escopo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may notice that this is a little bit different from the C language in that global variables in C are automatically available to functions unless specifically overridden by a local definition.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa é uma pequena diferença da linguagem C quando variáveis globais são automaticamente disponíveis para funções sem sobreescrever uma eventual definição local.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can cause some problems in that people may inadvertently change a global variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto causa problemas quando as pessoas mudam inadivertidamente uma variável global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP global variables must be declared global inside a function if they are going to be used in that function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP, as variáveis globais precisam ser declaradas globais dentro de uma função se ela vai ser utilizada naquela função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1; $b = 2; function Sum() {global $a, $b; $b = $a + $b;} Sum(); echo $b;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $a = 1; $b = 2; function Soma() {global $a, $b; $b = $a + $b;} Soma(); echo $b;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The above script will output &quot;3&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O script acima imprimirá &quot;3&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By declaring $a and $b By declaring $a and $b global within the function, all references to either variable will refer to the global version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Declarando $a e $b globais na função, todas as referências a essas variáveis referem-se a versão global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no limit to the number of global variables that can be manipulated by a function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há um limite para o número de variáveis globais que podem ser manipuladas por uma função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A second way to access variables from the global scope is to use the special PHP-defined $GLOBALS array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma segunda maneira de acessar variáveis do escopo global é utilizando o array especial $GLOBALS definido pelo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The previous example can be rewritten as:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O exemplo anterior poderia ser rescrito como:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $a = 1; $b = 2; function Sum() {$GLOBALS[&quot;b&quot;] = $GLOBALS[&quot;a&quot;] + $GLOBALS[&quot;b&quot;];} Sum(); echo $b;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $a = 1; $b = 2; function Soma() {$GLOBALS[&quot;b&quot;] = $GLOBALS[&quot;a&quot;] + $GLOBALS[&quot;b&quot;];} Soma(); echo $b;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The $GLOBALS array is an associative array with the name of the global variable being the key and the contents of that variable being the value of the array element.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O array $GLOBALS é um array associativo onde o nome da variável global é a chave do array e o seu conteúdo da variável como o valor do elemento do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Notice how $GLOBALS exists in any scope, this is because $GLOBALS is a superglobal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja que $GLOBALS existe em qualquer escopo, isto porque $GLOBALS é uma superglobal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here &apos;s an example demonstrating the power of superglobals:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Segue um exemplo demonstrando o poder das superglobais:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function test_global() {/ / Most predefined variables aren&apos;t &quot;super &quot;and require / / &apos;global &apos;to be available to the functions local scope. global $HTTP_POST_VARS; print $HTTP_POST_VARS[&apos;name&apos;]; / / Superglobals are available in any scope and do / / not require&apos;global&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function test_global() {/ / A maioria das variaveis predefinidas nao sao &apos;super &apos;e requerem / / &apos;global&apos; para serem disponiveis para funcoes em qualquer escopo. global $HTTP_POST_VARS; print $HTTP_POST_VARS[&apos;name&apos;]; / / Superglobais são disponiveis em qualquer escopo e / / nao precisam de &apos;global &apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Superglobals are available / / as of PHP 4.1.0 print $_POST[ &apos;name&apos;];}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Superglobais existem / / desde o PHP 4.1.0 print $_POST[ &apos;name&apos;];}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Another important feature of variable scoping is the static Another important feature of variable scoping is the static variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outro recurso importante do escopo de variáveis é a variável estática.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A static variable exists only in a local function scope, but it does not lose its value when program execution leaves this scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma variável estática existe somente no escopo local da função, mas ela não perde seu valor quando o nível de execução do programa deixa o escopo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consider the following example:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Considere o seguinte exemplo:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function Test () {$a = 0; echo $a; $a++;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function Teste () {$a = 0; echo $a; $a++;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is quite useless since every time it is called it sets $a to 0 and prints &quot;0&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa função é inútil partindo de que cada vez que ela é chamada, ela coloca em $a o valor 0 e imprime &quot;0&quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The $a + + which increments the variable serves no purpose since as soon as the function exits the $a variable disappears.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A instrução $a + +, que aumenta o valor da variável não tem sentido desde que a função sai e a variável $a desaparece.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To make a useful counting function which will not lose track of the current count, the $a variable is declared static:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para faze-la mais útil como contadora sem deixar de perder o sua conta atual, a variável $a é declarada como estática:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function Test() {static $a = 0; echo $a; $a++;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function Teste() {static $a = 0; echo $a; $a++;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Now, every time the Test() function is called it will print the value of $a and increment it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Agora, cada vez que a função Teste() for chamada ele imprimirá o valor de $a e o incrementará.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Static variables also provide one way to deal with recursive functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis estáticas fornecem uma solução ideal para funções recursivas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A recursive function is one which calls itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma função recursiva é aquela se chama a si mesma.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Care must be taken when writing a recursive function because it is possible to make it recurse indefinitely.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cuidados especiais precisam ser tomados quando escrevendo funções recursivas porque é possível que ela continue na recursão indefinidamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must make sure you have an adequate way of terminating the recursion.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você tem de ter certeza que há uma maneira segura de terminar a recursão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following simple function recursively counts to 10, using the static variable $count to know when to stop:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A seguinte função recursiva conta até 10, utilizando a variável estática $count para saber quando parar:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function Test() {static $count = 0; $count++; echo $count; if ($count 10) {Test ();} $count--;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function Teste() {static $count = 0; $count++; echo $count; if ($count 10) {Test ();} $count--;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Zend Engine 1, driving PHP4, implements the static and global modifier for variables in terms of references.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O Zend Engine 1, base do PHP4, implementa os modificadores static e global para variáveis em termos de referência.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, a true global variable imported inside a function scope with the global statement actually creates a reference to the global variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, uma variável global importada dentro do escopo de uma função com a instrução global atualmente cria uma referência para a variável global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This can lead to unexpected behaviour which the following example addresses:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto pode causar comportamentos impresíveis para os seguintes casos:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Executing this example will result in the following output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Executando esse exemplo você terá as seguites saídas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A similar behaviour applies to the static statement.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma situação similar se aplica ao modificador static.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>References are not stored statically:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Referências não são armazenadas estaticamente:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php function get_instance_ref() {static $obj; echo &quot;Static object: &quot;; var_dump($obj); if (!isset($obj)) {/ / Assign a reference to the static variable $obj = new stdclass;} $obj - property++; return $obj;} function get_instance_noref() {static $obj; echo &quot;Static object:&quot;; var_dump($obj); if (!isset($obj)) {/ / Assign the object to the static variable $obj = new stdclass;} $obj - property++; return $obj;} $obj1 = get_instance_ref(); $still_obj1 = get_instance_ref(); echo &quot;\n&quot;; $obj2 = get_instance_noref(); $still_obj2 = get_instance_noref();?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php function get_instance_ref() {static $obj; echo &quot;Objeto estatico: &quot;; var_dump($obj); if (!isset($obj)) {/ / Assimila uma referencia a variavel estatica $obj = new stdclass;} $obj - property++; return $obj;} function get_instance_noref() {static $obj; echo &quot;Objeto estatico:&quot;; var_dump($obj); if (!isset($obj)) {/ / Assimila o objeto para a veriavel estatica $obj = new stdclass;} $obj - property++; return $obj;} $obj1 = get_instance_ref(); $still_obj1 = get_instance_ref(); echo &quot;\n&quot;; $obj2 = get_instance_noref(); $still_obj2 = get_instance_noref();?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Static object:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Objeto estatico:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL Static object:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>NULL Objeto estatico:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL Static object: object( stdClass)(1) {[&quot;property&quot;]= int(1)}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>NULL Objeto estatico: object( stdClass)(1) {[&quot;property&quot;]= int(1)}</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example demonstrates that when assigning a reference to a static variable, it&apos; s not remembered when you call the get_instance_ref() function a second time.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este exemplo demonstra que quando assimilando uma referência para uma variável estática, ela não se lembra quando você chama a função get_instance_ref() uma segunda vez.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis variáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sometimes it is convenient to be able to have variable variable names.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As vezes é conveniente poder trabalhar com variáveis variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is, a variable name which can be set and used dynamically.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto é, nomes de variáveis que pode ser criadas e utilizadas dinamicamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A normal variable is set with a statement such as:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma variável normal é criada numa instrução como:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A variable variable takes the value of a variable and treats that as the name of a variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma variável variável pega o valor de uma variável e a trata como o nome de uma variável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In the above example, hello, can be used as the name of a variable by using two dollar signs. i.e.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No exemplo acima, hello pode ser utilizada como o nome de uma variável utilizando dois sinais de cifrão:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At this point two variables have been defined and stored in the PHP symbol tree: $a with contents &quot;hello&quot; and $hello with contents &quot;world &quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Neste ponto, duas variáveis foram definidas e preservadas na árvore de símbolos do PHP: $a contendo &quot;hello&quot; e $hello contendo &quot;world &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore, this statement:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Da mesma forma, esta instrução:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>produces the exact same output as:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>produz a mesma saida que:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>i.e. they both produce: hello world.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>no caso: hello world.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use variable variables with arrays, you have to resolve an ambiguity problem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para poder utilizar variáveis variáveis com arrays, você precisa resolver um problema de ambigüidade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That is, if you write $$a[ 1] then the parser needs to know if you meant to use $a[1] as a variable, or if you wanted $$a as the variable and then the [1] index from that variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assim, se você escrever $$a[ 1] então o interpretador pode entender que você quer usar $a[1] como uma variável ou que você quer usar $$a como uma variável e [1] como o índice dessa variável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax for resolving this ambiguity is: ${$a[1]} for the first case and ${$a}[1] for the second.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe para resolver essa ambigüidade é ${$a[1]} para o primeiro caso e ${$a}[1] para o segundo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that variable variables cannot be used with PHP &apos;s Superglobal arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifique que variáveis variáveis não podem ser utilizadas com os novos arrays superglobais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This means you cannot do things like ${$_GET}.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que você não pode fazer coisas como ${$_GET}.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are looking for a way to handle availability of superglobals and the old HTTP_*_VARS, you might want to try referencing them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está procurando uma maneira de manipular as superglobais como as antigas HTTP_*_VARS, você deve tentar referenciá-las.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix B.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice B.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Migrating from PHP 3 to PHP 4</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Migrating Configuration Files</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>empty( &quot;0&quot;)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With PHP 3 the error reporting level was set as a simple numeric value formed by summing up the numbers related to different error levels.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuration changes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP 3 extension</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 and the integrated Zend engine have greatly improved PHP &apos;s performance and capabilities, but great care has been taken to break as little existing code as possible.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Migrating from PHP 3 to PHP 4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Initializers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Adabas and Solid database extensions are no more.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Deprecate functions and extensions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>unset(), although still available, is implemented as a language construct rather than a function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Changed status for unset()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Parser behavior</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Running PHP 3 and PHP 4 concurrently</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variable substitution in strings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Handling of global variables</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example B-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo B-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix C.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Migrating from PHP / FI 2 to PHP 3</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Short-circuited boolean evaluation</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Error messages have changed</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Expression types</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 3.0 is rewritten from the ground up.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Migrating from PHP / FI 2 to PHP 3</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>if..endif syntax</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Other incompatibilities</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-11.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-11.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugging PHP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O debugador do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Start / end tags</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Function TRUE / FALSE return values</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-9.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>while syntax</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example C-8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo C-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current possible PCRE modifiers are listed below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pattern Modifiers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The names in parentheses refer to internal PCRE names for these modifiers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pattern Modifiers - - Describes possible modifiers in regex patterns</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PCRE library is a set of functions that implement regular expression pattern matching using the same syntax and semantics as Perl 5, with just a few differences (see below).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pattern Syntax - - Describes PCRE regex syntax</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The differences described here are with respect to Perl 5.005.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Differences From Perl</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PCRE_UNGREEDY is set, the greediness of the repeti - tion quantifiers is inverted, that is, by default they are not greedy, but if followed by a question mark they are.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Regular Expression Details</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As a trivial example, the pattern The quick brown fox matches a portion of a subject string that is identical to itself.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Meta-characters</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All non-alphanumeric characters other than\, -, ^ (at the start) and the terminating] are non-special in character classes, but it does no harm if they are escaped.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vertical bar</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the PCRE_EXTENDED option is set, an unescaped # character outside a character class introduces a comment that contin - ues up to the next newline character in the pattern.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Recursive patterns</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no memory can be obtained, it saves data for the first 15 capturing parentheses only, as there is no way to give an out-of-memory error from within a recursion.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Performances</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error levels are:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E_NOTICE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, trying to access the value of a variable which has not been set, or calling stat() on a file that doesn&apos;t exist.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E_WARNING</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These indicate errors that can not be recovered from, such as a memory allocation problem.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E_PARSE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All of the above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>E_ALL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List of Function Aliases</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lista de funções sinônimas (aliases)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All functions look like this:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Extending PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>void php3_foo( INTERNAL_FUNCTION_PARAMETERS) {}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Function Prototype</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you change the string of a parameter which already IS_STRING or IS_ARRAY you should run pval_destructor on it first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variable Function Arguments</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pval *arg1, *arg2, *arg3; int arg_count = ARG_COUNT(ht); if (arg_count 2 _BAR_ _BAR_ arg_count 3 _BAR_ _BAR_ getParameters(ht,arg_count, arg1, arg2, arg3)==FAILURE) {WRONG_PARAM_COUNT;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using the Function Arguments</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table E-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela E-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you compile with &quot;-DDEBUG&quot;, PHP will print out a list of all memory that was allocated using emalloc() and estrdup() but never freed with efree() when it is done running the specified script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Setting Variables in the Symbol Table</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Just about any hash function returns SUCCESS or FAILURE (except for hash_exists(), which returns a boolean truth value).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Returning simple values</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your function returns boolean success / error responses, always use RETURN_TRUE and RETURN_FALSE respectively.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Returning complex values</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>add_next_index_stringl( return_value,str,length) - specify the string length</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using the resource list</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example E-9.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo E-9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pval *resource_id; RESOURCE *resource; int type; convert_to_long(resource_id); php3_list_delete(resource_id - value.lval);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using the persistent resource table</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many of the features of PHP can be configured at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Adding runtime configuration directives</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Debugger Protocol</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Protocolo do Debugger</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Prefácio</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP, which stands for &quot;PHP:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP, que significa &quot;PHP:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hypertext Preprocessor &quot;is a widely-used Open Source general-purpose scripting language that is especially suited for Web development and can be embedded into HTML.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hypertext Preprocessor &quot;, é uma linguagem de programação de ampla utilização, interpretada, que é especialmente interessante para desenvolvimento para a Web e pode ser mesclada dentro do código HTML.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Its syntax draws upon C, Java, and Perl, and is easy to learn.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe da linguagem lembra C, Java e Perl, e é fácil de aprender.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The main goal of the language is to allow web developers to write dynamically generated webpages quickly, but you can do much more with PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O objetivo principal da linguagem é permitir a desenvolvedores escrever páginas que serão geradas dinamicamente rapidamente, mas você pode fazer muito mais do que isso com PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This manual consists primarily of a function reference, but also contains a language reference, explanations of some of PHP &apos;s major features, and other supplemental information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esse manual consiste primariamente de uma referência de funções, mas ele também contém uma referência da linguagem, explicações sobre as mais importantes características do PHP, e outras informações suplementares.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can download this manual in several formats at http: / /www.php.net / docs.php.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode fazer o download desse manual em vários formatos em http: / /www.php.net / docs.php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The downloads are updated as the content changes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os arquivos para downloads são atualizados automaticamente assim que o conteúdo for modificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information about how this manual is developed can be found in the &apos;About the manual&apos; appendix.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para mais informações sobre como esse manual é desenvolvido pode ser encontrado em &apos;Sobre o manual&apos; do apêndice.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also PHP History</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também a história do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are only available when running PHP as an Apache 1.x module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For PHP installation on Apache 1.x see the Apache section in the installation chapter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of the Apache PHP module is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Configuration settings from php.ini may be overridden by php_flag settings in the server configuration file or local .htaccess files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As diretivas de configuração no php.ini podem ser sobrescritas por diretivas php_flag no arquivo de configuração do servidor ou por arquivos .htaccess locais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Turning off PHP parsing for a directory using .htaccess</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desligando a interpretação do PHP em um diretório com o .htaccess</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Apache configuration options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração no Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Valor Default</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changeable</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alterabilidade</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>turns PHP parsing on or off</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>liga ou desliga a interpretação pelo PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>specify whether PHP scripts may request child process termination on end of request, see also apache_child_terminate()</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Detalhes na função apache_child_terminate()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>send PHP scripts modification date as Last-Modified: header for this request</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>envia a data de modificação do script PHP como um header Last-Modified:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>parse files with executable bit set as PHP regardles of their file ending</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>interpreta arquivos marcados executáveis como scripts PHP, independentemente do final do arquivo</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directive is really only useful in the Apache module version of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta diretiva somente é útil para a versão módulo do Apache do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is used by sites that would like to turn PHP parsing on and off on a per-directory or per-virtual server basis.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela pode ser usada para ligar ou desligar a interpretação do PHP em nível de diretório ou em nível de servidor virtual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By putting engine off in the appropriate places in the httpd.conf file, PHP can be enabled or disabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhuma constante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to interact with and manipulate arrays in various ways.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções para manipulação de arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Arrays are essential for storing, managing, and operating on sets of variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essas funções permitem a interação e manipulação de arrays de várias formas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple and multi-dimensional arrays are supported, and may be either user created or created by another function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arrays simples e multidimensionais (matrizes) são suportados, e podem ser criados pelo usuário ou por outras funções.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are specific database handling functions for populating arrays from database queries, and several functions return arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Existem diversas funções específicas para bancos de dados para preencher arrays com os dados retornados em consultas, e vários outros tipos de funções também retornam arrays.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see the Arrays section of the manual for a detailed explanation of how arrays are implemented and used in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are always available as part of the PHP core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As constantes listadas abaixo estão sempre disponíveis como parte do núcleo do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CASE_LOWER is used with array_change_key_case() and is used to convert array keys to lower case.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CASE_LOWER é usada com a função array_change_key_case() e é usada em chaves de arrays para torná-las minúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is also the default case for array_change_key_case().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É o valor padrão utilizado em array_change_key_case().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CASE_UPPER is used with array_change_key_case() and is used to convert array keys to upper case.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CASE_UPPER é usada com a função array_change_key_case() e é usada em chaves de arrays para torná-las maiúsculas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting order flags:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sinais de ordenação:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_ASC is used with array_multisort() to sort in ascending order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_ASC é usada com array_multisort() para ordenar em ordem crescente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_DESC is used with array_multisort() to sort in descending order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_DESC é usada com array_multisort() para ordenar em ordem descrescente</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Sorting type flags: used by various sort functions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sinais de tipos de ordenação: usadas por várias funções de ordenação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_REGULAR is used to compare items normally.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_REGULAR é usada para comparar itens normalmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_NUMERIC is used to compare items numerically.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_NUMERIC é usada para comparar itens numericamente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SORT_STRING is used to compare items as strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SORT_STRING é usada para comparar itens como se fossem strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also is_array(), explode(), implode(), split(), preg_split(), and join().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também is_array(), explode(), implode(), split(), preg_split() e join().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The aspell() functions allows you to check the spelling on a word and offer suggestions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aspell functions [deprecated]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It uses pspell library and works with newer versions of aspell.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need the aspell library, available from: http: / /aspell.sourceforge.net /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For arbitrary precision mathematics PHP offers the Binary Calculator which supports numbers of any size and precision, represented as strings.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>BCMath Funções Matemáticas de Precisão Arbitrária</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don &apos;t need any external libraries for this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para matemática de precisão arbitrária, o PHP oferece a Calculadora Binária com suporte a números de qualquer tamanho e precisão, representados como strings.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4, these functions are only available if PHP was configured with --enable-bcmath.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde o PHP 4.0.4, a libbcmath é distribuída junto com o PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 3, these functions are only available if PHP was NOT configured with --disable-bcmath.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4, estas funções somente serão disponíveis se PHP foi configurado com --enable-bcmath.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not need to load any additional extension in order to use these functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comportamento dessas funções podem ser modificado pelas configurações do php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>BC math configuration options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração da BC Math</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Segue uma breve descrição das diretivas de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of decimal digits for all bcmath functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The bzip2 functions are used to transparently read and write bzip2 (.bz2) compressed files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções de compactação com Bzip2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module uses the functions of the bzip2 library by Julian Seward.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As funções para bzip2 são usadas para ler e escrever, de forma transparente, arquivos compactados do tipo bzip2 (.bz2).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module requires bzip2 / libbzip2 version = 1.0.x.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este módulo utiliza as funções da biblioteca bzip2 desenvolvida por Julian Seward</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Bzip2 support in PHP is not enabled by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O suporte às funções para Bzip2 no PHP não é habilitado por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need to use the --with-bz2[ =DIR] configuration option when compiling PHP to enable bzip2 support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este módulo requer bzip2 / libbzip2, versão = 1.0.x.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extenção não define nenhum parâmetro de configuração no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension defines one resource type: a file pointer identifying the bz2-file to work on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão define um tipo de recurso (resource): um ponteiro para arquivo que identifica o arquivo bzip2 que está sendo usado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example opens a temporary file and writes a test string to it, then prints out the contents of the file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este exemplo abre um arquivo temporário e escreve uma string de test nele, e então mostra o conteúdo do arquivo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Small bzip2 Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo simples de bzip2</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $filename = &quot;/ tmp / testfile.bz2&quot;; $str = &quot;This is a test string.\n&quot;; / / open file for writing $bz = bzopen($filename, &quot;w&quot;); / / write string to file bzwrite($bz, $str); / / close file bzclose($bz); / / open file for reading $bz = bzopen($filename, &quot;r&quot;); / / read 10 characters print bzread($bz, 10); / / output until end of the file (or the next 1024 char) and close it. print bzread($bz); bzclose($bz);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $arquivo = &quot;/ tmp / testfile.bz2&quot;; $str = &quot;This is a test string.\n&quot;; / / abre o arquivo para escrita $bz = bzopen($arquivo, &quot;w&quot;); / / escreve a string no arquivo bzwrite($bz, $str); / / fecha o arquivo bzclose($bz); / / abre o arquivo para leitura $bz = bzopen($arquivo, &quot;r&quot;); / / lê 10 caracteres print bzread($bz, 10); / / imprime até o final do arquivo (ou os próximos 1024 caracteres) print bzread($bz); / / fecha o arquivo bzclose($bz);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions interface the CCVS API, allowing you to work directly with CCVS from your PHP scripts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CCVS API Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will also need to make sure the PHP Processes are running under the same user as your CCVS was installed as (e.g. if you installed CCVS as user&apos;ccvs&apos;, your PHP processes must run as&apos;ccvs&apos; as well.)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to obtain information about classes and instance objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classes e Objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can obtain the name of the class to which a object belongs, as well as its member properties and methods.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode obter o nome da classe ao qual um objeto pertence, bem como suas propriedades e métodos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando estas funções, você pode descobrir não apenas a classe de um objeto, mas também seu parentesco (no caso, de qual objeto de classe ele extende).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In this example, we first define a base class and an extension of the class.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Neste exemplo, nós primeiramente definiremos uma classe base e uma extensão da classe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The base class describes a general vegetable, whether it is edible or not and what is its color.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A classe base descreve um vegetal comum, que é comestível ou não e que tem sua cor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The subclass Spinach adds a method to cook it and another to find out if it is cooked.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sub-classe Espinafre adiciona um método para cozinhá-lo e outro para descobrir se ele está cozido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. classes.inc</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. classes.inc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We then instantiate 2 objects from these classes and print out information about them, including their class parentage.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nós instânciamos 2 objetos destas classes e exibimos informações sobre elas, incluindo o parentesco de suas classes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We also define some utility functions, mainly to have a nice printout of the variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nós também definimos algumas funções úteis, principalmente ter uma boa saída de variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. test_script.php</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. test_script.php</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One important thing to note in the example above is that the object $leafy is an instance of the class Spinach which is a subclass of Vegetable, therefore the last part of the script above will output:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma coisa importante para notar no exemplo acima é que o objeto $leafy é uma instância da classe Espinafre que é uma subclasse de Vegetal, então a última parte do script acima retornará:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>COM encourages versioning, separation of implementation from interface and hiding the implementation details such as executable location and the language it was written in.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>COM functions are only available on the Windows version of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ClibPDF lets you create PDF documents with PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>ClibPDF functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To do so add to your configure line the options --with-jpeg-dir[ =DIR] --with-tiff-dir[=DIR].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Simple ClibPDF Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. pdfclock example from pdflib 2.0 distribution</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. pdfclock example from pdflib 2.0 distribution</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $radius = 200; $margin = 20; $pagecount = 40; $pdf = cpdf_open(0); cpdf_set_creator($pdf, &quot;pdf_clock.php3&quot;); cpdf_set_title($pdf, &quot;Analog Clock&quot;); while($pagecount- - 0) {cpdf_page_init($pdf, $pagecount+1, 0, 2 * ($radius + $margin), 2 * ($radius + $margin), 1.0); cpdf_set_page_animation($pdf, 4, 0.5, 0, 0, 0); / * wipe * / cpdf_translate($pdf, $radius + $margin, $radius + $margin); cpdf_save($pdf); cpdf_setrgbcolor($pdf, 0.0, 0.0, 1.0); / * minute strokes * / cpdf_setlinewidth($pdf, 2.0); for ($alpha = 0; $alpha 360; $alpha += 6) {cpdf_rotate($pdf, 6.0); cpdf_moveto($pdf, $radius, 0.0); cpdf_lineto($pdf, $radius-$margin / 3, 0.0); cpdf_stroke($pdf);} cpdf_restore($pdf); cpdf_save($pdf); / * 5 minute strokes * / cpdf_setlinewidth($pdf, 3.0); for ($alpha = 0; $alpha 360; $alpha += 30) {cpdf_rotate($pdf, 30.0); cpdf_moveto($pdf, $radius, 0.0); cpdf_lineto($pdf, $radius-$margin, 0.0); cpdf_stroke($pdf);} $ltime = getdate(); / * draw hour hand * / cpdf_save($pdf); cpdf_rotate($pdf, -(($ltime[&apos;minutes&apos;] / 60.0) + $ltime[&apos;hours&apos;] - 3.0) * 30.0); cpdf_moveto($pdf, -$radius / 10, -$radius / 20); cpdf_lineto($pdf, $radius / 2, 0.0); cpdf_lineto($pdf, -$radius / 10, $radius / 20); cpdf_closepath($pdf); cpdf_fill($pdf); cpdf_restore($pdf); / * draw minute hand * / cpdf_save($pdf); cpdf_rotate($pdf, -(($ltime[&apos;seconds&apos;] / 60.0) + $ltime[&apos;minutes&apos;] - 15.0) * 6.0); cpdf_moveto($pdf, -$radius / 10, -$radius / 20); cpdf_lineto($pdf, $radius * 0.8, 0.0); cpdf_lineto($pdf, -$radius / 10, $radius / 20); cpdf_closepath($pdf); cpdf_fill($pdf); cpdf_restore($pdf); / * draw second hand * / cpdf_setrgbcolor($pdf, 1.0, 0.0, 0.0); cpdf_setlinewidth($pdf, 2); cpdf_save($pdf); cpdf_rotate($pdf, -(($ltime[&apos;seconds&apos;] - 15.0) * 6.0)); cpdf_moveto($pdf, -$radius / 5, 0.0); cpdf_lineto($pdf, $radius, 0.0); cpdf_stroke($pdf); cpdf_restore($pdf); / * draw little circle at center * / cpdf_circle($pdf, 0, 0, $radius / 30); cpdf_fill($pdf); cpdf_restore($pdf); cpdf_finalize_page($pdf, $pagecount+1);} cpdf_finalize($pdf); Header(&quot;Content-type: application / pdf&quot;); cpdf_output_buffer($pdf); cpdf_close($pdf);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to use the CrackLib library to test the &apos;strength&apos; of a password.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>CrackLib will also give helpful diagnostic messages that will help &apos;strengthen&apos; the password.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information regarding CrackLib along with the library can be found at http: / /www.users.dircon.co.uk / ~crypto /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use these functions, you must compile PHP with Crack support by using the --with-crack[ =DIR] option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Passing anything else but a string or integer will return FALSE immediately.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>None besides functions from the standard C library which are always available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Builtin support for ctype is available with PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>C:\WINNT\SYSTEM32 or C:\WINDOWS\SYSTEM32)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are only available if the interpreter has been compiled with the --with-cybercash=[ DIR].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XV.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This function is currently not documented; only the argument list is available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta função não está documentada, somente a lista de argumentos está disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is not available on Windows platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to get the date and time from the server where your PHP scripts are running.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções data e hora</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use these functions to format the date and time in many different ways.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar estas funções para tratar com a data e a hora.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas funções te permitem conseguir a data e a hora do servidor onde o PHP está rodando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please keep in mind that these functions are dependent on the locale settings of your server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure to take daylight saving time and leap years into consideration when working with these functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Considerar especialmente horário-de-verão e anos bissextos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma biblioteca externa é necessária para compilar esta extensão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions build the foundation for accessing Berkeley DB style databases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Database (dbm-style) abstraction layer functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note: db2 conflicts with db3 and db4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota: db2 conflicts with db3 and db4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note: db3 conflicts with db2 and db4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota: db3 conflicts with db2 and db4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note: db4 conflicts with db2 and db3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota: db4 conflicts with db2 and db3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 5.0.0 there is a configuration check avoid such missconfigurations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The functions dba_open() and dba_popen() return a handle to the specified database file to access which is used by all other dba-function calls.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DBA example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to access records stored in dBase-format (dbf) databases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Choose any real SQL server instead; MySQL or Postgres are common choices with PHP. dBase support is here to allow you to import and export data to and from your web database, because the file format is commonly understood by Windows spreadsheets and organizers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable the bundled dbase library and to use these functions, you must compile PHP with the --enable-dbase option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to store records stored in a dbm-style database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>However, dbm support is deprecated and you are encourged to use the Database (dbm-style) abstraction layer functions instead.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition you must ensure support for an underlying database or you can use some sytem libraries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function dbmopen() returns an database identifier which is used by the other dbm-functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DBM example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XXII.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is EXPERIMENTAL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atenção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this extension at your own risk.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esteja avisado, e use este módulo por sua própria conta e risco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Concept asa always had an interest in supporting open source languages, db+ + has had Perl and Tcl call interfaces for years now and uses Tcl as its internal stored procedure language.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have installed db+ + in a different place you have add the installation path to the configure option like this: --with-dbplus= / your / installation / path.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A dbplus_relation is a handle to a stored relation or a relation generated as the result of a query.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>db+ + error codes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The dbx module is a database abstraction layer (db&apos;X&apos;, where&apos;X &apos;is a supported database).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get other supported databases to work with the dbx-module refer to their specific documentation.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directive can be overridden with a flag to dbx_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is not available on Windows platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to configure PHP with --enable-dio.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One resource type is defined by this extension: a file descriptor returnded by dio_open().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For related functions such as dirname(), is_dir(), mkdir(), and rmdir(), see the Filesystem section.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para funções relacionadas como dirname(), is_dir(), mkdir() e rmdir(), veja a seção Filesystem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DOM XML functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore, if you want to read an XML file and write a modified version, use DomDocument_create_element(), DomDocument_create_text_node(), set_attribute(), etc. and finally the DomDocument_dump_mem() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>C:\WINNT\SYSTEM32 or C:\WINDOWS\SYSTEM32)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Deprecated functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 9.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 11.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 11.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $xmlstr = &quot;?xml version=&apos;1.0 &apos;standalone=&apos;yes&apos;? !DOCTYPE chapter SYSTEM&apos; / share / sgml / Norman_Walsh / db3xml10 / db3xml10.dtd &apos;[!ENTITY sp \&quot;spanish\&quot;] !- - lsfj - - chapter language=&apos;en&apos; title language=&apos;en &apos;Title / title para language=&apos;ge&apos; amp;sp; !- - comment - - informaltable ID=&apos;findme &apos;language=&apos; amp;sp; &apos;tgroup cols=&apos;3&apos; tbody row entry a1 / entry entry morerows=&apos;1 &apos;b1 / entry entry c1 / entry / row row entry a2 / entry entry c2 / entry / row row entry a3 / entry entry b3 / entry entry c3 / entry / row / tbody / tgroup / informaltable / para / chapter &quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DomDocumentType - entities</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XXVI. .NET functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These are functions dealing with error handling and logging.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Error Handling and Logging Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The error reporting functions allow you to customize what level and kind of error feedback is given, ranging from simple notices to customized functions returned during errors.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is to make it easier to find scripts that need to be rewritten to using the string concatenator instead (.).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that only &apos;_BAR_&apos;, &apos;~&apos;,&apos; !&apos;, and &apos;&apos; will be understood within php.ini, however, and that no bitwise operators will be understood within php3.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / we will do our own error handling error_reporting( 0); / / user defined error handling function function userErrorHandler ($errno, $errmsg, $filename, $linenum, $vars) {/ / timestamp for the error entry $dt = date(&quot;Y-m-d H:i:s (T)&quot;); / / define an assoc array of error string / / in reality the only entries we should / / consider are 2,8,256,512 and 1024 $errortype = array (1 = &quot;Error&quot;, 2 = &quot;Warning&quot;, 4 = &quot;Parsing Error&quot;, 8 = &quot;Notice&quot;, 16 = &quot;Core Error&quot;, 32 = &quot;Core Warning&quot;, 64 = &quot;Compile Error&quot;, 128 = &quot;Compile Warning&quot;, 256 = &quot;User Error&quot;, 512 = &quot;User Warning&quot;, 1024= &quot;User Notice &quot;); / / set of errors for which a var trace will be saved $user_errors = array(E_USER_ERROR, E_USER_WARNING, E_USER_NOTICE); $err =&quot; errorentry \n&quot;; $err .= &quot;\t datetime &quot;.$dt. &quot;/ datetime \n&quot;; $err .= &quot;\t errornum &quot;.$errno.&quot; / errornum \n&quot;; $err .= &quot;\t errortype &quot;.$errortype[$errno]. &quot;/ errortype \n&quot;; $err .= &quot;\t errormsg &quot;.$errmsg.&quot; / errormsg \n&quot;; $err .= &quot;\t scriptname &quot;.$filename. &quot;/ scriptname \n&quot;; $err .= &quot;\t scriptlinenum &quot;.$linenum.&quot; / scriptlinenum \n&quot;; if (in_array($errno, $user_errors)) $err .= &quot;\t vartrace &quot;.wddx_serialize_value($vars ,&quot;Variables&quot;). &quot;/ vartrace \n&quot;; $err .=&quot; / errorentry \n\n&quot;; / / for testing / / echo $err; / / save to the error log, and e-mail me if there is a critical user error error_log($err, 3, &quot;/ usr / local / php4 / error.log&quot;); if ($errno == E_USER_ERROR) mail(&quot;phpdev@example.com&quot; ,&quot;Critical User Error&quot;,$err);} function distance ($vect1, $vect2) {if (!is_array($vect1) _BAR_ _BAR_ !is_array($vect2)) {trigger_error(&quot;Incorrect parameters, arrays expected&quot;, E_USER_ERROR); return NULL;} if (count($vect1) != count($vect2)) {trigger_error(&quot;Vectors need to be of the same size&quot;, E_USER_ERROR); return NULL;} for ($i=0; $i count($vect1); $i++) {$c1 = $vect1[$i]; $c2 = $vect2[$i]; $d = 0.0; if (!is_numeric($c1)) {trigger_error(&quot;Coordinate $i in vector 1 is not a number, using zero&quot;, E_USER_WARNING); $c1 = 0.0;} if (!is_numeric($c2)) {trigger_error(&quot;Coordinate $i in vector 2 is not a number, using zero&quot;, E_USER_WARNING); $c2 = 0.0;} $d += $c2*$c2 - $c1*$c1;} return sqrt($d);} $old_error_handler = set_error_handler(&quot;userErrorHandler&quot;); / / undefined constant, generates a warning $t = I_AM_NOT_DEFINED; / / define some &quot;vectors&quot; $a = array(2,3 ,&quot;foo&quot;); $b = array(5.5, 4.3, -1.6); $c = array (1,-3); / / generate a user error $t1 = distance($c,$b) .&quot;\n&quot;; / / generate another user error $t2 = distance($b ,&quot;i am not an array&quot;) .&quot;\n&quot;; / / generate a warning $t3 = distance($a,$b) .&quot;\n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to access FrontBase database servers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>FrontBase Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will force PHP to use the client libraries installed by FrontBase, avoiding any conflicts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_SYSTEM</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Forms Data Format (FDF) is a format for handling forms within PDF documents.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The FDF toolkit library is available in binary form only, platforms supported by Adobe are Win32, Linux, Solaris and AIX.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>C:\WINNT\SYSTEM32 or C:\WINDOWS\SYSTEM32)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A fdf resource is a handle to an opened fdf file. fdf resources may be obtained using fdf_create(), fdf_open() and fdf_open_string().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>(integer)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow read-only access to data stored in filePro databases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma biblioteca externa é necessária para compilar esta extensão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Filesystem and Streams Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comportamento dessas funções podem ser modificado pelas configurações do php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração do Filesystem e Streams</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>allow_url_fopen</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alterável</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option enables the URL-aware fopen wrappers that enable accessing URL object like files.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção ativa o dispositivo URL fopen wrappers que permite o acesso a objetos URL como arquivos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default wrappers are provided for the access of remote files using the ftp or http protocol, some extensions like zlib may register additional wrappers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>São disponibilizados por padrão wrappers para acesso de arquivos remotos utilizando os protocolos FTP ou HTTP, e algumas estensões como a zlib podem registar wrappers adicionais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option was introduced immediately after the release of version 4.0.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção foi introduzida imediatamente antes da liberação da versão 4.0.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For versions up to and including 4.0.3 you can only disable this feature at compile time by using the configuration switch --disable-url-fopen-wrapper.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Até essa versão e incluindo a 4.0.3, você somente podia desabilitar este recurso na compilação, usando a opção --disable-url-fopen-wrapper.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows versions prior to PHP 4.3, the following functions do not support remote file accesing: include(), include_once(), require(), require_once() and the imagecreatefromXXX functions in the Reference XLI, Image functions extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nas versões Windows anterioes a PHP 4.3, as funções seguintes não suportavam acesso de arquivos remotos: include(), include_once(), require(), require_once() e as funções imagecreatefromXXX da extensão Referência XLI, Image functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Define the user agent for PHP to send.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Define o user agent que o PHP irá enviar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Default timeout (in seconds) for socket based streams.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Timeout padrão (em segundos) para streams baseados em socket.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This configuration option was introduced in PHP 4.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção de configuração foi incluida no PHP 4.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Define the anonymous ftp password (your email address).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Define a senha do FTP anonimo (seu endereço de e-mail).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When turned on, PHP will examine the data read by fgets() and file() to see if it is using Unix, MS-Dos or Macintosh line-ending conventions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando ativo, o PHP irá examinar os dados lidos por fgets() e file() para verificar se está sendo utilizado a convensão de fim de linha Unix, MS-DOS ou Macintosh.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This enables PHP to interoperate with Macintosh systems, but defaults to Off, as there is a very small performance penalty when detecting the EOL conventions for the first line, and also because people using carriage-returns as item separators under Unix systems would experience non-backwards-compatible behaviour.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto ativa a interoperabilidade do PHP com sistemas Macintosh, mas seu padrão é Off, porque isso causa uma pequena perda de performance na detecção da convenção de fim de linha num primeiro momento e porque as pessoas que utilizam o fim de linha como separadores de itens sob sistemas Unix podem experimentar problemas de falta de compatibilidade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This configuration option was introduced in PHP 4.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção de configuração foi introduzida no PHP 4.3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For related functions, see also the Directory and Program Execution sections.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a list and explanation of the various URL wrappers that can be used as remote files, see also Appendix I.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma lista e descrição dos vários wrappers URL que podem ser utilizados como arquivos remotos, veja em Apêndice I.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FriBiDi is a free implementation of the Unicode Bidirectional Algorithm.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You must download and install the FriBiDi package.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable FriBiDi support in PHP you must compile --with-fribidi[ =DIR] where DIR is the FriBiDi install directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>FTP example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see the gettext documentation for your system for a thorough explanation of these functions or view the docs at http: / /www.gnu.org / manual / gettext / index.html.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 4.2.3 the name changed to libintl-1.dll</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to work with arbitrary-length integers using the GNU MP library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>GMP functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most GMP functions accept GMP number arguments, defined as resource below.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some functions may require more recent version of the GMP library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to have these functions available, you must compile PHP with GMP support by using the --with-gmp option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Factorial function using GMP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyperwave has been developed at IICM in Graz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hyperwave API functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Certain attributes are always set by the Hyperwave server, other may be modified by the user.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to activate the hwapi support in PHP you will have to install the Hyperwave SDK first.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After installing the Hyperwave SDK, configure PHP with --with-hwapi[ =DIR].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Integration with Apache</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The integration with Apache and possible other servers is already described in the Hyperwave module which has been the first extension to connect a Hyperwave Server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Hyperwave has been developed at IICM in Graz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hyperwave functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Number of object records.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension needs a Hyperwave server downloadable from http: / /www.hyperwave.com /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As an alternative to the Rewrite Engine, you can also consider using the Apache ErrorDocument directive, but be aware, that ErrorDocument redirected pages cannot receive POST data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>InterBase is a popular database put out by Borland / Inprise.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>InterBase functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>magic_quotes_sybase = On</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therfore you don &apos;t need to copy gds32.dll from the DLL folder.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_ALL</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module contains an interface to the iconv library functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 4.2.1 the name changed to iconv.dll</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2. iconv constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 2. iconv constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Writing implementation-dependent scripts with these constants should be discouraged.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>IUS 9.x support is partly finished: the new data types are there, but SLOB and CLOB support is still under construction.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure that the &quot;INFORMIXDIR&quot; variable has been set, and that $INFORMIXDIR / bin is in your PATH before you run the &quot;configure &quot;script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To be able to use the functions defined in this module you must compile your PHP interpreter using the configure line --with_informix[ =DIR], where DIR is the Informix base install directory, defaults to nothing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can override this setting at runtime with ifx_nullformat().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is not limited to creating just HTML output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Read requirements section about how to expand image capabilities to read, write and modify images and to read meta data of pictures taken by digital cameras.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable support for native TrueType string function add --enable-gd-native-ttf.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default is JIS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PNG creation with PHP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are not limited to the IMAP protocol, despite their name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>IMAP, POP3 and NNTP functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is due to the fact that they both share the same internal symbol.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The probably best known function of PHP - phpinfo() - can be found here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If magic_quotes_sybase is also on, a single-quote is escaped with a single-quote instead of a backslash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 3. phpinfo() constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 3. phpinfo() constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to access Ingres II database servers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you already used PHP extensions to access other database servers, note that Ingres doesn&apos; t allow concurrent queries and / or transaction over one connection, thus you won&apos;t find any result or transaction handle in this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is EXPERIMENTAL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este módulo é EXPERIMENTAL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Adding &quot;export II_SYSTEM=&quot; / home / ingres / II&quot; in the script that starts Apache, just before launching httpd, should be fine.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With IRCG you can rapidly stream XML data to thousands of concurrently connected users.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>IRC Gateway Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>We urge you to use the provided installation script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable this module on a Windows environment, you must copy jvm.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:C:\WINNT\SYSTEM32 or C:\WINDOWS\SYSTEM32)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Java Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>LDAP is the Lightweight Directory Access Protocol, and is a protocol used to access &quot;Directory Servers&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>LDAP functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Netscape SDK contains a helpful Programmer &apos;s Guide in HTML format.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need to get and compile LDAP client libraries from either the University of Michigan ldap-3.3 package or the Netscape Directory SDK 3.0 to compile PHP with LDAP support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / basic sequence with LDAP is connect, bind, search, interpret search / / result, close connection echo &quot;h3 LDAP query test / h3&quot;; echo &quot;Connecting.. .&quot;; $ds=ldap_connect(&quot;localhost&quot;); / / must be a valid LDAP server! echo &quot;connect result is &quot;.$ds. &quot;p&quot;; if ($ds) {echo &quot;Binding.. .&quot;; $r=ldap_bind($ds); / / this is an &quot;anonymous &quot;bind, typically / / read-only access echo &quot;Bind result is &quot;.$r.&quot; p &quot;; echo &quot;Searching for (sn=S*).. .&quot;; / / Search surname entry $sr=ldap_search($ds ,&quot;o=My Company, c=US&quot;, &quot;sn=S*&quot;); echo &quot;Search result is &quot;.$sr.&quot; p &quot;; echo &quot;Number of entires returned is &quot;.ldap_count_entries($ds,$sr).&quot; p &quot;; echo &quot;Getting entries... p&quot;; $info = ldap_get_entries($ds, $sr); echo &quot;Data for &quot;.$info[&quot;count&quot;]. &quot;items returned: p&quot;; for ($i=0; $i $info[&quot;count&quot;]; $i++) {echo &quot;dn is: &quot;. $info[$i][&quot;dn&quot;].&quot; br &quot;; echo &quot;first cn entry is:&quot;. $info[$i][&quot;cn&quot;][0]. &quot;br&quot;; echo &quot;first email entry is: &quot;. $info[$i][&quot;mail&quot;][0].&quot; p &quot;;} echo &quot;Closing connection&quot;; ldap_close($ds);} else {echo&quot; h4 Unable to connect to LDAP server / h4 &quot;;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using the PHP LDAP calls</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The mail() function allows you to send mail.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XLIX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções de E-Mail</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mail() te permite enviar email</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changeable</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma biblioteca externa é necessária para compilar esta extensão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;localhost&quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>smtp_port</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_ALL</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>NULL</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Diretivas de configuração para Mail</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sendmail_path</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apenas para usuários de Windows:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_SYSTEM</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP usaria nome DNS ou endereço IP do servidor SMTP para enviar email com a função mail().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apenas usuários de Windows:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DNS name or IP address of the SMTP server PHP should use for mail sent with the mail() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Número da porta para conectar ao servidor especificado com a configuração de SMTP quando enviando mail com mail(); por definição 25.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Used under Windows only:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apenas disponível desde PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only available since PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O &quot;From:&quot; endereço de email seria usado no envio de PHP em Windows.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Where the sendmail program can be found, usually / usr / sbin / sendmail or / usr / lib / sendmail. configure does an honest attempt of locating this one for you and set a default, but if it fails, you can set it here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sistemas não utilizando sendmail definiriam esta diretiva para sendmail wrapper / replacement deles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Systems not using sendmail should set this directive to the sendmail wrapper / replacement their mail system offers, if any.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, Qmail usuários pode normalmente definí-los para / var / qmail / bin / sendmail ou / var / qmail / bin / qmail-inject.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, Qmail users can normally set it to / var / qmail / bin / sendmail or / var / qmail / bin / qmail-inject.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>qmail-inject does not require any option to process mail correctly.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esteja avisado, e use este módulo por sua própria conta e risco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this extension at your own risk.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Returns an array listing filename information</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These math functions will only handle values within the range of the integer and float types on your computer (this corresponds currently to the C types long resp. double).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas funções matemáticas somente suportam valores dentro do tamanho integer and float do seu computador. (estes correspondem atualmente aos tipos do C long e double) Se você precisa manipular números maiores, procure funções de matemática com precisão arbitrária.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you need to handle bigger numbers, take a look at the arbitrary precision math functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma biblioteca externa é necessária para compilar esta extensão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há nenhuma instalação nescessária para utilizar estas funções, elas fazem parte do núcleo do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extenção não define nenhum parâmetro de configuração no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Math constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes matemáticas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sqrt( pi) [4.0.2]</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>raiz_quadrada( pi) [4.0.2]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>2 / sqrt( pi)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>2 / raiz_quadrada( pi)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sqrt( 2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>raiz_quadrada( 2)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>sqrt( 3) [4.0.2]</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>raiz_quadrada( 3) [4.0.2]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>1 / sqrt( 2)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>1 / raiz_quadrada( 2)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Euler constant [4.0.2]</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constante de Euler [4.0.2]</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are many languages in which all characters can be expressed by single byte.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Multi-Byte String Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the PostgreSQL manual for details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Enable regular expression functions with multibyte character support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. php.ini setting example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1. php.ini setting example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. php.ini setting for EUC-JP users</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. php.ini setting for EUC-JP users</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. php.ini setting for SJIS users</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. php.ini setting for SJIS users</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>;; Enable Output Buffering output_buffering = On;; Set mb_output_handler to enable output conversion output_handler = mb_output_handler;; Set HTTP header charset default_charset = Shift_JIS;; Set default language to Japanese mbstring.language = Japanese;; Set http input encoding conversion to auto mbstring.http_input = auto;; Convert to SJIS mbstring.http_output = SJIS;; Set internal encoding to EUC-JP mbstring.internal_encoding = EUC-JP;; Do not print invalid characters mbstring.substitute_character = none</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5. php.ini setting example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5. php.ini setting example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / / Enable output character encoding conversion only for this page / / Set HTTP output character encoding to SJIS mb_http_output( &apos;SJIS&apos;); / / Start buffering and specify &quot;mb_output_handler &quot;as / / callback function ob_start(&apos;mb_output_handler&apos;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Supported Character Encodings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note: &quot;Supported character encoding&quot; does not mean that it works as internal character code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota: &quot;Supported character encoding&quot; does not mean that it works as internal character code.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MCAL stands for Modular Calendar Access Library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>MCAL functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Grab the latest version from http: / /mcal.chek.com / and compile and install it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>After you installed the mcal library, to get these functions to work, you have to compile PHP -with-mcal[ =DIR].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Additionally, it supports RC6 and IDEA which are considered &quot;non-free&quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure you compile libmcrypt with the option --disable-posix-threads.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alternatively, you can transmit the IV together with the encrypted data (see chapter 9.3 of Applied Cryptography by Schneier (ISBN 0-471-11709-9) for a discussion of this topic).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions interface the MCVE API (libmcve), allowing you to work directly with MCVE from your PHP scripts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>MCVE Payment Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are intended to work with mhash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mhash - Funções de hash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Mhash can be used to create checksums, message digests, message authentication codes, and more.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essas funções são planejadas para trabalhar com mhash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is an interface to the mhash library. mhash supports a wide variety of hash algorithms such as MD5, SHA1, GOST, and many others.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma interface para a biblioteca mhash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a complete list of supported hashes, refer to the documentation of mhash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O mhash suporta uma grande variedade de algoritmos de hash como MD5, SHA1, GOST e muitos outros.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The general rule is that you can access the hash algorithm from PHP with MHASH_HASHNAME.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para uma lista completa das hashs suportadas, verifique a documentação do mhash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, to access TIGER you use the PHP constant MHASH_TIGER.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A regra geral é: você pode acessar o algoritmo de hash a partir do PHP com MHASH_NOMEdoHASH, Por exemplo, para acessar o algoritmo TIGER, você utiliza a constante MHASH_TIGER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use it, download the mhash distribution from its web site and follow the included installation instructions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para usá-las, faça o download da distribuição do mhash em http: / /mhash.sourceforge.net / e siga as instruções de instalação inclusas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You need to compile PHP with the --with-mhash[ =DIR] parameter to enable this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você precisará compilar o PHP com o parametro --with-mhash[ =DIR] para habilitar esta extensão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the mhash install directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>DIR é o diretório de instalação do mhash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a list of hashes which are currently supported by mhash.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui está a lista de hashes que são atualmente suportadas por mhash.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If a hash is not listed here, but is listed by mhash as supported, you can safely assume that this documentation is outdated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se uma hash não está listada aqui, mas é listada pelo mhash como suportada, você pode assumir seguramente que esta documentação está desatualizada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Compute the MD5 digest and hmac and print it out as hex</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Calcular o MD5 digest e hmac e imprimir como hex</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $input = &quot;what do ya want for nothing ?&quot;; $hash = mhash (MHASH_MD5, $input); print &quot;The hash is &quot;.bin2hex ($hash).&quot; br / \n&quot;; $hash = mhash (MHASH_MD5, $input, &quot;Jefe&quot;); print &quot;The hmac is &quot;.bin2hex ($hash). &quot;br / \n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $input = &quot;what do ya want for nothing ?&quot;; $hash = mhash (MHASH_MD5, $input); print &quot;A hash é &quot;.bin2hex ($hash).&quot; br / \n&quot;; $hash = mhash (MHASH_MD5, $input, &quot;Jefe&quot;); print &quot;A hmac é &quot;.bin2hex ($hash). &quot;br / \n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will produce:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este código irá produzir:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The hash is d03cb659cbf9192dcd066272249f8412 The hmac is 750c783e6ab0b503eaa86e310a5db738</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A hash é d03cb659cbf9192dcd066272249f8412 A hmac é 750c783e6ab0b503eaa86e310a5db738</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the source code for further historic and copyright information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This file also part of most recent Linux distributions and usually stored in the / usr / share / misc directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ming functions for Flash</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Ming provides some insulation from the mundane details of the SWF file format, wrapping the movie elements in PHP objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Also, Ming is still being maintained; if there&apos;s a feature that you want to see, just let us know ming@opaque.net.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As classes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão for compilada junto com o PHP, ou carregada dinamicamente na execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Ming was added in PHP 4.0.5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFBitmap - getWidth - - Returns the bitmap &apos;s width.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use Ming with PHP, you first need to build and install the Ming library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - move - - Moves object in relative coordinates.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Source code and installation instructions are available at the Ming home page: http: / /ming.sourceforge.net / along with examples, a small tutorial, and the latest news.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - multColor - - Multiplies the item &apos;s color transform.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Download the ming archive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - scale - - Scales the object in relative coordinates.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unpack the archive.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - setDepth</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Go in the Ming directory. make. make install.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFDisplayItem - - Creates a new displayitem object.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This will build libming.so and install it into / usr / lib /, and copy ming.h into / usr / include /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFMovie - nextframe - - Moves to the next frame of the animation.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Edit the PREFIX= line in the Makefile to change the installation directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFMovie - remove - - Removes the object instance from the display list.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1. built into php (unix)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFMovie - setbackground - - Sets the background color.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>mkdir phpdir / ext / ming cp php_ext / * phpdir / ext / ming cd phpdir. / buildconf. / configure --with-ming other config options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFMovie - setframes - - Sets the total number of frames in the animation.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Now either just add extension=php_ming.so to your php.ini file, or put dl( &apos;php_ming.so&apos;); at the head of all of your Ming scripts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFShape - addFill - - Adds a solid fill to the shape.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFShape - movePenTo - - Moves the shape &apos;s pen.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFShape - setRightFill - - Sets right rasterizing color.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The classes below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setLeftMargin - - Sets the left margin width of the text field.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Ming introduces 13 new objects in PHP, all with matching methods and attributes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - setMargins - - Sets the margins width of the text field.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use them, you need to know about objects.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SWFTextField - - Creates a text field object</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions were placed here because none of the other categories seemed to fit.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no installation needed to use these functions; they are part of the PHP core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comportamento dessas funções podem ser modificado pelas configurações do php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Misc.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de Configuração</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Changeable</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Modificável</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui esta uma pequena explicação das diretivas de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TRUE by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>TRUE por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If changed to FALSE scripts will be terminated as soon as they try to output something after a client has aborted their connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja também ignore_user_abort().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ignore_user_abort().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cores para o modo de destaque da sintaxe.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Colors for Syntax Highlighting mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Qualquer coisa aceitável em font color=&quot;?????? &quot;deve funcionar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Anything that&apos; s acceptable in font color=&quot;?????? &quot;would work.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome (ex: browscap.ini )e localização do arquivo com as capacidades do browser.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name (e.g.: browscap.ini )and location of browser capabilities file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also get_browser().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Thus, if you use mnoGoSearch with MySQL, during PHP configuration you have to indicate the directory of your MySQL installation, that was used during mnoGoSearch configuration, i.e. for example: --with-mnogosearch --with-mysql= / usr.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>msession is an interface to a high speed session daemon which can run either locally or remotely.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mohawk Software session handler functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is not available on Windows platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable Msession support configure PHP --with-msession[ =DIR], where DIR is the Msession install directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information about mSQL can be found at http: / /www.hughes.com.au /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 1. mSQL configuration options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 1. mSQL configuration options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of mSQL connections per process, including persistent connections.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to access MS SQL Server database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções Microsoft SQL Server</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Requirements for WIn32 platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The extension requires the MS SQL Client Tools to be installed on the system where PHP is installed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Client Tools can be installed from the MS SQL Server CD or by copying ntwdblib.dll from \winnt\system32 on the server to \winnt\system32 on the PHP box.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar a extensão Sybase para conectar com banco de dados MSSQL de outras plataformas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Copying ntwdblib.dll will only provide access.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Requirements for Unix / Linux platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A extensão requer que as ferramentas de cliente do MS SQL sejam instaladas no sistema onde o PHP esta instalado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Source code and installation instructions are available at the FreeTDS home page: http: / /www.freetds.org /</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Copiar ntwdblib.dll irá somente prover acesso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The MSSQL extension is enabled by adding extension=php_mssql.dll to php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to compile PHP with --with-mssql[ =DIR], where DIR is the FreeTDS install prefix.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MS SQL Server configuration options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração do MS SQL Server</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>LXV. muscat functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to access MySQL database servers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>More information about MySQL can be found at http: / /www.mysql.com /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas funções permitem acessar os servidores de banco de dados do MYSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Documentation for MySQL can be found at http: / /www.mysql.com / documentation /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Maiores informações podem ser encontradas em http: / /www.mysql.com /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to have these functions available, you must compile PHP with MySQL support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Documentação para MySQL pode ser encontrada em http: / /www.mysql.com / documentation /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>By using the --with-mysql[ =DIR] configuration option you enable PHP to access MySQL databases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para ter estas funções disponiveis, você deve compilar o PHP com suporte a MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use this option without specifying the path to MySQL, PHP will use the built-in MySQL client libraries.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando a opção de configuração --with-mysql você permite ao PHP acessar banco de dados do MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>With PHP 4 MySQL support is always enabled; if you don&apos;t specify the configure option, the bundled libraries are used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você usar esta opção sem especificar o caminho para o MySQL, o PHP usará as bibliotecas do cliente que vem com ele.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Users who run other applications that use MySQL (for example, running PHP 3 and PHP 4 as concurrent apache modules, or auth-mysql) should always specify the path to MySQL: --with-mysql= / path / to / mysql.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com o PHP4, o suporte a MySQL esta sempre ativado; se você não especificar a opção de configuração, as bibliotecas que vem com o PHP serão usadas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usuários que usam outras aplicações que usam MySQL (por exemplos, executando PHP3 e PHP4 como modulos do apache, ou auth-mysql) devem sempre espicificar o caminho para o MySQL: --with-mysql= / caminho / para / mysql.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not need to load any additional extension in order to use these functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto irá forçar o PHP a usar as bibliotecas de cliente instaladas com o MySQL, evitando quaisquer conflitos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Crashes and startup problems of PHP may be encountered when loading this extension in conjunction with the recode extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a extensão recode para maiores informações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the recode extension for more information.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração do MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether to allow persistent connections to MySQL.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando permitir conexões persistentes para o MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of persistent MySQL connections per process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número máximo de conexões persistentes com o MySQL por processo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of MySQL connections per process, including persistent connections.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número maximo de conexões com o MYSQL por processo, incluindo conexões persistentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default TCP port number to use when connecting to the database server if no other port is specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número padrão da porta TCP a usar quando conectar com o servidor do banco de dados se nenhuma outra porta for especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If no default is specified, the port will be obtained from the MYSQL_TCP_PORT environment variable, the mysql-tcp entry in / etc / services or the compile-time MYSQL_PORT constant, in that order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se nenhum padrão for especificado, aporta será obtida da variavel de ambiente MYSQL_TCP_PORT, da entrada mysql-tcp em / etc / services ou da constante da compilação MYSQL_PORT, nesta ordem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Win32 will only use the MYSQL_PORT constant.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Windows irá usar somente a constante MYSQL_PORT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default socket name to use when connecting to a local database server if no other socket name is specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome padrão do socket para usar quando conectar com um servidor de banco de dados local se outro nome de socket não for especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default server host to use when connecting to the database server if no other host is specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O servidor padrão para usar quando conectar com um servidor de banco de dados se outro servidor não for encontrado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Doesn &apos;t apply in safe mode.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não se aplica em safe mode.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default user name to use when connecting to the database server if no other name is specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome padrão de usuário para conectar ao servidor de banco de dados se outro nome não for especificado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default password to use when connecting to the database server if no other password is specified.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A senha padrão para usar ao conectar ao servidor de banco de dados se outra senha não for especificada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Connect timeout in seconds.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Limite de tempo da conexão em segundos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Linux this timeout is also used for waiting for the first answer from the server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No Linux este limite é também usado para a espera da primeira resposta do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are two resource types used in the MySQL module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há dois tipos de recursos usados no modulo MySql.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The first one is the link identifier for a database connection, the second a resource which holds the result of a query.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O primeiro é a identificação do link da conexão com o banco de dados, o segundo é o que guarda o resultado de uma query.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following constants are defined:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde PHP 4.3.0 é possivel especificar opções adicionais para as funções mysql_connect() and mysql_pconnect() As seguintes constantes são definidas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL client constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constante do cliente MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>constant</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>constante</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>description</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>descrição</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>use compression protocol</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>usa o protocolo de compressão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Allow space after function names</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Permite espaço após o nome de função</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Allow interactive_timeout seconds (instead of wait_timeout) of inactivity before closing the connection.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Permite interactive_timeout segundos (ao inves de wait_timeout) de inatividade antes de fechar a conexão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The function mysql_fetch_array() uses a constant for the different types of result arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A função mysql_fetch_array() usa uma constante para cada diferentes tipos de matrizes de resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following constants are defined:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As seguintes constantes são definidas:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Columns are returned into the array having the fieldname as the array index.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As colunas são retornadas na matriz tendo o nome do campo como índice da matriz.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Columns are returned into the array having both a numerical index and the fieldname as the array index.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As colunas são retornadas na matriz tendo ambos os indices: um numérico e o um com o nome do campo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Columns are returned into the array having a numerical index to the fields.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As colunas são retornadas numa matriz tendo um indice numérico dos campos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This index starts with 0, the first field in the result.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este indice começa com 0, o primeiro campo no resultado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This simple example shows how to connect, execute a query, print resulting rows and disconnect from a MySQL database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este exemplo simples mostra como conectar, executar uma query, mostrar o resultado e desconectar do banco de dados do MySQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>MySQL extension overview example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo da extensão do MySQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php / * Connecting, selecting database * / $link = mysql_connect( &quot;mysql_host&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Could not connect&quot;); print &quot;Connected successfully&quot;; mysql_select_db(&quot;my_database&quot;) or die(&quot;Could not select database&quot;); / * Performing SQL query * / $query = &quot;SELECT * FROM my_table&quot;; $result = mysql_query($query) or die(&quot;Query failed&quot;); / * Printing results in HTML * / print &quot;table \n&quot;; while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {print &quot;\t tr \n&quot;; foreach ($line as $col_value) {print &quot;\t\t td $col_value / td \n&quot;;} print &quot;\t / tr \n&quot;;} print&quot; / table \n&quot;; / * Free resultset * / mysql_free_result($result); / * Closing connection * / mysql_close($link);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php / * Conectando, escolhendo o banco de dados * / $link = mysql_connect( &quot;mysql_host&quot;, &quot;mysql_user&quot;, &quot;mysql_password&quot;) or die(&quot;Não pude conectar&quot;); print &quot;Conexão bem sucedida&quot;; mysql_select_db(&quot;my_database&quot;) or die(&quot;Não pude selecionar o banco de dados&quot;); / * Fazendo a query SQL* / $query = &quot;SELECT * FROM my_table&quot;; $result = mysql_query($query) or die(&quot;Query falhou&quot;); / * Mostrando os resultados em HTML * / print &quot;table \n&quot;; while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {print &quot;\t tr \n&quot;; foreach ($line as $col_value) {print &quot;\t\t td $col_value / td \n&quot;;} print &quot;\t / tr \n&quot;;} print&quot; / table \n&quot;; / * Liberando o resultado * / mysql_free_result($result); / * Fechando a conexão * / mysql_close($link);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ncurses (new curses) is a free software emulation of curses in System V Rel 4.0 (and above).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ncurses terminal screen control functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Download the latest version from the ftp: / /ftp.gnu.org / pub / gnu / ncurses / or from an other GNU-Mirror.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to compile the CGI or CLI version of PHP with --with-ncurses[ =DIR].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2. ncurses color constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 2. ncurses color constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>magenta - supported when terminal is in color mod</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Keys</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 3. ncurses key constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 3. ncurses key constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4. mouse constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 4. mouse constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Network Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comportamento dessas funções podem ser modificado pelas configurações do php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>At runtime, you can define these variables by calling define_syslog_variables().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2. openlog() Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 2. openlog() Options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 3. syslog() Priorities (in descending order)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 3. syslog() Priorities (in descending order)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 4. dns_get_record() Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 4. dns_get_record() Options</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>None besides functions from standard Unix libraries which are always available (either libc or libnsl, configure will detect which one to use).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To get these functions to work, you have to configure PHP with --enable-yp.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lotus Notes functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this extension at your own risk.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Specify the name of the note.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>LXX.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In fact object aggregation can be more flexible, in which we can select what methods or properties to &quot;inherit&quot; in the aggregated object.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 3. storage_classes.inc</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3. storage_classes.inc</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. test_aggregation.php</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4. test_aggregation.php</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions allow you to access Oracle8 and Oracle7 databases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Oracle 8 functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It supports binding of global and local PHP variables to Oracle placeholders, has full LOB, FILE and ROWID support and allows you to use user-supplied define variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that on some systems like UnixWare it is libthread instead of libpthread.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You have to compile PHP with the option --with-oci8[ =DIR], where DIR defaults to your environmment variable ORACLE_HOME.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extenção não define nenhum parâmetro de configuração no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Specifies the number of bytes returned to variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Handling of binary data.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Returns a result identifier containing the information.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP-4.0.4pl1 requires OpenSSL = 0.9.6, but PHP-4.0.5 and greater will also work with OpenSSL = 0.9.5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that it is possible to override the default path from the script using the configargs of the functions that require a configuration file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extenção não define nenhum parâmetro de configuração no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Key / Certificate parameters</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For private keys, you may also use the syntax array( $key, $passphrase) where $key represents a key specified using the file: / / or textual content notation above, and $passphrase represents a string containing the passphrase for that private key</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Certificate Verification</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension adds support for Oracle database server access.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Output Control functions allow you to control when output is sent from the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Output Control functions do not affect headers sent using header() or setcookie(), only functions such as echo() and data between blocks of PHP code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This value defaults to TRUE when operating under the CLI SAPI.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also ob_implicit_flush().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Output Control example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When upgrading from PHP 4.1 (and 4.2) to 4.3 that due to a bug in earlier versions you must ensure that implict_flush is OFF in your php.ini, otherwise any output with ob_start() will be not be hidden from output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The purpose of this extension is to allow overloading of object property access and method calls.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sobrecarga de propriedades e métodos de objetos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Only one function is defined in this extension, overload() which takes the name of the class that should have this functionality enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O propósito desta extensão é permitir a sobrecarga de propriedades de acesso e metodos de objetos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The class named has to define appropriate methods if it wants to have this functionality: __get(), __set() and __call() respectively for getting / setting a property, or calling a method.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A classe especificada tem que definir os metodos para ter esta funcionalidade: __get(), __set() e __call() respectivamente para leitura / escrita das propriedades, ou chamar um metodo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This way overloading can be selective.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desta forma a sobrecarga pode ser seletiva:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Inside these handler functions the overloading is disabled so you can access object properties normally.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dentro destas funções a sobrecarga é desabilitada de forma que você possa acessar propriedades do objeto normalmente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this extension at your own risk.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso quer dizer que o comportamento neste módulo -- - incluindo suas funções e seus nomes, e TUDO mais que está documentado sobre esse módulo -- - poderá mudar em futuras versões do PHP, SEM QUALQUER NOTIFICAÇÃO.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esteja avisado, e use este módulo por sua própria conta e risco.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use these functions, you must compile PHP with the --enable-overload In order to use these functions, you must compile PHP with the --enable-overload option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma biblioteca externa é necessária para compilar esta extensão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PHP 4.3.0 this extension is enabled by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not need to load any additional extension in order to use these functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extenção não define nenhum parâmetro de configuração no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Builtin support for overload is available with PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no resource types defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhuma constante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no constants defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some simple examples on using the overload() function:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alguns exemplos simples da utilização da função overload():</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Overloading a PHP class</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sobrecarga de uma classe no PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php class OO {var $a = 111; var $elem = array(&apos;b &apos;= 9, &apos;c&apos; = 42); / / Callback method for getting a property function __get($prop_name, $prop_value) {if (isset($this - elem[$prop_name])) {$prop_value = $this - elem[$prop_name]; return true;} else {return false;}} / / Callback method for setting a property function __set($prop_name, $prop_value) {$this - elem[$prop_name] = $prop_value; return true;}} / / Here we overload the OO object overload(&apos;OO&apos;); $o = new OO; print &quot;\$o - a: $o - a\n&quot;; / / print: $o - a: print &quot;\$o - b: $o - b\n&quot;; / / print: $o - b:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php class OO {var $a = 111; var $elem = array(&apos;b &apos;= 9, &apos;c&apos; = 42); / / Metodo callback para pegar uma propriedade function __get($prop_name, $prop_value) {if (isset($this - elem[$prop_name])) {$prop_value = $this - elem[$prop_name]; return true;} else {return false;}} / / Metodo callback para definir uma propriedade function __set($prop_name, $prop_value) {$this - elem[$prop_name] = $prop_value; return true;}} / / Aqui nós sobrecarregamos o objeto OO overload(&apos;OO&apos;); $o = new OO; print &quot;\$o - a: $o - a\n&quot;; / / imprime: $o - a: print &quot;\$o - b: $o - b\n&quot;; / / imprime: $o - b:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>9 print &quot;\$o - c: $o - c\n&quot;; / / print: $o - c:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>9 print &quot;\$o - c: $o - c\n&quot;; / / imprime: $o - c:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>42 print &quot;\$o - d: $o - d\n&quot;; / / print: $o - d: / / add a new item to the $elem array in OO $o - x = 56; / / instantiate stdclass (it is built-in in PHP 4) / / $val is not overloaded! $val = new stdclass; $val - prop = 555; / / Set &quot;a&quot; to be an array with the $val object in it / / But __set() will put this in the $elem array $o - a = array($val); var_dump($o - a[0] - prop);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>42 print &quot;\$o - d: $o - d\n&quot;; / / imprime: $o - d: / / adicionar um novo intem para o array $elem em OO $o - x = 56; / / iniciar stdclass (é integrada no PHP 4) / / $var não é sobrecarregada! $val = new stdclass; $val - prop = 555; / / Que &quot;a&quot; seja um array com o objeto $val dentro dele / / mas __set() o colocará no array $elem $o - a = array($val); var_dump($o - a[0] - prop);?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As this is an experimental extension, not all things work.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como esta é uma extensão experimental, nem todas as coisas funcionam.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no __call() support currently, you can only overload the get and set operations for properties.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não existe ainda suporte para __call() Não existe ainda suporte para __call() e você somente pode fazer a sobrecaraga das operações get e set para propriedades.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot invoke the original overloading handlers of the class, and __set() only works to one level of property access.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode invocar as chamadas originais da classe e __set() somente funciona até um nível de acesso de propriedades.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You &apos;ll need to install the sqlcli library available in the Ovrimos SQL Server distribution.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>DIR is the Ovrimos&apos; libsqlcli install directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Connect to Ovrimos SQL Server and select from a system table</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Process Control support in PHP implements the Unix style of process creation, program execution, signal handling and process termination.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Process Control Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently, this module will not function on non-Unix platforms (Windows).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see your systems signal( 7) man page for details of the default behavior of these signals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php declare( ticks=1); $pid = pcntl_fork(); if ($pid == -1) {die(&quot;could not fork&quot;);} else if ($pid) {exit(); / / we are the parent} else {/ / we are the child} / / detatch from the controlling terminal if (!posix_setsid()) {die(&quot;could not detach from terminal&quot;);} / / setup signal handlers pcntl_signal(SIGTERM, &quot;sig_handler&quot;); pcntl_signal(SIGHUP, &quot;sig_handler&quot;); / / loop forever performing tasks while(1) {/ / do something interesting here} function sig_handler($signo) {switch($signo) {case SIGTERM: / / handle shutdown tasks exit; break; case SIGHUP: / / handle restart tasks break; default: / / handle all other signals}}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The syntax for patterns used in these functions closely resembles Perl.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Regular Expression Functions (Perl-Compatible)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is available at ftp: / /ftp.csx.cam.ac.uk / pub / software / programming / pcre /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This flag is available since PHP 4.3.0 and is only used for preg_split().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PDF functions in PHP can create PDF files using the PDFlib library created by Thomas Merz.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When using version 3.x of PDFlib, you should configure PDFlib with the option --enable-shared-pdflib.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>pdf_get_value() passing &quot;imageheight &quot;as the second parameter and the image as the third parameter.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2. pdfclock example from PDFlib distribution</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2. pdfclock example from PDFlib distribution</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $radius = 200; $margin = 20; $pagecount = 10; $pdf = pdf_new(); if (!pdf_open_file($pdf, &quot;&quot;)) {print error; exit;}; pdf_set_parameter($pdf, &quot;warning&quot;, &quot;true&quot;); pdf_set_info($pdf, &quot;Creator&quot;, &quot;pdf_clock.php&quot;); pdf_set_info($pdf, &quot;Author&quot;, &quot;Uwe Steinmann&quot;); pdf_set_info($pdf, &quot;Title&quot;, &quot;Analog Clock&quot;); while($pagecount- - 0) {pdf_begin_page($pdf, 2 * ($radius + $margin), 2 * ($radius + $margin)); pdf_set_parameter($pdf, &quot;transition&quot;, &quot;wipe&quot;); pdf_set_value($pdf, &quot;duration&quot;, 0.5); pdf_translate($pdf, $radius + $margin, $radius + $margin); pdf_save($pdf); pdf_setrgbcolor($pdf, 0.0, 0.0, 1.0); / * minute strokes * / pdf_setlinewidth($pdf, 2.0); for ($alpha = 0; $alpha 360; $alpha += 6) {pdf_rotate($pdf, 6.0); pdf_moveto($pdf, $radius, 0.0); pdf_lineto($pdf, $radius-$margin / 3, 0.0); pdf_stroke($pdf);} pdf_restore($pdf); pdf_save($pdf); / * 5 minute strokes * / pdf_setlinewidth($pdf, 3.0); for ($alpha = 0; $alpha 360; $alpha += 30) {pdf_rotate($pdf, 30.0); pdf_moveto($pdf, $radius, 0.0); pdf_lineto($pdf, $radius-$margin, 0.0); pdf_stroke($pdf);} $ltime = getdate(); / * draw hour hand * / pdf_save($pdf); pdf_rotate($pdf, -(($ltime[&apos;minutes&apos;] / 60.0)+$ltime[&apos;hours&apos;]-3.0)*30.0); pdf_moveto($pdf, -$radius / 10, -$radius / 20); pdf_lineto($pdf, $radius / 2, 0.0); pdf_lineto($pdf, -$radius / 10, $radius / 20); pdf_closepath($pdf); pdf_fill($pdf); pdf_restore($pdf); / * draw minute hand * / pdf_save($pdf); pdf_rotate($pdf, -(($ltime[&apos;seconds&apos;] / 60.0)+$ltime[&apos;minutes&apos;]-15.0)*6.0); pdf_moveto($pdf, -$radius / 10, -$radius / 20); pdf_lineto($pdf, $radius * 0.8, 0.0); pdf_lineto($pdf, -$radius / 10, $radius / 20); pdf_closepath($pdf); pdf_fill($pdf); pdf_restore($pdf); / * draw second hand * / pdf_setrgbcolor($pdf, 1.0, 0.0, 0.0); pdf_setlinewidth($pdf, 2); pdf_save($pdf); pdf_rotate($pdf, -(($ltime[&apos;seconds&apos;] - 15.0) * 6.0)); pdf_moveto($pdf, -$radius / 5, 0.0); pdf_lineto($pdf, $radius, 0.0); pdf_stroke($pdf); pdf_restore($pdf); / * draw little circle at center * / pdf_circle($pdf, 0, 0, $radius / 30); pdf_fill($pdf); pdf_restore($pdf); pdf_end_page($pdf); # to see some difference sleep(1);} pdf_close($pdf); $buf = pdf_get_buffer($pdf); $len = strlen($buf); header(&quot;Content-type: application / pdf&quot;); header(&quot;Content-Length: $len&quot;); header(&quot;Content-Disposition: inline; filename=foo.pdf&quot;); print $buf; pdf_delete($pdf);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Copy the header file pfpro.h to / usr / local / include and the library file libpfpro.so to / usr / local / lib.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are only available if PHP has been compiled with the --with-pfpro[ =DIR] option.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL database is Open Source product and available without cost.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Postgres, developed originally in the UC Berkeley Computer Science Department, pioneered many of the object-relational concepts now becoming available in some commercial databases.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O Postgres, desenvolvido originalmente no Departamento de Ciência de Computação da Universidade de Berkeley, foi pioneiro em muitos dos conceitos objeto-relacionais que agora estão disponíveis em alguns bancos de dados comerciais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It provides SQL92 / SQL99 language support, transaction integrity and type extensibility.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Fornece suporte a linguagem SQL92 / SQL99, integridade de transações e extensibilidade de tipos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL is an open source descendant of this original Berkeley code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O PostgreSQL é um descendente com código aberto do código original desenvolvido em Berkeley.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use PostgreSQL support, you need PostgreSQL 6.5 or later, PostgreSQL 7.0 or later to enable all PostgreSQL module features.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para usar usar as funções para PostgreSQL, você precisa do PostgreSQL 6.5 ou superior e PostgreSQL 7.0 ou superior para habilitar todos os recursos deste módulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL supports many character encoding including multibyte character encoding.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PostgreSQL suporta inúmeros tipos de codificação de caracteres incluindo a codificação de caracteres multibyte.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The current version and more information about PostgreSQL is available at http: / /www.postgresql.org /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to enable PostgreSQL support, --with-pgsql[ =DIR] is required when you compile PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para habilitar o módulo de funções para PostgreSQL, a opção de configuração --with-pgsql[ =DIR] deve ser usada no momento da compilação do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If shared object module is available, PostgreSQL module may be loaded using extension directive in php.ini or dl() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL configuration options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de configuração do PostgreSQL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui está uma pequena explicação sobre as diretivas de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether to allow persistent Postgres connections.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se quer ou não permitir conexões persistentes com o PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of persistent Postgres connections per process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número máximo de conexões persistentes com PostgreSQL por processo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The maximum number of Postgres connections per process, including persistent connections.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como usar e algumas dicas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using the PostgreSQL module with PHP 4.0.6 is not recommended due to a bug in the notice message handling code.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usar o módulo PostgreSQL com o PHP 4.0.6 não é recomendado devido a um bug no código de manipulação de notificações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use 4.1.0 or later.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use o 4.1.0 ou superior.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PostgreSQL function names will be changed in 4.2.0 release to confirm to current coding standards.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os nomes das funções PostgreSQL serão alterados na versão 4.2.0 para confirmar os padrões de programação atuais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Most of new names will have additional underscores, e.g. pg_lo_open().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A maioria dos novos nomes terão sublinhados (underscore) adicionais, por exemplo, pg_lo_open().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some functions are renamed to different name for consistency. e.g. pg_exec() to pg_query().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Algumas funções foram renomeadas para uma maior consistência, por exemplo, pg_exec() mudou para pg_query().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os nomes antigos podem ser usados na 4.2.0 e em algumas poucas outras versões após esta, mas eles serão removidos futuramente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Function names changed</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>New name</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nomes de funções alterados</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The old pg_connect() / pg_pconnect() syntax will be deprecated to support asynchronous connections in the future.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A antiga sintaxe pg_connect() / pg_pconnect() ficará obsoleta para suportar conexões assíncronas no futuro.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please use a connection string for pg_connect() and pg_pconnect().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por favor, use a string de conexão para pg_connect() e pg_pconnect().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not all functions are supported by all builds.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nem todas as funções são suportadas por todas as compilações.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It depends on your libpq (The PostgreSQL C Client interface) version and how libpq is compiled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isso vai depender da versão da libpq (A interface cliente em C para PostgreSQL) e como esta foi compilada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If there is missing function, libpq does not support the feature required for the function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se há alguma função ausente, é porque a libpq não suporta a característica exigida por esta função.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>It is also important that you do not use an older libpq than the PostgreSQL Server to which you will be connecting.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Também é importante que você use uma versão da libpq mais nova do que a que o servidor exige.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you use libpq older than PostgreSQL Server expects, you may have problems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você usar uma versão mais antiga do que a que o servidor espera, você poderá ter problemas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Since version 6.3 (03 / 02 / 1998) PostgreSQL uses unix domain sockets by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desde a versão 6.3 (03 / 02 / 1998), o PostgreSQL usa sockets de domínio unix por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>TCP port will NOT be opened by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A porta TCP não ficará aberta por padrão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A table is shown below describing these new connection possibilities.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma tabela é mostrada abaixo descrevendo essas novas possibilidades de conexão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This socket will be found in / tmp / .s.PGSQL.5432.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este socket será encontrado em / tmp / .s.PGSQL.5432.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option can be enabled with the &apos;-i&apos; flag to postmaster and it&apos;s meaning is: &quot;listen on TCP / IP sockets as well as Unix domain sockets &quot;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção pode ser habilitada com o parâmetro &apos;-i&apos; para o postmaster e seu significado é: &quot;escute em sockets TCP / IP assim como em sockets de domínio Unix &quot;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Postmaster and PHP</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Postmaster e PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A connection to PostgreSQL server can be established with the following value pairs set in the command string: $conn = pg_connect( &quot;host=myHost port=myPort tty=myTTY options=myOptions dbname=myDB user=myUser password=myPassword &quot;);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uma conexão com o servidor PostgreSQL pode ser estabelecida com os seguintes pares de valores definidos na string de comando: $conn = pg_connect( &quot;host=seuHost port=suaPorta tty=seuTTY options=suasOpcoes dbname=seuDB user=seuUsuario password=suaSenha&quot;);</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The previous syntax of: $conn = pg_connect (&quot;host&quot;, &quot;port&quot;, &quot;options&quot;, &quot;tty&quot;, &quot;dbname&quot;) has been deprecated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sintaxe anterior: $conn = pg_connect (&quot;host&quot;, &quot;porta&quot;, &quot;opcoes&quot;, &quot;tty&quot;, &quot;nomebd&quot;) ficará obsoleta.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Environmental variables affect PostgreSQL server / client behavior.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis de ambiente afetam o comportamento do servidor / cliente PostgreSQL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, PostgreSQL module will lookup PGHOST environment variable when the hostname is omitted in the connection string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, o módulo PostgreSQL irá procurar pela variável de ambiente PGHOST quando o nome de host é omitido na string de conexão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Supported environment variables are different from version to version.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As variáveis de ambiente suportadas variam de versão para versão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Refer to PostgreSQL Programmer&apos; s Manual (libpq - Environment Variables) for details.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Vide o Manual de Programador do PostgreSQL (Programmer´s Manual, na seção libpq - Enviroment Variables) para maiores detalhes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Make sure you set environment variables for appropriate user.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Certifique-se que você definiu as variáveis de ambiente para o usuário apropriado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use $_ENV or getenv() to check which environment variables are available to the current process.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Use $_ENV ou getenv() para verificar se as variáveis de ambiente estão disponíveis para o processo atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Setting default parameters</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Definindo os parâmetros padrão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PGHOST=pgsql.example.com PGPORT=7890 PGDATABASE=web-system PGUSER=web-user PGPASSWORD=secret PGDATESTYLE=ISO PGTZ=JST PGCLIENTENCODING=EUC-JP export PGHOST PGPORT PGDATABASE PGUSER PGPASSWORD PGDATESTYLE PGTZ PGCLIENTENCODING</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Starting with PostgreSQL 7.1.0, you can store up to 1GB into a field of type text.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A partir do PostgreSQL 7.1.0, você pode armazenar até 1GB dentro de um campo do tipo texto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In older versions, this was limited to the block size (default was 8KB, maximum was 32KB, defined at compile time)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões mais antigas, isto era limitado ao tamanho do bloco (o padrão era 8KB e o máximo era 32KB, definido em tempo de compilação).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use the large object (lo) interface, it is required to enclose large object functions within a transaction block.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para usar a interface de objetos grandes (large objects), é exigido que se encapsule as funções de objetos grandes em um bloco de transação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A transaction block starts with a SQL statement BEGIN and if the transaction was valid ends with COMMIT or END.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um bloco de transação inicia-se com a declaração SQL BEGIN e, se a transação for válida, termina com COMMIT ou END.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the transaction fails the transaction should be closed with ROLLBACK or ABORT.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a transação falhar, ela deve ser fechada com ROLLBACK ou ABORT.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using Large Objects</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usando Objetos Grandes (large objects)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are only available under Windows 9.x, ME, NT4 and 2000.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Printer functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>They have been added in PHP 4.0.4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Printer configuration options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O comportamento dessas funções podem ser modificado pelas configurações do php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To compile PHP with pspell support, you need the aspell and pspell libraries, available from http: / /aspell.sourceforge.net / and http: / /aspell.net / respectively.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you have the libraries needed add the --with-pspell[ =dir] option when compiling PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>LXXXIX. qtdom functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The readline() functions implement an interface to the GNU Readline library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>GNU Readline</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The libedit library is BSD licensend and available for download from http: / /sourceforge.net / projects / libedit /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order you want to use the libedit readline replacement, configure PHP --with-libedit[ =DIR].</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extenção não define nenhum parâmetro de configuração no php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module contains an interface to the GNU Recode library, version 3.5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>GNU Recode functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XC.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP also supports regular expressions using a Perl-compatible syntax using the PCRE functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>ereg (&quot;abc&quot;, $string); / * Returns true if&quot;abc &quot;is found anywhere in $string. * / ereg (&quot;^abc&quot;, $string); / * Returns true if &quot;abc&quot;; is found at the beginning of $string. * / ereg (&quot;abc$&quot;, $string); / * Returns true if &quot;abc&quot; is found at the end of $string. * / eregi (&quot;(ozilla .[23]_BAR_MSIE.3)&quot;, $HTTP_USER_AGENT); / * Returns true if client browser is Netscape 2, 3 or MSIE 3. * / ereg (&quot;([[:alnum :]]+) ([[:alnum :]]+) ([[:alnum :]]+)&quot;, $string,$regs); / * Places three space separated words into $regs[1], $regs[2] and $regs[3]. * / $string = ereg_replace (&quot;^&quot;, &quot;br /&quot;, $string); / * Put a br / tag at the beginning of $string. * / $string = ereg_replace (&quot;$&quot;, &quot;br /&quot;, $string); / * Put a br /; tag at the end of $string. * / $string = ereg_replace (&quot;\n&quot;, &quot;&quot;, $string); / * Get rid of any newline characters in $string. * /</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja Também</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module provides wrappers for the System V IPC family of functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Semaphore, Shared Memory and IPC Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To enable the System V messages support compile PHP with the option --enable-sysvmsg.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>SESAM / SQL-Server is a mainframe database system, developed by Fujitsu Siemens Computers, Germany.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SESAM database functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP 4 does not support the SESAM database.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The message catalog must be set ACCESS=READ,SHARE=YES because it must be readable by the apache server &apos;s user id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuration notes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Because the SQL command quoting for single quotes uses duplicated single quotes (as opposed to a single quote preceded by a backslash, used in some other databases), it is advisable to set the PHP configuration directives php3_magic_quotes_gpc and php3_magic_quotes_sybase to On for all PHP scripts using the SESAM interface.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Runtime considerations</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Restrict access to php scripts which must administer the database by using password control and / or SSL security.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Migration from other SQL databases</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When specifying RESTRICT, an error is returned if there are dependent objects (e.g., VIEWs), while with CASCADE, dependent objects will be deleted along with the specified table.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Notes on the use of various SQL types</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session support in PHP consists of a way to preserve certain data across subsequent accesses.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XCIII.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This enables you to build more customized applications and increase the appeal of your web site.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Manejo de sessões</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A visitor accessing your web site is assigned an unique id, the so-called session id.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session support allows you to register arbitrary numbers of variables to be preserved across requests.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte a sessões no PHP consiste em uma forma de preservar certos dados através de acessos subseqüentes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All registered variables are serialized after the request finishes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto te permite construir aplicações mais personalizadas e aumenta a atração ao seu web site.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On subsequent accesses, these are not defined by the session module unless the user defines them later.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está familiarizado com o gerenciamento de sessões do PHPLIB, você irá notar que alguns conceitos são similares ao suporte de sessões do PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note when working with sessions that a record of a session is not created until a variable has been registered using the session_register() function or by adding a new key to the $_SESSION superglobal array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um visitante acessando seu web site está determinado por uma única id, a então chamada id de sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>External links:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta ou é guardada em um cookie do lado do usuário ou está na URL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session module cannot guarantee that the information you store in a session is only viewed by the user who created the session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Sessões te permite registrar arbitrariamente números de variáveis para estarem lado a lado com os requerimentos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Assess the importance of the data carried by your sessions and deploy addditional protections - - this usually comes at a price, reduced convenience for the user.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando um visitante acessa seu site, o PHP checará automaticamente (se session.auto_start está definida para 1) ou no seu pedido (explicitamente através da session_start() ou implicitamente através da session_register()) se uma id de sessão especifica foi enviada com o pedido.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, if you want to protect users from simple social engineering tactics, you need to enable session.use_only_cookies.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se este é o caso, o ambiente anterior guardado é restaurado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are several ways to leak an existing session id to third parties.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas as variáveis registradas são publicadas em série após o pedido terminar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>First, URLs carrying session ids.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis registradas que estão indefinidas estão marcadas como estando não definida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Second, a more active attacker might listen to your network traffic.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Num acesso subseqüente, estas não estarão definidas pelo módulo da sessão a menos que o usuário defina elas mais tarde.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If it is not encrypted, session ids will flow in plain text over the network.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The solution here is to implement SSL on your server and make it mandatory for users.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Manejo de sessões foi adicionado no PHP 4.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Engelschall, for session storage.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma biblioteca externa é necessária para compilar esta extensão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option is not available for Windows platforms.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that the session storage module for mm does not guarantee that concurrent accesses to the same session are properly locked.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Suporte a sessões esta habilitado no PHP 4.0 por definição.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session support is enabled in PHP by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você não gostaria de seu PHP com suporte a sessão, você especifica a opção de configuração --disable-session.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you would not like to build your PHP with session support, you should specify the --disable-session option to configure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O sistema de suporte de sessão oferece no arquivo php.ini numerosas opções de configuração. nós daremos um breve resumo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The behaviour of these functions is affected by settings in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.save_handler define o nome do operador( funções-handler) que é usado para guardar e resgatar dados associados com a sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session configuration options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição files.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.save_path</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.save_path session.save_path define o argumento que que é passado para o save handler.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.save_handler</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você escolher o default files handler, este é o caminho onde os arquivos serão criados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.auto_start</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição para / tmp.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.gc_probability</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a profundidade do caminho de session.save_path é maior do que 2, coleção de lixo não será executada( garbage collection - gc).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.gc_maxlifetime</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Atenção</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.serialize_handler</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você deixar isto definido para um diretório muito visível, tal como / tmp (o padrão), outros usuários do servidor poderão ser capazes de assumir o controle da sessão obtendo a lista de arquivos naquele diretório.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cookie_lifetime</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.name session.name especifica o nome da sessão que é usada como nome de cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cookie_path</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Ela poderia apenas conter caracteres alfanuméricos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cookie_domain</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição PHPSESSID.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cookie_secure</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.auto_start session.auto_start especifica se o módulo da sessão inicia a sessão automaticamente num pedido na inicialização.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.use_cookies</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição 0 (desabilitado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.use_only_cookies</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.cookie_lifetime especifica o tempo de vida de um cookie em segundos que é enviado para o navegador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.referer_check</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor 0 significa &quot;até que o navegador seja fechado.&quot; Por definição 0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.entropy_file</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.serialize_handler define o nome do operador( handler) que é usado para serializar / deserializar dados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.entropy_length</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Correntemente, um formato interno do PHP (nome php) e WDDX é suportado (nome wddx).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cache_limiter</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>WDDX está apenas disponível, se o PHP está compilado com o suporte WDDX support.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cache_expire</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição php.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.use_trans_sid</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.gc_probability especifica a probabilidade que a rotina gc (coleção de lixo-garbage collection) é iniciada em cada pedido em porcentagem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP_INI_SYSTEM _BAR_ PHP_INI_PERDIR</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;a=href,area=href,frame=src,input=src,form=fakeentry&quot;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.gc_maxlifetime especifica o número de segundos depois que o dado será visto como &apos;lixo&apos; e limpado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session management system supports a number of configuration options which you can place in your php.ini file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.referer_check session.referer_check contém a substring que você quer checar cada HTTP Referer para.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.save_handler defines the name of the handler which is used for storing and retrieving data associated with a session.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o Referer foi enviado pelo cliente e a substring não foi encontrada, a id de sessão embutida será percebida como inválida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_set_save_handler().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição uma string vazia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you choose the default files handler, this is the path where the files are created.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.entropy_file session.entropy_file dá um caminho para um recurso externo( file) que será usado como um entropy source na criação da id de sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_save_path().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>São exemplos / dev / random ou / dev / urandom que estão disponéveis em muitos Sistemas Unix.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you leave this set to a world-readable directory, such as / tmp (the default), other users on the server may be able to hijack sessions by getting the list of files in that directory.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.entropy_length especifíca o número de bytes que serão lidos do arquivo especificado acima.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows users have to change this variable in order to use PHP &apos;s session functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição 0 (desabilitada).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.name session.name specifies the name of the session which is used as cookie name.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.use_cookies session.use_cookies especifica se o módulo usará cookies para gravar a id de sessão no lado do cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to PHPSESSID.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição 1 (habilitada).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.auto_start specifies whether the session module starts a session automatically on request startup.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.use_only_cookies especifica se o módulo usará apenas cookies para gravar a id de sessão no lado do cliente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 0 (disabled).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição 0 (desabilitada).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently, a PHP internal format (name php) and WDDX is supported (name wddx).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Habilitar esta definição previni ataques envolvendo id de sessão passadas em URLs.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>WDDX is only available, if PHP is compiled with WDDX support.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta definição foi adicionada no PHP 4.3.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.gc_probability specifies the probability that the gc (garbage collection) routine is started on each request in percent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.cookie_path session.cookie_path especifica o caminho para definir em session_cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição /.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.cookie_domain session.cookie_domain especifica o domínio para para definir em session_cookie.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Windows FAT does not so you will have to come up with another way to handle garbage collecting your session if you are stuck with a FAT filesystem or any other fs where atime tracking is not available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhuma definição.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the Referer was sent by the client and the substring was not found, the embedded session id will be marked as invalid.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.cache_limiter especifica o método de controle do cache para usar para páginas de sessão (none / nocache / private / private_no_expire / public).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to the empty string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição nocache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Examples are / dev / random or / dev / urandom which are available on many Unix systems.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.cache_expire session.cache_expire especifica o tempo de vida para páginas de sessão no cache em minutos, isto não tem efeito para para limitador sem cache.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.entropy_length specifies the number of bytes which will be read from the file specified above.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição 180.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.use_cookies session.use_cookies specifies whether the module will use cookies to store the session id on the client side.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>session.use_trans_sid se o suporte de sid transparente está habilitado ou não, se habilitado por compilação com --enable-trans-sid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 1 (enabled).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição 1 (habilitado).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 0 (disabled, for backward compatibility).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>url_rewriter.tags url_rewriter.tags especifica quais tags html estão reescritas para incluir id de sessão se o suporte transparente de sid está habilitado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This setting was added in PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por definição a=href,area=href,frame=src,input=src,form=fakeentry</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value 0 means &quot;until the browser is closed.&quot; Defaults to 0 .See also session_get_cookie_params() and session_set_cookie_params().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A configuração de track_vars e register_globals influencia em como as variáveis da sessão conseguem armazenar e devolver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cookie_path session.cookie_path specifies path to set in session_cookie.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>session.cookie_domain specifies the domain to set in session_cookie.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4.0.3, track_vars está sempre ligada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_get_cookie_params() and session_set_cookie_params().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to off.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhum tipo resource.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_get_cookie_params() and session_set_cookie_params().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to nocache.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As contantes abaixo são definidas por esta extensão e somente estarão disponíveis quando a extensão foi compilada com o PHP ou carregada dinamicamente durante a execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 180.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also session_cache_expire().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Defaults to 0 (disabled).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>No PHP 4.1.0, $_SESSION está disponível como variável global apenas como $_POST, $_GET, $_REQUEST e assim por diante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For PHP 4.1.2 or less, it is enabled by compiling with --enable-trans-sid.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não como $HTTP_SESSION_VARS, $_SESSION está sempre global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>URL based session management has additional security risks compared to cookie based session management.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então, global poderia não ser usada para $_SESSION.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>url_rewriter.tags url_rewriter.tags specifies which html tags are rewritten to include session id if transparent sid support is enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se track_vars is habilitada e register_globals está desabilitada, apenas aquelas membros da matriz associativa $HTTP_SESSION_VARS Se track_vars is habilitada e register_globals está desabilitada, apenas aquelas membros da matriz associativa $HTTP_SESSION_VARS podem ser registradas em uma sessão de variáveis.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The track_vars and register_globals configuration settings influence how the session variables get stored and restored.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A sessão de variáveis restauradas somente estarão disponíveis na matriz $HTTP_SESSION_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As of PHP 4.0.3, track_vars is always turned on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Registrando uma variável com track_vars habilitada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php session_start(); if (isset($HTTP_SESSION_VARS[&apos;count&apos;])) {$HTTP_SESSION_VARS[&apos;count&apos;]++;} else {$HTTP_SESSION_VARS[&apos;count&apos;] = 0;}?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Uso de $_SESSION (ou $HTTP_SESSION_VARS com PHP 4.0.6 ou inferior) é recomendado por segurança e code readablity.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unlike $HTTP_SESSION_VARS, $_SESSION is always global.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Com $_SESSION ou $HTTP_SESSION_VARS, não á necessidade de usar as funções session_register() / session_unregister() / session_is_registered().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore, you do not need to use the global keyword for $_SESSION.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Usuários podem acessar variável de sessão como uma variável normal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please note that this documentation has been changed to use $_SESSION everywhere.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can substitute $HTTP_SESSION_VARS for $_SESSION, if you prefer the former.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Registrando uma variável com $_SESSION.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For more details see the section on variables in this manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If register_globals is disabled, only members of the global associative array $_SESSION can be registered as session variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desregistrando uma variável com $_SESSION.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Session variables are accessible like any other variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a register_globals está habilitada, então todas as variáveis globais podem ser registradas como variáveis de sessão e as variáveis de sessão serão restauradas para a variável global correspondente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php session_start(); / / Use $HTTP_SESSION_VARS with PHP 4.0.6 or less if (!isset($_SESSION[&apos;count&apos;])) {$_SESSION[&apos;count&apos;] = 0;} else {$_SESSION[&apos;count&apos;]++;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Visto que o PHP deve saber quais variáveis globais estão registradas como variáveis de sessão, usuaários devem registrar variáveis com a função session_register() enquanto $HTTP_SESSION_VARS / $_SESSION não necessita utilizar session_register().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cuidado</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php session_start(); / / Use $HTTP_SESSION_VARS with PHP 4.0.6 or less unset($_SESSION[&apos;count&apos;]);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você está usando $HTTP_SESSION_VARS / $_SESSION e desabilitada register_globals, não faça uso de session_register(), session_is_registered() e session_unregister().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php session_start(); / / With PHP 4.3 and later, you can also simply use the prior example. session_unregister(&apos;count&apos;);?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você habilita register_globals, session_unregister() Se você habilita register_globals, session_unregister() poderiam ser usadas desde que as variáveis de sessão estejam registradas como variáveis globais quando os dados da sessão não estão em série.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If register_globals is enabled, then each global variable can be registered as session variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Desabilitar register_globals é recomendado para ambas razões, segurança e performance.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Upon a restart of a session, these variables will be restored to corresponding global variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Registrando uma variável com register_globals habilitada</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you are using $_SESSION and disable register_globals, do not use session_register(), session_is_registered() and session_unregister(), if your scripts shall work in PHP 4.2 and earlier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se ambas track_vars e register_globals estão habilitadas, então as variáveis globais e as entradas $HTTP_SESSION_VARS / $_SESSION farão referência ao mesmo valor para as variáveis já registradas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you enable register_globals, session_unregister() If you enable register_globals, session_unregister() should be used since session variables are registered as global variables when session data is deserialized.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o usuário utiliza session_register() para registrar variável de sessão, $HTTP_SESSION_VARS / $_SESSION não terão esta variável numa matriz até que ela seja lida de um armazém de sessão. (i.e. até o próximo pedido)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Disabling register_globals is recommended for both security and performance reasons.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Passando a ID de sessão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Registering a variable with register_globals enabled</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Há dois métodos para propagar uma id de sessão:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is a defect in PHP 4.2.3 and earlier.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Parâmetro URL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you register a new session variable by using session_register(), the entry in the global scope and the $_SESSION entry will not reference the same value until the next session_start().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Módulo de sessão suporta ambos os métodos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This has been corrected in PHP 4.3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cookies são mais eficientes, mas se eles não estiverem autorizados (clientes não são obrigados a aceita-los), nós não podemos conter deles.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O segundo método inclui a id de sessão diretamente na URL.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The session module supports both methods.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP é capaz de fazer isto transparentemente quando compilado com --enable-trans-sid.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Cookies are optimal, but because they are not always available, we also provide an alternative way.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você habilitar esta opção, URIs ligadas serão automaticamente mudadas para conter a id de sessão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is capable of transforming links transparently.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Alternativamente, você pode usar a constante SID que é definida, se o cliente não enviar o cookie apropriado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Unless you are using PHP 4.2 or later, you need to enable it manually when building PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SID é do formulário session_name=session_id ou é uma string vazia.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Under UNIX, pass --enable-trans-sid to configure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this build option and the run-time option session.use_trans_sid are enabled, relative URIs will be changed to contain the session id automatically.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A diretriz arg_separator.output php.ini permite personalizar o argumento separador.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The arg_separator.output php.ini directive allows to customize the argument seperator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O seguinte exemplo demonstra como registrar uma variável, e e como ligar corretamente a outra página usando SID.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For full XHTML conformance, specify amp; there.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Alternatively, you can use the constant SID which is always defined.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contar o número de visitas de um simples usuário</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following example demonstrates how to register a variable, and how to link correctly to another page using SID.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hello visitor, you have seen this page ?php echo $count;? times. p; ?php # the ?php echo SID? (?=SID? can be used if short tag is enabled) # is necessary to preserve the session id # in the case that the user has disabled cookies?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Counting the number of hits of a single user</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>To continue, A HREF=&quot; nextpage.php? ?php echo SID? &quot;click here / A</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php if (!session_is_registered(&apos;count&apos;)) {session_register(&apos;count&apos;); $count = 1;} else {$count++;}?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A ?=SID? não é necessário, se --enable-trans-sid foi usada para compilar o PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The ?php echo SID? (?=SID? can be used if short_open_tag is enabled) is necessary to preserve the session id in the case that the user has disabled cookies.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>URLs não ligadas estão assumidas para apontar para sites externos e portanto não anexam a SID, pois ela poderia escapar para outro servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Session handlers customizáveis</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To implement database storage, or any other storage method, you will need to use session_set_save_handler() to create a set of user-level storage functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para implementar o armazenamento num banco de dados, ou qualque outra forma de aramzenamento, você vai precisar usar session_set_save_handler() * para define as funções de armazenamento que são usadas (* to create a set of user-level storage functions).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shmop is an easy to use set of functions that allows PHP to read, write, create and delete UNIX shared memory segments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Shared Memory Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In PHP 4.0.3, these functions were prefixed by shm rather than shmop.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To use shmop you will need to compile PHP with the --enable-shmop parameter in your configure line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta extensão não possui nenhuma constante.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Shared Memory Operations Overview</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use the SNMP functions on Unix you need to install the UCD SNMP package.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SNMP functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>On Windows these functions are only available on NT and not on Win95 / 98.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In order to use the UCD SNMP package, you need to define NO_ZEROLENGTH_COMMUNITY to 1 before compiling it.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This directory should be moved to DRIVE:\usr\mibs, where DRIVE must be replaced with the driveletter where PHP is installed on, e.g.: c:\usr\mibs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Use this extension at your own risk.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The socket functions described here are part of an extension to PHP which must be enabled at compile time by giving the --enable-sockets option to configure.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Die Adresse wird bereits verwendet</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There are many wrappers built into PHP by default (See Appendix I), and additional, custom wrappers may be added either within a PHP script using stream_register_wrapper(), or directly from an extension using the API Reference in Chapter 43.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>There are many wrappers built into PHP by default (See Apêndice I), and additional, custom wrappers may be added either within a PHP script using stream_register_wrapper(), or directly from an extension using the API Reference in Capítulo 43.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Custom filters can be defined in a PHP script using stream_register_filter() or in an extension using the API Reference in Chapter 43.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Custom filters can be defined in a PHP script using stream_register_filter() or in an extension using the API Reference in Capítulo 43.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Appendix I for a list of PHP builtin wrappers.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>See Apêndice I for a list of PHP builtin wrappers.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Again, see Appendix I for a description of targets for builtin streams.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No steps are required to enable them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the manual page for stream_register_filter() for details on implementing user defined filters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As with most PHP internal functions if a failure occours an E_WARNING message will be generated describing the nature of the error.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions all manipulate strings in various ways.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>String functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some more specialized sections can be found in the regular expression and URL handling sections.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Todas estas funções manipulam strings de várias maneiras.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For information on how strings behave, especially with regard to usage of single quotes, double quotes, and escape sequences, see the Strings entry in the Types section of the manual.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para informações de como a string se comporta, especialmente com realção ao uso de aspas simples, aspas duplas, seqüências de escape, veja o Strings dentro da sessão Types do manual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For even more powerful string handling and manipulating functions take a look at the POSIX regular expression functions and the Perl compatible regular expression functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para as mais poderosas funções de manipulação de strings dê uma olhada em POSIX regular expression functions e Perl compatible regular expression functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP offers the ability to create Shockwave Flash files via Paul Haeberli &apos;s libswf module.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Shockwave Flash functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The libswf does not have support for Windows.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Consequently you will have to copy the files to the proper location manually.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If magic_quotes_sybase is on, a single-quote is escaped with a single-quote instead of a backslash if magic_quotes_gpc or magic_quotes_runtime are enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This value can also be set from a script by calling sybase_min_client_severity().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções Sybase</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tokenizer functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>No external libraries are needed to build this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CII.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension has no configuration directives defined in php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções URL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also unserialize().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Warning</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>CIV. vpopmail functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is a generic extension API to DLLs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions are intended for work with WDDX.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>WDDX Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>XML (eXtensible Markup Language) is a data format for structured document interchange on the Web.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XML parser functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Event Handlers</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This behaviour can be queried and controlled per XML parser with the xml_parser_get_option() and xml_parser_set_option() functions, respectively.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Error Codes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Currently, this means that such characters are replaced by a question mark.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$file = &quot;data.xml&quot;; $depth = array(); function startElement($parser, $name, $attrs) {global $depth; for ($i = 0; $i $depth[$parser]; $i++) {print&quot; &quot;;} print &quot;$name\n&quot;; $depth[$parser]++;} function endElement($parser, $name) {global $depth; $depth[$parser]--;} $xml_parser = xml_parser_create(); xml_set_element_handler($xml_parser, &quot;startElement&quot;, &quot;endElement&quot;); if (!($fp = fopen($file, &quot;r&quot;))) {die(&quot;could not open XML input&quot;);} while ($data = fread($fp, 4096)) {if (!xml_parse($xml_parser, $data, feof($fp))) {die(sprintf(&quot;XML error: %s at line %d&quot;, xml_error_string(xml_get_error_code($xml_parser)), xml_get_current_line_number($xml_parser)));}} xml_parser_free($xml_parser);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XML Tag Mapping Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$file = &quot;data.xml&quot;; $map_array = array (&quot;BOLD&quot; = &quot;B&quot;, &quot;EMPHASIS &quot;= &quot;I&quot;, &quot;LITERAL&quot; = &quot;TT &quot;); function startElement($parser, $name, $attrs) {global $map_array; if ($htmltag = $map_array[$name]) {print&quot; $htmltag &quot;;}} function endElement($parser, $name) {global $map_array; if ($htmltag = $map_array[$name]) {print&quot; / $htmltag &quot;;}} function characterData($parser, $data) {print $data;} $xml_parser = xml_parser_create(); / / use case-folding so we are sure to find the tag in $map_array xml_parser_set_option($xml_parser, XML_OPTION_CASE_FOLDING, true); xml_set_element_handler($xml_parser, &quot;startElement&quot;, &quot;endElement&quot;); xml_set_character_data_handler($xml_parser, &quot;characterData&quot;); if (!($fp = fopen($file, &quot;r&quot;))) {die(&quot;could not open XML input&quot;);} while ($data = fread($fp, 4096)) {if (!xml_parse($xml_parser, $data, feof($fp))) {die(sprintf(&quot;XML error: %s at line %d&quot;, xml_error_string(xml_get_error_code($xml_parser)), xml_get_current_line_number($xml_parser)));}} xml_parser_free($xml_parser);</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XML External Entity Example</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 4. xmltest.xml</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 4. xmltest.xml</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5. xmltest2.xml</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5. xmltest2.xml</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These functions can be used to write XML-RPC servers and clients.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introdução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This extension is bundled into PHP as of 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This PHP extension provides a processor independent API to XSLT transformations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>XSLT functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can find news information, example scripts, etc. for this extension at http: / /www.indexdata.dk / phpyaz /.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module enables you to transparently read ZIP compressed archives and the files inside them.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Zip File Functions (Read Only Access)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A normal ZIP utility is needed to create the ZIP file archives read by this library.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Instalação</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This section reflects the Zip extension as it exists in PHP 4.1.0 and later.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module enables you to transparently read and write gzip (.gz) compressed files, through versions of most of the filesystem functions which work with gzip-compressed files (and uncompressed files, too, but not with sockets).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Funções de Compressão Zlib</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Version 4.0.4 introduced a fopen-wrapper for .gz-files, so that you can use a special &apos;zlib:&apos; URL to access compressed files transparently using the normal f*() file access functions if you prepend the filename or path with a&apos;zlib: &apos;prefix when calling fopen().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This feature requires a C runtime library that provides the fopencookie() This feature requires a C runtime library that provides the fopencookie() function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A Versão 4.0.4 introduziu a função fopen-wrapper para arquivos .gz, então você pode usar o prefixo &apos;zlib:&apos; especial para acessar arquivos comprimidos transparentemente usando as funções normais de acesso a arquivos f*() se você concatenar o nome do arquivo e ou seu caminho com o prefixo &apos;zlib: &apos;quando usar a função fopen().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To my current knowledge the GNU libc is the only library that provides this feature.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Na versão 4.3.0, este prefixo especial foi mudado para &apos;zlib: / /&apos; para previnir ambiguidades com nome de arquivos contendo &apos;:&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This module uses the functions of zlib by Jean-loup Gailly and Mark Adler.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta facilidade requer uma biblioteca em tempo de execução que provê a função fopencookie().</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Zlib support in PHP is not enabled by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em meu conhecimento atual a GNU libc é a única bliblioteca que provê esta facilidade.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You will need to configure PHP --with-zlib[ =DIR]</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Requisitos</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The windows version of PHP The windows version of PHP has built in support for this extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este módulo usa as funções da zlib por Jean-loup Gailly e Mark Adler.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You do not need to load any additional extension in order to use these functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você terá que usar uma versão zlib = à 1.0.9 com este módulo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Builtin support for zlib is available with PHP 4.3.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Configuração durante execução</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The zlib extension offers the option to transparently compress your pages on-the-fly, if the requesting browser supports this.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A extensão zlib oferece a opção de comprimir transparentemente suas páginas em tempo real, se o navegador requisitante suportar isto.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Therefore there are three options in the configuration file php.ini.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Então existem três opções no arquivo de configuração php.ini.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Zlib Configuration Options</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Opções de Configuração da Zlib</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here is a short explanation of the configuration directives.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Aqui está uma breve explicação das diretrizes de configuração.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Whether to transparently compress pages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Serve para comprimir páginas de modo transparente.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If this option is set to &quot;On&quot; in php.ini or the Apache configuration, pages are compressed if the browser sends an &quot;Accept-Encoding: gzip &quot;or &quot;deflate&quot; header. &quot;Content-Encoding: gzip &quot;(respectively &quot;deflate&quot;) and &quot;Vary:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se esta opção for mudada para &quot;On&quot; no php.ini ou na configuração do Apache, as páginas serão comprimidas se o navegador enviar um cabeçalho &quot;Accept-Encoding: gzip &quot;ou &quot;deflate&quot;. &quot;Content-Encoding: gzip&quot; (respectivamente &quot;deflate&quot;) e cabeçalhos &quot;Vary:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Accept-Encoding &quot;headers are added to the output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Accept-Encoding &quot;serão adicionados para a saida.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can use ini_set() to disable this in your script if the headers aren&apos;t already sent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode usar a função ini_set() para desabilitar isto em seu script se os cabeçalhos ainda não foram enviados.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If you output a &quot;Content-Type: image /&quot; header the compression is disabled, too (in order to circumvent a Netscape bug).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se você enviar um cabeçalho à saída &quot;Content-Type: image /&quot; a compressão será desabilitada, também (para corrigir um defeito do Netscape).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can reenable it, if you add &quot;ini_set(&apos;zlib.output_compression&apos;, &apos;On&apos;)&quot; after the header call which added the image content-type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você pode reabilitar isto, se você adicionar a função &quot;ini_set(&apos;zlib.output_compression&apos;, &apos;On&apos;)&quot; depois da chamada do cabeçalho que que foi adicionado o content-type da imagem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This option also accepts integer values instead of boolean &quot;On&quot; / &quot;Off&quot;, using this you can set the output buffer size (default is 4KB).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta opção também aceita valores inteiros em vez de valores booleanos &quot;On&quot; / &quot;Off&quot;, usando isto você pode configurar o tamanho do buffer de saída (o padrão é 4KB).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Instead you must use zlib.output_handler.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em vez disto você deve usar zlib.output_handler.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Compression level used for transparent output compression.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nível de compressão usado para as saídas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot specify additional output handlers if zlib.output_compression is activated here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode especificar tratamentos adicionais de saída se zlib.output_compression for ativado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This setting does the same as output_handler but in a different order.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tipos Resource</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This example opens a temporary file and writes a test string to it, then it prints out the content of this file twice.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Este exemplo abre um arquivo temporário e gera uma string teste dentro dele, então ela mostra o conteúdo deste arquivo duas vezes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Small Zlib Example</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Pequeno Exemplo das funções Zlib</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>?php $filename = tempnam (&apos;/ tmp&apos;, &apos;zlibtest&apos;) .&apos;.gz&apos;; print &quot;html \n head / head \n body \n pre \n&quot;; $s = &quot;Only a test, test, test, test, test, test, test, test!\n&quot;; / / open file for writing with maximum compression $zp = gzopen($filename, &quot;w9&quot;); / / write string to file gzwrite($zp, $s); / / close file gzclose($zp); / / open file for reading $zp = gzopen($filename, &quot;r&quot;); / / read 3 char print gzread($zp, 3); / / output until end of the file and close it. gzpassthru($zp); print &quot;\n&quot;; / / open file and print content (the 2nd time). if (readgzfile($filename) != strlen($s)) {echo &quot;Error with zlib functions !&quot;;} unlink($filename); print&quot; / pre \n / h1 / body \n / html \n&quot;;?</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>?php $filename = tempnam (&apos;/ tmp&apos;, &apos;zlibteste&apos;) .&apos;.gz&apos;; print &quot;html \n head / head \n body \n pre \n&quot;; $s = &quot;Somente um teste, teste, teste, teste, teste, teste, teste, teste!\n&quot;; / / abre o arquivo para gerar ele com a compressão máxima $zp = gzopen($filename, &quot;w9&quot;); / / escreve a string no arquivo gzwrite($zp, $s); / / fecha o arquivo gzclose($zp); / / abre o arquivo para leitura $zp = gzopen($filename, &quot;r&quot;); / / lê 3 caracteres print gzread($zp, 3); / / mostra o conteúdo até o fim do arquivo e o fecha. gzpassthru($zp); print &quot;\n&quot;; / / abre o arquivo e imprime o conteúdo dele (pela segunda vez). if (readgzfile($filename) != strlen($s)) {echo &quot;Erro com as funções zlib !&quot;;} unlink($filename); print&quot; / pre \n / h1 / body \n / html \n&quot;;?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix G.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice G.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These classes are defined in the standard set of functions included in the PHP build.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classes padrão</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The class from which dir() is instantiated.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A classe de onde a função dir() é instanciada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These classes are defined in the Ming extension, and will only be available when that extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas classes são definidas na extensão Ming, e somente estarão disponíveis quando esta extensão for compilada dento do PHP ou carregada em tempo de execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These classes are defined in the Oracle 8 extension, and will only be available when that extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas classes são definidas na extensão Oracle 8, e somente estarão disponíveis quando esta extensão for compilada dento do PHP ou carregada em tempo de execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These classes are defined in the qtdom extension, and will only be available when that extension has either been compiled into PHP or dynamically loaded at runtime.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas classes são definidas na extensão qtdom e somente estarão disponíveis quando esta extensão for compilada dento do PHP ou carregada em tempo de execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Predefined Variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Predefined Constants</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These constants are defined by the PHP core.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Core Predefined Constants - - Constants defined in the PHP core, Zend, and SAPI modules</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List of Reserved Words</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Constantes Predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Predefined Classes</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Classes pre-definidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These constants are defined in PHP by default.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Standard Predefined Constants - - Constants defined in PHP by default</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The following is a listing of predefined identifiers in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Palavras reservadas do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>None of the identifiers listed here should be used as identifiers in a your scripts.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nenhum dos identificadores listados aqui pode ser utilizado como seus identificadores nos scripts.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These lists include keywords and predefined variable, constant, and class names.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta lista ainda não está completa.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These lists are neither exhaustive or complete.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Lista de palavras-chave (keywords)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These words have special meaning in PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas palavras tem um significado especial no PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Some of them represent things which look like functions, some look like constants, and so on--but they &apos;re not, really: they are language constructs.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Algumas delas representam coisas que parecem funções, algumas parecem constantes mas na verdade não o são realmente: elas são construtores de linguagem.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You cannot use any of the following words as constants, class names, or function names.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não pode usar nenhuma das seguintes palavras como constantes, nomes de classes ou de funções.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Using them as variable names is generally OK, but could lead to confusion.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizar como nome de variáveis geralmente não causa erros, mas pode levar a confusão.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table G-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela G-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP Keywords</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Palavras-chave do PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis predefinidas</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Introduced in 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis do servidor: $_SERVER</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In earlier versions, use $HTTP_SERVER_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introduzida na versão 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$_SERVER is an array containing information such as headers, paths, and script locations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$_SERVER é um array contendo informações como headers, caminhos e localizações do script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The entries in this array are created by the webserver.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os itens deste array são criados pelo servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no guarantee that every webserver will provide any of these; servers may omit some, or provide others not listed here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há garantias que todos os servidores web geram todas elas: alguns servidores talvez omitam algumas ou geram outras que não estão listadas aqui.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>That said, a large number of these variables are accounted for in the CGI 1.1 specification, so you should be able to expect those.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Mesmo assim, um grande número dessas variáveis estão de acordo com a especificação CGI 1.1, então você pode esperar encontrá-las nesse array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a &apos;superglobal&apos;, or automatic global, variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma variável &apos;superglobal&apos;, ou automaticamente global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This simply means that it is available in all scopes throughout a script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que ela é disponível em todos os escopos (níveis) de um script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don&apos; t need to do a global $_SERVER; to access it within functions or methods, as you do with $HTTP_SERVER_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $_SERVER; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_SERVER_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$HTTP_SERVER_VARS contains the same initial information, but is not an autoglobal. (Note that $HTTP_SERVER_VARS and $_SERVER are different variables and that PHP handles them as such)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$HTTP_SERVER_VARS contém a mesmas informações, mas ela não é uma superglobal .( Note que $HTTP_SERVER_VARS e $_SERVER são variáveis diferentes como também o PHP as manipula diferentemente)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_SERVER and $HTTP_SERVER_VARS arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a diretiva register_globals está ativa, então essas variáveis tornam-se disponíveis no escopo global do script (por exemplo, separados dos arrays $_SERVER e $HTTP_SERVER_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For related information, see the security chapter titled Using Register Globals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These individual globals are not autoglobals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas variáveis globais individuais não são superglobais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You may or may not find any of the following elements in $_SERVER.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você poderá ou não encontrar qualquer um dos seguintes elementos dentro de $_SERVER.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note that few, if any, of these will be available (or indeed have any meaning) if running PHP on the command line.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Note que poucos (ou nenhum) deles estão disponíveis (ou não terão qualquer sentido) se você estiver rodando o PHP na linha de comando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The filename of the currently executing script, relative to the document root.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome do arquivo do script atualmente em uso, relativo ao document root.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For instance, $_SERVER[ &apos;PHP_SELF&apos;] in a script at the address http: / /example.com / test.php / foo.bar would be / test.php / foo.bar.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Por exemplo, $_SERVER[ &apos;PHP_SELF&apos;] em um script com o endereço http: / /example.com / test.php / foo.bar pode ser / test.php / foo.bar.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If PHP is running as a command-line processor, this variable is not available.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se estiver rodando o PHP em linha de comando, esta variável não está disponível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Array of arguments passed to the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Array de argumentos passado para o script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When the script is run on the command line, this gives C-style access to the command line parameters.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando o script é executado na linha de comando, isto permite um acesso aos parâmetros de linha de comando no estilo do C.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When called via the GET method, this will contain the query string.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando chamado via método GET, ele conterá a query string.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contains the number of command line parameters passed to the script (if run on the command line).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém o número de parâmetros da linha de comando passados para o script (se executando da linha de comando).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>What revision of the CGI specification the server is using; i.e. &apos;CGI / 1.1&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O número de revisão da especificação CGI que o servidor está utilizando, por exemplo: &apos;CGI / 1.1&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The name of the server host under which the current script is executing.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O nome host do servidor onde o script atual é executado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the script is running on a virtual host, this will be the value defined for that virtual host.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o script está rodando em um host virtual, este será o valor definido para aquele host virtual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Server identification string, given in the headers when responding to requests.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A string de identificação do servidor, fornecida nos headers quando respondendo a requests.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Name and revision of the information protocol via which the page was requested; i.e. &apos;HTTP / 1.0&apos;;</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nome e número de revisão do protocolo de informação pelo qual a página foi requerida, por exemplo &apos;HTTP / 1.0&apos;;</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Which request method was used to access the page; i.e. &apos;GET&apos;, &apos;HEAD&apos;, &apos;POST&apos;, &apos;PUT&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Geralmente &apos;GET&apos;, &apos;HEAD&apos;, &apos;POST&apos; ou &apos;PUT&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The query string, if any, via which the page was accessed.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A query string (string de solicitação), se houver, pela qual a página foi acessada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The document root directory under which the current script is executing, as defined in the server &apos;s configuration file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O diretório raiz sob onde o script atual é executado, como definido no arquivos de configuração do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contents of the Accept: header from the current request, if there is one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conteúdo do header Accept: da requisição atual, se houver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contents of the Accept-Charset: header from the current request, if there is one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conteúdo do header Accept-Charset: da requisição atual, se houver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example: &apos;iso-8859-1,*,utf-8&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo: &apos;iso-8859-1,*,utf-8&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contents of the Accept-Encoding: header from the current request, if there is one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conteúdo do header Accept-Encoding: da requisição atual, se houver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example: &apos;gzip&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo: &apos;gzip&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contents of the Accept-Language: header from the current request, if there is one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conteúdo do header Accept-Language: da requisição atual, se houver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example: &apos;en&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo &apos;en&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contents of the Connection: header from the current request, if there is one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conteúdo do header Connection: da requisição atual, se houver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example: &apos;Keep-Alive&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo: &apos;Keep-Alive&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contents of the Host: header from the current request, if there is one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conteúdo do header Host: da requisição atual, se houver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The address of the page (if any) which referred the user agent to the current page.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O endereço da página (se houver) através da qual o agente do usuário acessou a página atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is set by the user agent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Essa diretiva é informada pelo agente do usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Not all user agents will set this, and some provide the ability to modify HTTP_REFERER as a feature.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nem todos os browsers geram esse header, e alguns ainda possuem a habilidade de modificar o conteúdo do HTTP_REFERER como recurso.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In short, it cannot really be trusted.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em poucas palavras, não é confiável.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contents of the User_Agent: header from the current request, if there is one.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O conteúdo do header User_Agent: da requisição atual, se houver.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a string denoting the user agent being which is accessing the page.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>É uma string denotando o agente de usuário pelo qual a página é acessada.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A typical example is:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Um exemplo típico é:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Among other things, you can use this value with get_browser() to tailor your page&apos;s output to the capabilities of the user agent.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Além de outras coisas, você pode utilizar este valor com get_browser() para personalizar a geração de suas páginas para as capacidades do agente do usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The IP address from which the user is viewing the current page.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O endereço IP de onde o usuário está visualizado a página atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The Host name from which the user is viewing the current page.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A porta TCP na máquina do usuário utilizada para comunicação com o servidor web.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The reverse dns lookup is based off the REMOTE_ADDR of the user.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O caminho absoluto o script atualmente em execução.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Your web server must be configured to create this variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O valor fornecido pela diretiva SERVER_ADMIN (do Apache) no arquivo de configuração do servidor.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See also gethostbyaddr().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se o script está sendo executado em um host virtual, este será os valores definidos para aquele host virtual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The port being used on the user &apos;s machine to communicate with the web server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A porta na máquina servidora utilizada pelo servidor web para comunicação.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The absolute pathname of the currently executing script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Como default, este valor é &apos;80&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The value given to the SERVER_ADMIN (for Apache) directive in the web server configuration file.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Utilizando SSL, entretanto, mudará esse valor para a porta de comunicação segura HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The port on the server machine being used by the web server for communication.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>String contendo a versão do servidor e nome do host virtual que é adicionado às páginas geradas no servidor, se ativo.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>String containing the server version and virtual host name which are added to server-generated pages, if enabled.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém o caminho completo do script atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Contains the current script &apos;s path.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>O URI fornecido para acessar a página atual, por exemplo, &apos;/ index.html&apos;.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The URI which was given in order to access this page; for instance, &apos;/ index.html&apos;.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando executando sob o Apache como módulo e fazendo autenticaçào HTTP, esta variável estará definida com o username fornecido pelo usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When running under Apache as module doing HTTP authentication this variable is set to the username provided by the user.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando executando sob o Apache como módulo e fazendo autenticaçào HTTP, esta variável estará definida com a senha fornecida pelo usuário.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When running under Apache as module doing HTTP authentication this variable is set to the password provided by the user.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Quando executando sob o Apache como módulo e fazendo autenticaçào HTTP, esta variável estará definida com o tipo de autenticação utilizado.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>When running under Apache as module doing HTTP authenticated this variable is set to the authentication type.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis de ambiente: $_ENV</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Introduced in 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introduzida na versão 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In earlier versions, use $HTTP_ENV_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores, utilize $HTTP_ENV_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These variables are imported into PHP &apos;s global namespace from the environment under which the PHP parser is running.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas variáveis são importadas dentro no espaço global do PHP do ambiente sob qual o interpretador do PHP está rodando.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Many are provided by the shell under which PHP is running and different systems are likely running different kinds of shells, a definitive list is impossible.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Muitos são são criados no shell (terminal) sob o qual o PHP é executado e sistemas diferentes normalmente utilizam vários sabores de shells, e uma lista definitiva é impossível.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Please see your shell &apos;s documentation for a list of defined environment variables.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Verifique a documentação de sua shell para a lista de variáveis ambiente definidas.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Other environment variables include the CGI variables, placed there regardless of whether PHP is running as a server module or CGI processor.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Outras variáveis ambiente incluem as variáveis CGI, informadas aqui independente do PHP estar rodando como um módulo do servidor ou como processador CGI.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don&apos; t need to do a global $_ENV; to access it within functions or methods, as you do with $HTTP_ENV_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $_ENV; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_ENV_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$HTTP_ENV_VARS contains the same initial information, but is not an autoglobal. (Note that HTTP_ENV_VARS and $_ENV are different variables and that PHP handles them as such)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$HTTP_ENV_VARS contém a mesma informação, mas não é uma superglobal. (Note que HTTP_ENV_VARS e $_ENV são variáveis diferentes como também o PHP as manipula diferentemente)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_ENV and $HTTP_ENV_VARS If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_ENV and $HTTP_ENV_VARS arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For related information, see the security chapter titled Using Register Globals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Estas variáveis globais individuais não são superglobais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These individual globals are not autoglobals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Cookies HTTP: $_COOKIE</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In earlier versions, use $HTTP_COOKIE_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores, utilize $HTTP_COOKIE_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Automatically global in any scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém um array associativo de variáveis passas para o script atual através de cookies HTTP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don&apos; t need to do a global $_COOKIE; to access it within functions or methods, as you do with $HTTP_COOKIE_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $_COOKIE; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_COOKIE_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$HTTP_COOKIE_VARS contains the same initial information, but is not an autoglobal. (Note that HTTP_COOKIE_VARS and $_COOKIE are different variables and that PHP handles them as such)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$HTTP_COOKIE_VARS contém as mesmas informações, mas não é uma superglobal. (Note que HTTP_COOKIE_VARS e $_COOKIE são variáveis diferentes como também o PHP as manipula diferentemente)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_COOKIE and $HTTP_COOKIE_VARS arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a diretiva register_globals está ativa, então essas variáveis tornam-se disponíveis no escopo global do script (por exemplo, separados dos arrays $_COOKIE e $HTTP_COOKIE_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis HTTP GET: $_GET</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Introduced in 4.1.0.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In earlier versions, use $HTTP_GET_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Introduzida na versão 4.1.0.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Automatically global in any scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém um array associativo de variáveis passadas para o script atual através do método HTTP GET.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don&apos; t need to do a global $_GET; to access it within functions or methods, as you do with $HTTP_GET_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $_GET; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_GET_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$HTTP_GET_VARS contains the same initial information, but is not an autoglobal. (Note that HTTP_GET_VARS and $_GET are different variables and that PHP handles them as such)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$HTTP_GET_VARS contém as mesmas informações, mas não é uma superglobal. (Note que HTTP_GET_VARS e $_GET são variáveis diferentes como também o PHP as manipula diferentemente)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_GET and $HTTP_GET_VARS If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_GET and $HTTP_GET_VARS arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These individual globals are not autoglobals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variaveis HTTP POST: $_POST</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In earlier versions, use $HTTP_POST_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores, use $HTTP_POST_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Automatically global in any scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém um array associativo de variáveis passadas para o script atual através do método HTTP POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This simply means that it is available in all scopes throughout a script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto siginifica que ela é disponível em todos os escopos (níveis) de um script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don&apos; t need to do a global $_POST; to access it within functions or methods, as you do with $HTTP_POST_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $_POST; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_POST_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$HTTP_POST_VARS contains the same initial information, but is not an autoglobal. (Note that HTTP_POST_VARS and $_POST are different variables and that PHP handles them as such)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$HTTP_POST_VARS contém as mesmas informações, mas não é uma superglobal. (Note que HTTP_POST_VARS e $_POST são variáveis diferentes como também o PHP as manipula diferentemente)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_POST and $HTTP_POST_VARS If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_POST and $HTTP_POST_VARS arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These individual globals are not autoglobals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis de upload de arquivos HTTP: $_FILES</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In earlier versions, use $HTTP_POST_FILES.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores, use $HTTP_POST_FILES.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Automatically global in any scope.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém um array associativo dos itens carregador no script atual através do método HTTP POST.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don&apos; t need to do a global $_FILES; to access it within functions or methods, as you do with $HTTP_POST_FILES.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $_FILES; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_FILES_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$HTTP_POST_FILES contains the same information, but is not an autoglobal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$HTTP_POST_FILES contém as mesmas informações, mas não é uma superglobal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_FILES and $HTTP_POST_FILES If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_FILES and $HTTP_POST_FILES arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These individual globals are not autoglobals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis da requisição: $_REQUEST</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>There is no equivalent array in earlier versions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Não há array equivalente em versões anteriores.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém um array associativo com os conteúdos de $_GET, $_POST, $_COOKIE e $_FILES.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to PHP 4.3.0, $_FILES information was also included into $_REQUEST.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma variável &apos;superglobal&apos;, ou automaticamente global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is a &apos;superglobal&apos;, or automatic global, variable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Isto significa que ela é disponível em todos os escopos (níveis) de um script.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This simply means that it is available in all scopes throughout a script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $_REQUEST; para pode acessá-la dentro de funções ou métodos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_REQUEST array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These individual globals are not autoglobals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variáveis de sessão: $_SESSION</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In earlier versions, use $HTTP_SESSION_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Em versões anteriores, use $HTTP_SESSION_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An associative array containing session variables available to the current script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Contém um array associativo das variáveis de sessão disponíveis para o script atual.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See the Session functions documentation for more information on how this is used.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Veja a documentação das funções de Sessões para maiores informações de como utilizá-las.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don&apos; t need to do a global $_SESSION; to access it within functions or methods, as you do with $HTTP_SESSION_VARS.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $_SESSION; para pode acessá-la dentro de funções ou métodos, como era necessário com $HTTP_SESSION_VARS.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$HTTP_SESSION_VARS contains the same information, but is not an autoglobal.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$HTTP_SESSION_VARS contém as mesmas informações, mas não é uma superglobal.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If the register_globals directive is set, then these variables will also be made available in the global scope of the script; i.e., separate from the $_SESSION and $HTTP_SESSION_VARS arrays.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Se a diretiva register_globals está ativa, então essas variáveis tornam-se disponíveis no escopo global do script (por exemplo, separados dos arrays $_SESSION e $HTTP_SESSION_VARS Para maiores informações, veja o capítulo de segurança entitulado Utilizando registradores globais.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These individual globals are not autoglobals.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Variaveis globais: $GLOBALS</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>An associative array containing references to all variables which are currently defined in the global scope of the script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Os nomes das variáveis são as chaves do array.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The variable names are the keys of the array.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta é uma variável &apos;superglobal&apos;, ou automaticamente global.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This simply means that it is available in all scopes throughout a script.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Você não precisa fazer um global $GLOBALS; para pode acessá-la dentro de funções ou métodos.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You don&apos; t need to do a global $GLOBALS; to access it within functions or methods.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A mensagem de erro anterior: $php_errormsg</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>$php_errormsg is a variable containing the text of the last error message generated by PHP.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>$php_errormsg é uma variável contendo o texto da última mensagem de erro gerada pelo PHP.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This variable will only be available within the scope in which the error occurred, and only if the track_errors configuration option is turned on (it defaults to off).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Esta variável somente está disponível no escopo em que o erro ocorreu, e somente se a opção de configuração track_errors está ativa (seu default é off).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice H.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>List of Resource Types</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table H-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela H-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Security</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Installed as an Apache module</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See below for full the explanation of the different combinations.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Case 1: only public files served</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>If your web server does not support any way of telling if the request is direct or redirected, you cannot use this option and you must use one of the other ways of running the CGI version documented here.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Case 3: setting doc_root or user_dir</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>user_dir expansion happens regardless of the doc_root setting, so you can control the document root and user directory access separately.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Case 4:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Keeping Current</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>/ / storing password hash $query = sprintf( &quot;INSERT INTO users(name,pwd) VALUES(&apos;%s&apos; ,&apos;%s&apos;) ;&quot;, addslashes($username), md5($password)); $result = pg_exec($connection, $query); / / querying if user submitted the right password $query = sprintf(&quot;SELECT 1 FROM users WHERE name=&apos;%s&apos; AND pwd=&apos;%s&apos; ;&quot;, addslashes($username), md5($password)); $result = pg_exec($connection, $query); if (pg_numrows($result) 0) {echo &quot;Welcome, $username !&quot;;} else {echo &quot;Authentication failed for $username .&quot;;}</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>SQL Injection</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-8.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-8.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-9.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-9.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-10.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-10.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Error Reporting</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-11.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-11.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-12.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-12.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-13.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-13.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Filesystem Security</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-2....</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-2....</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hiding PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-18.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-18.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-19.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-19.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-20.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-20.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This chapter starts with some general security advice, explains the different configuration option combinations and the situations they can be safely used, and describes different considerations in coding for different levels of security.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>General considerations</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using Register Globals</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-14.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-14.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-15.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-15.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-16.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-16.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>User Submitted Data</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 5-17.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 5-17.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 43.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 43.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Streams API for PHP Extension Authors</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams Common API Reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams Basics</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 43-1. simple stream example that displays the PHP home page</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 43-1. simple stream example that displays the PHP home page</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 43-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 43-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams Constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams Dir API Reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams File API Reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The PHP Streams API introduces a unified approach to the handling of files and sockets in PHP extension.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams API for PHP Extension Authors</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One or more of these values can be combined using the OR operator.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Stream open options - - Affects the operation of stream factory functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Frequently Asked Questions</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Perguntas Mais Freqüentes</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 43-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 43-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>(no version information, might be only in CVS)</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>php_stream_make_seekable</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php_stream_make_seekable() checks if origstream is seekable.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Description</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 43-1. php_stream_make_seekable() return values</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 43-1. php_stream_make_seekable() return values</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams as Resources</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 43-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 43-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 43-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 43-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams Socket API Reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php_stream_dirent char d_name[ MAXPATHLEN]</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>struct php_stream_dirent - - Holds information about a single file during dir scanning</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>php_stream_statbuf struct stat sb</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>struct php_stream_statbuf - - Holds information about a file or URL</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Streams Structures</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice J.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>List of Parser Tokens</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table J-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela J-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A simple tutorial</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Your first PHP-enabled page</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dealing with Forms</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-7.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2-7.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Here we would like to show the very basics of PHP in a short simple tutorial.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A simple tutorial</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP-enabled web pages are treated just like regular HTML pages and you can create and edit them the same way you normally create regular HTML pages.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>What do I need?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using old code with new versions of PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Something Useful</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 2-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 2-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>What &apos;s next?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Appendix I.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Apêndice I.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>List of Supported Protocols / Wrappers</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Compression Streams</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>FTP and FTPS</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>In addition to these wrappers, as of PHP 4.3, you can write your own wrappers using PHP script and stream_register_wrapper().</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>HTTP and HTTPS</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP input / output streams</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 42.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>API Macros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A set of macros was introduced into Zend&apos; s API that simplify access to zval containers (see Table 42-1).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A set of macros was introduced into Zend&apos; s API that simplify access to zval containers (see Tabela 42-1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 42-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 42-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 32.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 32.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Accepting Arguments</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Accessing Arguments</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To work around this, you have to use a set of API functions to force a type conversion on every argument that&apos; s being passed (see Table 32-1).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>To work around this, you have to use a set of API functions to force a type conversion on every argument that&apos; s being passed (see Tabela 32-1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 32-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 32-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 32-2 shows the output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Figura 32-2 shows the output.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 32-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Figura 32-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 32-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 32-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a description of both structures, see Table 32-2, Table 32-3 and Table 32-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>For a description of both structures, see Tabela 32-2, Tabela 32-3 and Tabela 32-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 32-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 32-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>See Table 32-3 for a description.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>See Tabela 32-3 for a description.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a list of available types, see Table 32-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>For a list of available types, see Tabela 32-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 32-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 32-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 32-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 32-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dealing with Arguments Passed by Reference</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Examples are given in in Example 32-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Examples are given in in Exemplo 32-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 32-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 32-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Old way of retrieving arguments (deprecated)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>One of the most important issues for language extensions is accepting and dealing with data passed via arguments.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Accepting Arguments</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 32-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Figura 32-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Retrieving Arguments</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Dealing with a Variable Number of Arguments / Optional Parameters</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>A very clever implementation of this can be found in the code handling PHP&apos; s fsockopen() located in ext / standard / fsock.c, as shown in Example 32-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>A very clever implementation of this can be found in the code handling PHP&apos; s fsockopen() located in ext / standard / fsock.c, as shown in Exemplo 32-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 32-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 32-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Assuring Write Safety for Other Parameters</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 27.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP &apos;s Automatic Build System</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The default config.m4 shown in Example 27-1 is a bit more complex:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The default config.m4 shown in Exemplo 27-1 is a bit more complex:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 27-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 27-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 38.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Calling User Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 38-1 shows a small demonstration of calling a user function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 38-1 shows a small demonstration of calling a user function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 38-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 38-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The file config.m4 is processed by buildconf and must contain all the instructions to be executed during configuration.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Reference:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For example, these can include tests for required external files, such as header files, libraries, and so on.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>config.m4</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>M4 Macros for config.m4</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>PHP defines a set of macros that can be used in this process, the most useful of which are described in Tabela 41-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Macro</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 41-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 34.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The Copy Constructor</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 28-1 shows the source.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 28-1 shows the source.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 28-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 28-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The example source makes use of some features introduced with the Zend version used in PHP 4.1.0 and above, it won &apos;t compile with older PHP 4.0.x versions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Compiling Modules</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The module shown earlier in Example 28-1 can be enabled with --enable-first_module or --enable-first_module=yes.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The module shown earlier in Exemplo 28-1 can be enabled with --enable-first_module or --enable-first_module=yes.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those who know don &apos;t talk.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Extending PHP 4.0</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Those who talk don &apos;t know.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Hacking the Core of PHP</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As soon as this point is reached, it &apos;s time to touch the heart of PHP and take a look at its core, the C code that makes PHP go.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Duplicating Variable Contents:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 39.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Initialization File Support</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Access to initialization entries can also be handled with the macros shown in Table 39-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Access to initialization entries can also be handled with the macros shown in Tabela 39-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 39-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 39-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 26.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 26.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Source Layout</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Complex Types</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Directory and File Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Note:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Source Layout</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prior to working through the rest of this chapter, you should retrieve clean, unmodified source trees of your favorite Web server.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Nota:</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Macros</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Memory Management</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>String Handling</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>&quot;Extending PHP&quot; is easier said than done.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Overview</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>PHP is such a huge and complex package that its inner workings can only be understood if you make yourself familiar with it by practicing, so we encourage you to work with the source.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>What Is Zend? and What Is PHP?</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This might sound a bit confusing at first, but it&apos; s not that complicated (see Figure 24-1).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>This might sound a bit confusing at first, but it&apos; s not that complicated (see Figura 24-1).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 24-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Figura 24-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 25.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 25.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Extension Possibilities</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Built-in Modules</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The Zend Engine</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>As shown in Figure 24-1 As shown in Figure 24-1 above, PHP can be extended primarily at three points: external modules, built-in modules, and the Zend engine.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>As shown in Figura 24-1 As shown in Figura 24-1 above, PHP can be extended primarily at three points: external modules, built-in modules, and the Zend engine.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 36.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 36.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Printing Information</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Execution Information</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For examples of these functions, see Example 36-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>For examples of these functions, see Exemplo 36-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 36-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 36-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Including Output in phpinfo()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 36-1 Example 36-1 shows a source example and its output.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 36-1 Exemplo 36-1 shows a source example and its output.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 36-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 36-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>zend_error()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 36-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 36-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 36-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Figura 36-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 35.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Returning Values</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>These macros automatically set the correspondent type and value, as described in Table 35-1 and Table 35-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>These macros automatically set the correspondent type and value, as described in Tabela 35-1 and Tabela 35-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The macros in Table 35-1 automatically return from your function, those in Table 35-2 only set the return value; they don&apos;t return from your function.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The macros in Tabela 35-1 automatically return from your function, those in Tabela 35-2 only set the return value; they don &apos;t return from your function.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 35-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 35-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 35-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 35-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 37.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Startup and Shutdown Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 31.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 31.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Source Discussion</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Declaring Exported Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The parameter list of this declaration is very important; you should keep these parameters in mind (see Table 31-1 for descriptions).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The parameter list of this declaration is very important; you should keep these parameters in mind (see Tabela 31-1 for descriptions).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 31-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 31-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Declaration of the Zend Function Block</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Internally, zend_function_entry is defined as shown in Example 31-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Internally, zend_function_entry is defined as shown in Exemplo 31-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 31-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 31-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 31-2 shows a list of all the macros that you can use to define functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 31-2 shows a list of all the macros that you can use to define functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 31-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 31-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Creation of get_module()</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Header File Inclusions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>All PHP modules follow a common structure:</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Module Structure</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Implementation of All Exported Functions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Declaration of the Zend Module Block</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>You can see the internal definition of this module in Example 31-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>You can see the internal definition of this module in Exemplo 31-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 31-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 31-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For reference purposes, you can find a list of the macros involved in declared startup and shutdown functions in Table 31-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>For reference purposes, you can find a list of the macros involved in declared startup and shutdown functions in Tabela 31-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 31-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 31-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Summary</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 30.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Troubleshooting</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 29.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Using Extensions</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>For a simple test procedure, you can copy it to your htdocs directory and try it with the source in Example 29-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>For a simple test procedure, you can copy it to your htdocs directory and try it with the source in Exemplo 29-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 29-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 29-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Calling this PHP file in your Web browser should give you the output shown in Figure 29-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Calling this PHP file in your Web browser should give you the output shown in Figura 29-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Figure 29-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Figura 29-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Chapter 33.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 33.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Creating Variables</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Próxima</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Arrays</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-1, Table 33-2 and Table 33-3 describe these functions.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 33-1, Tabela 33-2 and Tabela 33-3 describe these functions.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 33-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 33-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 33-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is done using zend_hash_update( )() for associative arrays (see Example 33-3) and zend_hash_index_update() for indexed arrays (see Example 33-4):</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>This is done using zend_hash_update( )() for associative arrays (see Exemplo 33-3) and zend_hash_index_update() for indexed arrays (see Exemplo 33-4):</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 33-3.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 33-3.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 33-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 33-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Booleans</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Creating Constants</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>To create your own constants, you can use the macros in Table 33-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>To create your own constants, you can use the macros in Tabela 33-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-6.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 33-6.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Doubles (Floats)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Macros for Automatic Global Variable Creation</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>This is somewhat bad practice, but Table Table 33-5 describes macros that do exactly this task.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>This is somewhat bad practice, but Table Tabela 33-5 describes macros that do exactly this task.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-5.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 33-5.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 33-1.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 33-1.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Longs (Integers)</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>The corresponding type value for longs is IS_LONG (see Example 33-2).</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>The corresponding type value for longs is IS_LONG (see Exemplo 33-2).</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Example 33-2.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Exemplo 33-2.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Objects</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Table 33-4.</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Tabela 33-4.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Resources</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Strings</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Prev</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Capítulo 40.</seg></tuv>
    </tu>
    <tu>
      <tuv xml:lang="en"><seg>Next</seg></tuv>
      <tuv xml:lang="pt_BR"><seg>Where to Go from Here</seg></tuv>
    </tu>
  </body>
</tmx>
